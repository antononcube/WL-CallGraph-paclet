Notebook[{

Cell[CellGroupData[{
Cell["AntonAntonov/CallGraph", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->521683968,ExpressionUUID->"c68dbe0a-745d-44c7-b1e8-ba0041850a32"],

Cell["Call graph generation", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{3.893597632718486*^9},
 CellTags->{"Description", "TemplateCell"},
 CellID->1914203122,ExpressionUUID->"5ef576bb-0b3f-48bc-bdc4-737b29f96b20"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"d044c59a-e609-4a14-8461-582a3be6d8e5"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{"PacletDirectoryType" -> "Notebook", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"aa9bb631-efd7-4d97-be3c-e26ca2de0680"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1601053204,ExpressionUUID->"016e81d3-4b99-4027-b018-14222f85884d"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"e2c1d5c8-6436-47b3-8f07-5765441908df"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->931102718,ExpressionUUID->"72402610-299a-49c6-a705-880b2d6c1831"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"62be44c1-2601-4646-8921-c519ad33502f"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1530466166,ExpressionUUID->"0f2210c7-1f83-4d5d-9ae8-03addeeaa5a2"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"dbcc9839-5a37-4801-8381-b91fdc0d77d0"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2133211843,ExpressionUUID->"9fd77ccc-9031-4c7a-acbe-557baf8f64bd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Callgraphscreation.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "Callgraphscreation.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "Callgraphscreation.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1474700023,ExpressionUUID->"067180f6-f4ef-4fc9-8959-02f0eb511f78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"d3b0625f-ed10-44ae-9ad7-20987468ce7b"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->651958636,ExpressionUUID->"414db258-e01d-413f-bc32-bdb3deed8202"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"b58b3b6c-8332-4983-8eaf-2b37ead85417"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1007228258,ExpressionUUID->"e05096db-46c8-4b62-b231-e1e5664bcae6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CallGraphAddPrintDefinitionsButtons.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CallGraphAddPrintDefinitionsButtons.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CallGraphAddPrintDefinitionsButtons.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2019226552,ExpressionUUID->"1b79c175-708c-4a7d-8c59-6e688abc238a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CallGraphAddUsageMessages.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CallGraphAddUsageMessages.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CallGraphAddUsageMessages.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->456585923,ExpressionUUID->"29115bc5-2ee3-4a9f-aa41-1fa267d391c2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CallGraphBiColorCircularEmbedding.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CallGraphBiColorCircularEmbedding.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CallGraphBiColorCircularEmbedding.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->880537130,ExpressionUUID->"520ccf9e-8632-48b1-bdd9-3b8929a93551"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CallGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CallGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CallGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->877732433,ExpressionUUID->"69620760-5343-4dd8-90c8-a1e6778ddc82"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FunctionDependencies.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "FunctionDependencies.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "FunctionDependencies.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->983830188,ExpressionUUID->"dee66989-b994-4347-b87c-88ec03e0c3b3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NodeInducedEdges.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NodeInducedEdges.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NodeInducedEdges.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1757371463,ExpressionUUID->"98a5f04e-85dd-4ead-bb9f-1871d6397444"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NodeInducedInEdges.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NodeInducedInEdges.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NodeInducedInEdges.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1799581450,ExpressionUUID->"a870cc2b-b0e2-44ee-aed0-8cc8eaeb01b1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NodeInducedOutEdges.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NodeInducedOutEdges.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NodeInducedOutEdges.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->405745802,ExpressionUUID->"4a858cce-2480-45c0-8b2e-7573306c6cb9"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"48d4c8c6-aca2-484f-b408-b111ef5310a5"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1109114989,ExpressionUUID->"99a19a44-953c-43cc-b196-5b5f309bfa8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"29733276-ff10-4dc3-90b6-a5fe94f0a5d5"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->330045737,ExpressionUUID->"c2760713-c7de-483a-8d44-c832a57a9820"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CallGraph.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "CallGraph.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "CallGraph.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->128441558,ExpressionUUID->"a4f181db-c5e9-44f0-b44c-eaee3c60b472"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->496200071,ExpressionUUID->"16a01bbf-3f47-4fc3-9d1a-5b7a7341a9d8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->955591996,ExpressionUUID->"44126685-2669-41b1-b975-0f465345d147"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     FileNameJoin[{
       NotebookDirectory[], "README.md"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "README.md"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1062896413,ExpressionUUID->"087dbe7a-ab8e-4f6d-81f4-01c359ebe048"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1751964506,ExpressionUUID->"8338f501-5eb6-4323-bb77-f86a89e33144"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1119168325,ExpressionUUID->"41f6b960-cf0b-4770-a631-e72decafd64c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "982d26ad-018d-4753-bdeb-4255a3d9f2d3"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"ba08e0eb-bcd9-4af3-b0d2-dfab233d93c9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d90d27d5-f97b-4354-b33a-037b0562b386"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"61f762c3-4a02-4a21-beea-e1d093efd1be"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qm8jeXax/FTStOppMEpnDoaNYsiJJQ00GDMUAipzJKppJRMRQMlMpOi
EkmmknkImWWeZzJkrHS//S7vs1p729u4937W86z/9/PZr70Xnffe01r3dd/X
8L9n6pZ49vR//etfL5799/8pUaVxoQYNqjQtmeHvD0rXefH5GnWqV3uoTsPq
Nao3yPNMur8frPv3/7ni77cz/n7fiYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiISEzas2eP30sQEREREZGQKVasmGvQoIHbt2+f30sREREREZGQGDJk
iMuaNau79tpr3fjx4/1ejoiIiIiIhAS5Uw0bNnTp06d3tWrVUi6ViIiIiIik
mLlz57p8+fK5K664wo0ZM8bv5YiIiIiISABNmTLF9ejRw7311luubt26rmzZ
sq5AgQLuX//6l701bdrU/fXXX34vU0REREREAuT666+3uowiRYq46tWru1at
Wrn+/fu7SZMmuaFDh7oLLrjADRgwwO9lioiIiIhIQBw4cMCtW7fuqP+mYsWK
rnXr1mm0IhERERERCbqRI0e68847zx08eDDZfzNhwgS3cOHCNFyViIiIiIgE
2eTJk91//vMf1V+IiIiIiEiKadGihbvwwgttRt+mTZv8Xo6IiIiIiIRAx44d
3b333uvOOecc6y11zTXXuMqVK7tPPvnE7dq1y+/liYiIiIhIgP3+++/W37Z9
+/busccec5deeqnuN0RERERE5IT9+eefrl27di5HjhzuxhtvtL5SM2bM8HtZ
IiIiIiISYB06dHAZMmSwOXzcYxQsWNByp7p37+730kREREREJKDoM/X5558n
eOyDDz5w//73vy2PSkRERERE5ERR+7148eIEj1H7zZ3G7t27fVqViIiIiIgE
2S233OKefPJJt2/fvshj/fv3d5kyZXJ//PGHjysTEREREZGgoub7oosuchkz
ZnTlypVzTzzxhEuXLp3lTomIiIiIiJys3377zb3//vuufPny1m9q8ODBfi9J
REREREQCql69em7dunV+L0NERERERELgpZdecl27drX8KO4you3fv9+NHTvW
n4WJiIiIiEgg0UMqf/787qyzzrKeUlmzZrW6jM6dO7uff/7Z8qfodSsiIiIi
InKiXnzxRVeiRAnXpk0bV7x4casDJ+7grWPHjn4vT0REREREAmjjxo1u7dq1
kY//+usv98svv7hZs2a5Q4cO+bgyEREREREJqilTptjcjNmzZ9vHBw4c8HlF
IiIiIiISZPPnz3fp06e3vClv5nevXr3c448/rrsMERERERE5KbVq1XKPPfZY
gscWLlzoMmTI4AYNGuTTqkREREREJMgqVarkWrZsecTjRYsWda1atfJhRSIi
IiIiEnRvvvmmu/zyy93SpUsjj23atMldeOGFbtSoUT6uTEREREREgurgwYMu
X758NqfvgQcecE8//bTlTBUsWNDvpYmIiIiISMANHz7cVa9e3ZUpU8Z16NDh
iNngIiIiIiIix2PPnj3ugw8+cJUrV3Z169Z169evt9kZIiIiIiIiJ4ta70sv
vdSVLVvWZn9v27bNlSpVyubziYiIiIiInKhJkya5888/323evNmNGzfOZc+e
3R6vUqWKe+KJJ3xenYiIiIiIBNE333zjcubMae/Tv5baDHz66acuV65cfi5N
REREREQCasGCBe7MM890X3zxhXvooYdc79697XHmgnsxh4iIiIiIyIlq3769
O/300602g1qNvHnzunPPPdetXLnS76WJiIiIiEjAUJNBryksW7bMNWjQwJUs
WdLVr1/frVu3zufViYiIiIhIENWqVcuVL1/e72WIiIiIiEiING3a1NWsWdPv
ZYiIiIiISEj8/vvvrmDBgtbTduDAgW7fvn1+L0lERERERALu119/dTVq1HA3
3XSTO+2006znVJ48eVzDhg3d8OHD/V6eiIiIiIgExOrVq93777/v/vzzzwSP
E3MwR6Nx48YuX7587oEHHvBphSIiIiIiEjTdunVz6dKlc5s2bXIvv/yye+GF
F2weH/GHiIiIiIjIydqwYYP92blzZ7u3oD6DuRlZs2Z15cqVs8d37tzp8ypF
RERERCTIyKGaNWuW5VOVKVPGZc6c2e47REREREREjteSJUssX4peU48//rhr
27at27Fjh9/LEhERERGRgBoxYoQ744wzLEfq+eeftzypDBkyWO5Ux44d/V6e
iIiIiIgEUI4cOVzFihUTzMrYvXu3e+WVV9zpp5/uJk+e7OPqREREREQkaL77
7jt37rnnJlt7Ubx4cXsTERERERE5XvXq1XMlS5ZM9u979uzpihYtmoYrEhER
ERGRoLvzzjtdgwYN3B9//JHk37dv3949+OCDabwqEREREREJKmKLLFmy2JwM
cqcKFy7sXn31VTdy5EirzwB3HfXr1/d5pSIiIiIiEjRLly51vXr1ctWqVXM3
3HCDxR3MB6c+nJ5TX375pd9LFBERERGRgNu6dav7+uuvXcOGDd3dd9+t+Xwi
IiIiInLCDh065IYNG+YGDhzoli1b5vdyREREREQkBJjNd9ppp7lzzjnHcqYu
v/xyV6pUKffuu++6NWvW+L08EREREREJGO4yzjrrLKvB+Ouvv9y8efPcRx99
5CpUqOCuvPJKu+cQERERERE5EfScotfU3r17/V6KiIiIiIiESMWKFV3ZsmXd
4sWL/V6KiIiIiIiEQMuWLa0m47zzzrM/L7vsMleiRAnXoUMHt2LFCr+XJyIi
IiIiAXTFFVe4rl27Wm3GggUL3Mcff+yefvpply1bNtevXz+/lyciIiIiIgGU
PXt2t2TJEr+XISIiIiIiITFmzBh34403uoIFC7pZs2bZnYaIiIiIiMipGD9+
vCtZsqTLlCmT1WZkzJjRFStWzLVp08YtWrTI7+WJiIiIiEjALV261PXs2dNV
rVrV3XDDDa5Tp05+L0lERERERAJo1KhRrkiRIu7aa6919913n+vfv7/N0xAR
ERERETkZ9KxNnz69K1OmjHv//fddlSpV3DnnnOMefPBB1WmIiIiIiMhJqVOn
jitVqlSCx5jTd+GFF7pBgwb5tCoREREREQmySpUquTfeeOOIxx944AH31ltv
+bAiEREREREJOuaAZ8mSxS1fvjzy2NatW+0+g7oNERERERGRE3XgwAGXN29e
ly5dOrvDeOaZZ9wll1ziChQo4PfSREREREQkgDZv3uz27Nlj7w8fPtxVr17d
ajXatWvndu3a5fPqREREREQkiGrVquXKly/v9zJERERERCREmjZt6mrWrOn3
MkREREREJCR+//13V7BgQXf++ee7gQMHun379vm9JBERERERCbhff/3V1ahR
w910003utNNOc2eeeabLkyePa9iwodVqiIiIiIiIHK+KFSu6n3/+OcFjxBzf
fPONa9y4scuXL5/1nRIRERERETkemzZtcv/617/c0qVLI4/17dvXHpcTM3v2
bDdx4kR38OBBv5ciIiIiIuKrL774wmXKlCny8W+//WZzM9gzy/F7++23LdeM
mO2iiy5yzZo1U6wmIiIiInGrfv36rmTJkpGPR48ebXO/Dx065OOqgmX//v0u
ffr0rkePHm7Lli2uc+fO7uqrr3Znn3221busXLnS7yWKiIiIiKSpO++80zVo
0MD98ccf9nGLFi3cgw8+6POqgmXVqlUue/bsCR77888/3eeff+5y5sxpsZuI
iIiISLwgtsiSJYvl+px77rmucOHCLlu2bK5y5cpu9+7dfi8vEOgFXKBAAcuV
Wrx4sd/LERERERGJGdSA9+rVy1WrVs3dcMMNFndQo5EjRw5Xu3Ztt379er+X
GLP27t3rmjdv7jJmzGhzR1577TW3detWv5clIiIiIhJz2Cd//fXXNjfj7rvv
Vj3zcdizZ49777333JVXXml3Q7Vq1VJdhoiISAxYsGCBGzlyZCRHXETSTu/e
vW1Whpy4RYsWuSFDhrjNmzfbxzyH9evXz912222uU6dOPq9OREQkvjVq1CiS
p0FueHQffxFJPcQXnMFTq8z7iU2aNMnt2rXLh5UFw1NPPWW9bKnN4Dns0Ucf
ddu2bYv8vXp2iYiIpC1eh5csWWLvb9iwwZ1++unuww8/tLrTEiVKuFy5crm/
/vrL51WKhB8x/iWXXGJ75H//+9+uSJEi7vXXX3fff/+9zQen3mD8+PF+LzMm
Uc+SOXNmt2LFCvuYmOzWW2911157rfWaEhERkbRF/EBtad26de1j9jLscdas
WWMfb9++3Z1xxhlu3rx5fi5TJG5MmzbN5vR98sknrkqVKrZP5neSt7x58/q9
vJj19NNPu5YtWyZ4jLsf6sGpbREREZG0RS4z+xfuMbBjxw77+Mcff4z8myuu
uMJmFItI6lu9erWbPn16gseoNZg8ebLNBpeklS9f3lWsWPGIxzlHUZwhIiKS
9mbPnm11GPRm8dCfxauXZK4V+c7q03J05Gp07NjR1atXz3oCTZgwwe8lSUDR
F4k9sxxd4piLPCmey2rWrBmpyRg8eLA777zz1AdYRETEB9RFXnzxxa579+6R
x+jX/8orr9j7EydOdB999JFfy4t59BdlVjOx2IUXXujuuusuywnnTqho0aJu
//79fi9RAqZp06a2V5bkUU9GTJF4rvcPP/xgNRr83eWXX261Zv379/dplSIi
ItK1a1d3wQUXuG7durm2bdvaHvnTTz/1e1kxjxitUKFCLmvWrK5Hjx4JYoop
U6ZYjj1fT5HjxSzrggULWr33wIED3b59+/xeUkzid436ePI9uT9knqE3+5ua
7xkzZtjXT/P5RERE/Ne6dWurlyTeaNCgQYK5GQcPHnTjxo2zHCv5R8+ePa0n
UHI18sRt9A4SOV6//vqrq1GjhrvpppvsjuzMM890efLksb308OHD/V5eTBo6
dKjdI3J38cQTT1iMLyIiIrGF2CJxf3n2PXfccYfteXgdL1OmjHrQ/z9iswce
eCDZv58zZ459zUROBr97zOpr3Lixy5cv31F/1uINZx8YNWqUzeDD2LFj3UMP
PWT3sffcc48bNmyYn0sUERGRJNBX04slqAen7mDZsmVu4cKF1nuqTZs2Pq8w
NrzxxhuW45Kc9u3bu8suuywNVyRBRz/pqlWruuuuu87m1rz66qtuy5Ytfi8r
5jBXhJjilltucV26dEnwd3PnzrW+U/fdd59PqxMREZGkcAZ/7rnnWv032Evn
zp078vf09M+ePbtfy4sp5JFxX+F9raJ9++23lvOi+gw5EXfffbftnTt06OCa
NWtmvd8yZMhgvW7lH8wtJFeKuwviMfpuR9+z0l9K964iIiKxhdrK/PnzRz4m
rog+k6d3JHP7NF/3sOrVq1tcVrly5QSPE2dwn6E56nK86IVMTEG+lIdcxsKF
C7sKFSr4uLLYVKlSJffss8+6cuXK2XMS8ww7d+7sPv74Y6ubUq83ERGR2MIZ
avHixSMfk0PFmSFzwlCqVCl35513+rW8mEQsVrJkSetxK3KyqCeg5jsxer/R
O1kSojeXF0sw36d27do2K4Pnqz59+vi8OhEREUmMfvScBXrzwemlxOs2Oc9o
1aqVW7BggZ9LjFmcQzMXrFevXm7p0qV+L0cCZv78+XYu37dv3wSPP/744+65
557zaVXBQn04MzNFREQk9pDnQ18bcp45X33kkUfcOeec43bv3h35N8qZOhL3
QGeddZbVZJBnxn6R2haRE/HWW29ZzQ99bakHp9fb2Wef7VatWuX30mIKvbf5
PaMPw4ABA/ScJCIiEhDk/zz55JO23/nf//7nvv76a3vc6xuZuBYh3jEPjPiC
3lx79uyxx+hHmj59eptbLHIiuAujly05inXq1LE+b/IPZmIy54d7w+uvv97u
W3me4vdv7969fi9PREREjgM5CPRsoZeL19uFN2aGqb75H9Sjcr6aWNGiRa12
Q+R4cW+4bds2v5cR05iNQUwBasD53aM+iucmenWJiIhIbKO+kr4t9HDh9bt8
+fI2E4ueOLfddpurWbOm30uMGdzv1K9fP8Fj+/bts6+d6lHleFDbw10hd4j8
vjGnhhwq735M/kEs0a1bN7u7oNcbtWR8/Zg5MmPGDL+XJyIiIsngnoJa70yZ
Mtl8vixZsliv22jTp0+3mg3daRxG7Tx9bqjfpQb1yy+/tDkIzD7YtWuX38uT
AKhbt67FpfQRmDp1qmvZsqW7+OKLXenSpf1emu9+++23BB/TL5rfNc48/vvf
/9pj1NBnzJjRj+WJiIjICSAXgddycjiuueYamwUejdf30047ze3YscOnFcYe
YjP6dHEWzZk0OVP06vKQf+b17BJJjHiemp5oXk/peK4Bp74pXbp0FstH44yD
Oha+PvSzZXZolSpVfFqliIiInIzbb7/dtWnTJvLxrFmzrPaSfGhJiLjsl19+
sTsM8qZ+/PFH9+abb9rsA+6G2BOp56YkhfsvZjtGoz6Kn5l4rgMnf5P7VHKj
qAurVq2aW7x4ceTvqQXPnTu3xRjRPfFEREQk9lGTQd+kAgUKuBw5ctg9xhNP
POG2b9/u99JiCvnh9OViL8SsNfpP8bWiP2mNGjUsz4NZYvGInqN8bXbu3Bl5
jBlrmjFy2JgxY9ytt95qeXbfffedndXz9WnSpIn9/HAXJs4NHTrU+lFwX8hz
0JQpU/xekoiIiJyin376ybVo0cJygyZPnmyPsRfinPGHH37weXWxgb5SzM/I
nz+/9SQlB4bYI97xc1KsWDHbG3pxFv2Rzz//fDurJ7+eO6B4Nn78eLsfpCaK
rwl3XxdddJH1bqVn8oEDB/xeou+Iu3iu4WfI66/N14reU8z5ERERkWBbv369
zZ7r37+/nbESe1CToN6th/M7Eu8HOa/v2bOnzVvjnDoeffXVVzZn7ueff448
Rs0P9SvErEWKFLGcITks+mfmhhtusL008esLL7zg99J8s3r1apuPwc+Rl1vm
1TtVrFjR3XfffT6vUERERE7FH3/84bJmzWp7xMyZM1tOB+itxNmr5vEetmjR
IvfUU09FzqbpgcN5fuI61njBz0nx4sUjH3M3xtdl9uzZkY+ZnU6cFq/mzJlj
eXXUfXNuH23r1q2Wc5a4diOePPDAA5YnFf214WyDMw8or0xERCTYFixYYPvD
devW2ZkrsQU14fSc5PHo3krxir1ytmzZLA5799137WsW771/maFWpkyZyMfM
hLjssssiH9OPlDqWeO3/+/3339vnzxwIfo/4s2DBgu6VV15xEydO9Ht5vqOf
ArVOxO/RmB3K1ypxXCYiIiLBQ+8bcupHjhxpH7du3dp6SZYoUcJyp9gPxDvy
ytgrqn/tP+gHdMkll7iNGzfazDlqnckJAntELz8oXjH/skKFCnYmz9do0KBB
NksjZ86cka9TPON5hToV8u+i0WubfreJZ2uIiIhIMFGTetVVV1kuzGOPPWZ7
avKmyX0RZ/OJibnIf4lG3QYzR5YvX+7TyvzDPvGOO+6wrwv1zcx35B4M3HWQ
MxXPvQSIM4jFJHn0cMuQIYPr3bu3xaaceTz99NOuUKFCfi9NREREUhDzib0+
L/RUis4LUp60cz169LAepcw5bNSokcuXL5/V8fI1e+edd/xeni+Y58gekf5k
XowB5srHY+wVjV6tV199tfW2Zf8sR+J5hfnoxKTEq8Sq5CaSwykiIiLhMWDA
gCP61q9Zs8bVr1/f7jo4049n1KeSb8/MEfoovfTSS1bHSz1vvNL8jKTNmDHD
nXfeefZGHEo/JebUNGvWLK7veDz0hR48eHCkzokcKeb5kLupugwREZFwow6B
3krUabJPuvbaa4+o14w3a9eudePGjYvr/knRND8jedRhPPzww7Zn3rx5s/Vu
I5eMWXTM04hnfC14XqHfBHE7+ZmTJk3ye1kiIiKSysh3YX/k5U+R+0FuDHsk
9o3R59ZyuNct9xxVqlSJu3p5zc9I3quvvmqzLyUhYi7i0H79+tnH9FegJp68
qalTp/q8OhEREUlNvP4//vjjkdngHvKoa9eu7TZt2uTTymID+TDUZ1ArT68l
4jHebr75ZtszxRPNz0gadxiFCxd2F198sZ3dx1v8eTTUfd1yyy1HPF6uXDmr
mxcREZH4w5l148aN43b2tYezes7sK1eubPcY3GewrybOYB5bPNH8jKRRe1Cj
Rg1300032edPjlCePHmst9Lw4cP9Xp6vqMkgPk/cs5afneiYVURERMLNy5Fi
T0AvGPZK5FR36dLF55X5J7m+QZ07d7avTzzR/IyEuAsk7/CPP/6IPEbMwRk+
MTr9yZh/Hc/42lCPkStXrkh/sg0bNlifiY8++sjn1YmIiEhaoWaVul76k5IP
s3v3bpsVQT5IvM/C9pBPNnPmTNs3PfTQQ34vJ01pfsY/2D9nyZIlMvebvClq
NOifxO+N/IPcS+4F+VpdfvnlNpOP2ng9p4iIiMQHar/ZByxevNjy69kzkiPE
HQePx1stQrSJEydajS9xBTPGvBqNtm3b+r20NKf5GQnRz5d7nmrVqtldDj8X
7KNz5Mhh9U3x+nuzfft29+yzz9oMPs/q1avdZ599luDnRkRERMKPs8VLL700
Mk/juuuuc0OGDLH6cOoT4vnskfyoG2+80fZNffr0sf00/Vvp/cvHEr+++OKL
BD0UmK3CfBFqM+i9Fa99FKi9uPfee920adPsHqx58+YWd5FXJiIiIvGHM3tq
Wcmbpn/pt99+a4+Tjx/PkpsjRi3rI488ksarSXvsnVetWnXUt3jdP7733nsu
Y8aMNn8uGjVO8Xi/A+5wyK2jHwD5Zffff7/1yCZWV+23iIhIfGLWM+eO1GhS
00sNNPtH7jXIi6E2QQ7XaHCGTc+peJjB9uijj0ZyxZJ7e+GFF/xepm84p6dW
Y82aNTZ/7plnnrF9tjczIt7Qq47+EdR78zxCHTj3OvQ9zpw5s9/LExEREZ8d
OHDA9o7sIc866yx33nnnWR/8eOtZ6vnxxx/dG2+8YfWsF1xwgX1d+HrEw/xr
9ogrVqywM3vy6Z577jmLs8izf/PNN91//vOfyAyNeMR9D/eA6dOnt5rwsmXL
2kzD5HqVhR3nFfRJ4HeEvsfeXc/bb79tM0FFREQkvpUqVcplzZrV9gr0cCXu
ePDBB61GIR5R40tcwR6bc2pyheIN80OS6uVbvXp1V7duXR9W5K+5c+favpme
CbfeeqvLmzevy58/v/X8jXfUZNB7jD4SxB316tWzXMzx48f7vTQRERHxEfkf
9MxZuHChzemjDpxcoaFDh9p+Kh4lPpuOrvcdPXq0T6tKW23atHH33HPPEY/X
rFnTVahQwYcV+Yv7LfpMUeuMvXv3Wu13wYIF7f14k1SPKcybN896tcX7zEIR
ERFxbvPmze7000+P7JWILQYNGmQzj+N17hi55j179rR88+uvvz5Sl0AePvFG
PGBuCD8XzZo1s57H5FJ9+OGHNkeDXrfxgPkYI0aMSPbv2WtT79ytW7c0XFVs
UI8pEREROR7k4bds2dLe7969e2RPTZ1rPCJniL5CxYoVs3N9ZmrQT6h8+fKW
jx8v+vbtazP6vDiLXJjXXnstbvoeFylSxO4r6EFGHiGz+UaNGpVgNt+6devc
ypUr/VukD9RjSkRERI4Xc8DZTxYqVMj2VOXKlXNLliyJ/D15VMwOoDcV9x9h
x94pqb009xzxNMdwxowZVvtNvDF//nw7v4+negT61RJTUHdQp04dm49OjmH0
bL54ud+Kph5TIiIiciK2bdtmfXOYD+7h/S5dutiMOu9Me+zYsf4t0mfsKU87
7TTLEwk76p7pPUZ/KT7nMWPGWA4RPYWo6YknxNZefEXcwZ0GdxuFCxeOy55K
6jElIiIiJ4sca+b4ZcqUyfYRzKdjT/HBBx/4vbQ0Rd8t7npat25tuSF8Deh1
Gw/atm1r/aa41+Hcnr7HfD0KFCjgXnrpJb+Xl6Zq1aplOXPyD/WYEhERkROx
du1aV79+fcu9vvrqq63ul9wZahVef/11v5eXpvr372/n+cQW9Lml19Dnn3+e
7LzwsHn//fcjufafffaZ1SeAet94mFcYrWnTptZnS5KmHlMiIiJyLH369LF8
iIEDB1pNBnMjyLfmrDLeUNtLnhQ9bePRxo0bLdbs1auXxVz0CiCX6rbbbnNN
mjTxe3lphriSWvDzzz/ffi/iIWcuGvcV9PQdMGCA5c4xo5Ha93idSygiIiKn
jpx06jIqVaoUN/2FEqNfKbP6yJtinzVlyhTbf8fD1+Ojjz6K1OREvxF7xEsd
PMghpMczM8CpUznzzDMtn4xZKvFwfk+M6X3vmeXJ5x/985AtWzZ311132T2o
iIiIyLHQr5J+Oo899pjlXscrZvLxNfBqXqP7u3K+z3wRZpUxWyJsduzY4ebM
mZPgbenSpX4vy1fEHN98841r3Lixy5cvX1zMl+Fek1l8WbJksR50xNj0jKBu
i3iLO1BqeeJlfqWIiIicGvLymdFWpUoV22OQj09+PvOhb7nlFttr09fyaDPM
woa9FLXgq1evdpMnT7aahYsvvti+Fi+//LLfy5NUQs4geULxzIs1Lr/8crdw
4UKr2WJe45YtW/xemoiIiAQM8xLYXzELmvkJHTt2dB9//LF777337J7DO9dn
nl28YGYhM0bYczFL4u6777Y4g7ySMGJ2BPU5Sb3Fw8xnemp17drVZmXwtYhG
v+d46+/sxRqXXnqpu/76663/mIiIiMipYl4CcQd9qK655hrL3Y+esxEPqHsl
tiKPihx17njCPLMwufoM3sK+x2RGRv78+SP9xqhLYHZl586dbUYdvbiYKxJv
iDWeeuop+5rQe01ERETkZNFfiH3FGWec4e688043aNAg22vEo3HjxkX22fQd
Cjvm0lF34r0tX77cauHJnWFuQjx48cUXXYkSJVybNm0sl5D+zt7PAHd88YA5
3999913kY37/y5Yta3d79EUQEREROVEbNmyw+IK6jOh95eLFi22WRrzkrDOb
jlpveg2xv4rXPrcevha8xQN6izFTxkMN9C+//OJmzZoVN/F2v3793P/+978E
95fevQZxV7zMkxEREZGURb4UmPFLrTP7K865Cxcu7DJkyGA10WHHPorenczS
8LD/JHcm7D12mCHy008/2fvMjaD+nX1nvMyFpw6Fs3zqceKhl3FS/vjjD3f7
7be71157LcHjxBpffPGFT6sSERGRMPjxxx+t9xR9PM8991w3depUe/zJJ590
VatW9Xl1aYPaDHLzhw4dah+TQ3bJJZdYz50uXbr4vLrUwX0W59XkDLHH5nMm
X4j4Mh7625IrdsUVV9jPvpcr9cgjj9gslenTp/u9vDQ1c+ZMq80ib/Ldd991
1atXt+cD+k6JiIiInCzOMfPmzWvvs9fOnj27zdTo0aOHu+GGG3xeXdrgXJua
YHrZ7t271/ac1AMzS4Ea4TAifqK3GDEWsSafP+f6pUqVcg0aNPB7eamuTp06
tpcmb45+zsxBJ9aiBwC9AMKOezz6WtNXLVOmTPYznz59elesWDFXq1atuLnT
EhERkdQzZMgQlzlzZuvBw7l2zpw5XcWKFd2VV15p9QrxgBpo9tlgZgB7ru3b
t9uZP++HcZYh/YyrVatm7zdt2tTqdPD2229brBF2hQoVivRtZk7jqFGjrL/t
VVddFdoaHWowvJ9l7iqIJ4g36enMHRYzc/g6iIiIiKQEYotnnnnG9lrUf3s5
JORN7dy503Xv3t1mdy1YsMCtX7/e7+WmCu4wzj//fLvDYP9FTTh7subNm4f2
Tof4krwh7mzoMcXsFGKsG2+80bVs2dLv5aU6YikvjiampjbJe599dxjdfPPN
R63x79Spk8VZ1GiJiIiIpATqwf/73//amT5n3PTc8TBXgH0oe+9WrVr5uMrU
9corr1hNBnlS1MWCeejz5s3zeWWpg/iydOnS9n0lttixY4d9vuQQJZ5bF0az
Z8+2+Bq33nqrzajjZ4AaJe6ywogaf3rL0feB7zMxZnT9O3cd5I+RPygiIiKS
Eugt07ZtW+uzBPYe9F8id9u73+BeI+x69eplM9LJo4oXxBfxYtu2bUk+PnLk
SMsd5E6Ln4GwI0fKm5tz00032efs9a+lJpzeYyIiIiIpjfiCXKF06dK5MmXK
WB6Rd9YbTzjb/fTTT123bt2sVjqsFi1a5Pr06WOfJ3ljYe7v6s3/fuKJJ9w7
77zjpk2blmA+RJg/dw917+RDgnvMevXqWa+pLFmyWG2OcqZEREQkNVCDwT6M
3PXoM33OgcO81/awz37ppZfs/Xbt2tl573/+8x93//33+7yylMeeulGjRpH7
Ku+NmoXomW1hQr9W7/OkVoGcMfKkChYsaHE0eWNh32f37NnT8uSi0W+NvgDE
GvEyn1NERETSFnsM9mDJ5dKEse9SNOYnlCxZMvI+OVT04brsssvclClTfF5d
yqLWmT02+frUhBcpUsTqcqjT+fjjj/1eXqph9tyFF17oHnroIft8v/32W+u3
Rb3C2Wef7YYNG+b3ElMVfaxr166d5N/Fywx0ERER8Uf9+vXd2rVrEzzGfAX2
ZZUrV/ZpVWnjjjvuiMzqu/feeyMz+vLnz+8GDBjg59JSHPU4xFLw4gyw5y5f
vryfS0t1/HzT15a5EcwD93Bnx3zssKL+m5xI5obEw/2kiIiIxCbONjn7veuu
uyK5JhUqVAhtTg3o5csdBrJly+b69u1rfYmYGT137lyfV5ey6GObO3due9+L
M7ivuu+++9yrr77q8+pSHz/fzEJnNh01CtQthB21ONRcUXtFjy1i57DfUYqI
iEhs6dq1q7v22msjfW7ZY69atcrO+73ZbghbLvf06dPdOeecY31t2YuRV8NM
CWajhw3fu/POO89ypNhvEkfS05QexkuWLPF7eWmGPgfXXXedfe6LFy/2ezkp
zru3YP4efW2xbNky9/zzz9vP+v/+9z+b/a0eUyIiIpIWmAfepEmTSJ9bz08/
/eTeeustqyEm34Q62vnz5/u0ytRBrNG4cWPL2w87PldmKEydOtUVLlzYcvfp
QRRW/NyuXLnSvrf0VqpatarLmzev1WsQZ9FfLGy4pyLn8ZZbbonkAXqIoZlF
Sa+DsJ0ZiIiISLBQC01P0CpVqrhdu3a5999/P9R5VOSZ9O/f3+aWhb0PUZjx
/bv++ustliA2ptb9wQcfdA0aNHCffPKJmzx5cmjniHz//feR3MdcuXJZLmR0
vff69euVOyUiIiK+4AyYM2/68bBH42yUetIwYx40deDszS644AJ7I5+IHk0S
PNS1ezVGd955p9WfkEdEL7F4UKlSJffss8+6cuXKWa9mciI7d+5sOXPMzgjz
WYGIiIjEJua3MS+YvQnzg6NroceNG+fjylJX6dKlrS/PmDFj7GP2YeSzs0cN
C/aYfF+Te/P25WHBjAh61pIPSP8wao+owcmRI4f1eQ1b3+JozCL0Ygnyxvh8
qc3h+8vvuIiIiEha4/yTXjyJc/bJb+d8P6yYK5F430kuO/uy1atX+7SqlMXn
M3HixARvI0eOtNnvXoxB/UJY0V+Kz5meU8WKFXO9evXye0mpgtww5r8wizC6
vxT14StWrPB5dSIiIiL/YH9C3gXzk8OKOIOc/WjsSdl7b9682adVpR7qUOrU
qWP10NQutGrVym3atMnvZaW4pUuX2nwQ7ubat29vj5EXGFb0SSPnjxjKq0+h
v1SnTp3c3r17/V6eiIiIxDnmudFjihkL9MNkD8qeJczzBshlp2aWegz24PQm
4kyYx8OCeXSDBg2yPlPMB6HuhhmFYZ0JTb0ztQh8X88880x727Ztm+VQhXVm
HTVVxBTgbpK7DebdE2/Qf0pERETET9TLlipVyuXMmTPS/5P7DHpOtWzZ0s2a
NcvvJaY47ixKlCgRyR/i8yanPUxnwB999JF9bswKiYd5GeT/kR+FmjVrWi04
PdOuuOKKUPazBbFEt27d7OeWO7oNGzZYnQrzQpgbIiIiIhIr6NvDuffXX39t
9xqckT7zzDP2d9SXcvYfJpyBk2tDb1ByT8aOHev3klIMn9tLL73kLr74Ypc5
c2abnRHmGQrkSlGLAWbyET+DPs3c2YURuWHMtJ8wYYLlw4F5NxkzZvR5ZSIi
IiL/oLct84OTqx2lHxMzCcLkxx9/dFmyZLF+vuRN0Z+Ifrdhmp1MH6LevXu7
3LlzW58p7nFGjx4durqFN99801111VVu3rx5Ln369O63336zvCnuqryYI+io
7U/8feNjYmXurriTy549u91FioiIiMSKm2++2b3++uvJ/j17Gfbhc+bMScNV
pZ6tW7fanGR63FKXAmIs+t2G4fybOgz6nUa/0WOLc3/2pOzFP/jgA7+XmWL4
/LyZKLyRO0XPNGoYwoI4iu8b9d+Ja064jyOWJMaIl7khIiIiEgzsXY5W+82+
NW/evK5ChQppuKrUM3z4cJc1a1bbn0ZjBjr7taDz6jOO9RYW1CZQ+z5ixAib
W0c9NHlUO3fu9HtpKaZy5cqR7xu5cORNUYMiIiIiEkTEHl27drXaUu4zyL1Z
tWqV38s6Zcx0u/LKK4/ov/TCCy+4QoUK+bSqlEM9MDX8R3sjxygMyOk7++yz
7Yyf+Sf0XSJXLGy5YczG4M6G+Jg6d2oyyAtr3LixxVkiIiIiQbBjxw7rd0tu
Eb1satWqZXlF7MHr1q3r9/JOGfn7GTJksPwa8t5B7TQ9YKlVCQN6DlHPT507
OPves2ePz6tKWVOnTrXZ19OnT7e6GuJh+qXxM0t8HDbE/fQqvvvuu+2upl+/
fu7WW2+1+ec1atTwe3lpau3atZG5hCIiIhL7eO1+8cUX3fnnn2+9ilq0aGG1
DJ7vvvvO9nXbt2/3cZUp44cffrB9afPmzSOPsW+NRn5V9OcfFHPnzrW9J3Ei
de5jxoyxnCLq3RPPfw8ycqPokwbyiDjrZ//9zjvvWO5UGBEj33nnna5o0aKR
vD9+L1u3bu3zytIGd3XMRSF/LCxnAiIiIvGgQIECVm9KjXBy8ySo5QhTTybv
TJT8fs7FO3To4Nq1a2efI/cbb7zxhs8rPHHUsufJk8dyh+hDRD4YZ+F8f+l3
GxY9e/a0GdifffaZ5RDxMYgdqWcIK3pp3Xjjja5s2bKhnb2YHD5n+hl4z0Ff
fPGF3dsxF0dERERiF7lD8ZKLwFkwPU/JdScXhXsazkjZtzL3DdOmTbMcsqCh
nr148eL2Pntwrycx++8wnfPTt/e+++6z7xvzXoirBg4caDEH88+Djpk19Hij
J9rGjRutl5QXVzAPhTMB6lPiBc9N1Ihxp0Hc/OSTT7oLLrjAXX/99aHqLSYi
IhIvqK9l1sTgwYND1TOT+OHMM890d9xxh6tTp477/PPPLc4KA/akV199tfU7
7d+/v+WHkUvFDLsmTZr4vbwUwT7Tmz1ILpGHnKLoXLigop4muT5h1L2T18ge
m4+p648Xl156qd1n8HvLGz8D1P9zTiAiIiLBQU7CRRddZPlDvL6T80/MERZe
7kX0Hc7kyZPdpEmT/FpSikiury2xR1hiqZEjR9reMvEsibDgrua9996zvmjE
E9yxLViwwL5/S5YscbNnz7afU+qM4sm4ceNckSJFXKNGjSK/vx9++KHdSYqI
iEgwDBo0yHIUOBsmTwHse4g32AOFBfUKzD+jTxF5KtzbEFd5uf5BxF0N+TbR
b8xaDBPiQercw9a/NjHqhriT4i6Kn9OqVavaz2k84b6CXsVe7zQPd3R8PciT
o7ZKREREgoGeLs2aNTvi8YwZM9qZYhhwLkw/JnoVVaxY0Xr44OOPP7b5BGFD
H9S3337b72WkCHqhsb9kXsamTZv8Xk6q4b7G671MzzDO7YmDH3vsMetdHHbU
UHGnyvzMc845x3LGvBk+nAU899xzdrcjIiIiwcFMsD59+iR4jHNFzlRnzpzp
06pSFp8HuWCciXNnwz6GfO/ly5dbntHRZqTHMvLAiJVKlSpl+1HvjToNaod5
P+j5bx07drSfUb5nfK+uueYa6zH1ySefhGZONrlBXn8C7ha9vss//fSTK126
tOvSpYvPK0x99GXo27evvc/Xg57b3PHQq1lERESC6bXXXrMZYMzK4HWds9Rs
2bJZb9Ro5IcHNUeedTNzgXppPPzww65+/fp2t3HJJZdE5hMEzYQJE2xf+vjj
j7vq1atH3nLlymX9UHmfXlphwPdoypQpdidF/EReXxjuN4jxM2XKZN9LchiJ
NZizSH+psMRRx0KfLXo1EDdzZ8H3lrMO8qfoMSVJo1/H+PHjQzeXU0REwoP9
GzkavM7/+9//tvwizoujX7v4N5dffrnr3r27jys9NcOGDbP50fQp8uqls2TJ
4r766iu/l3bSqKOh32tizBlglkYY/PLLL1YLTm+tMHr66adt3iDor/TKK6/Y
+9xJkf8WD4gvMmTIYL3gbrnllsh5ALlU9DSQI02cONGek7Nnz259PERERGIZ
tZbsub0c8cSYCXfDDTcEth6XegVybipVquS6desWqbGl1p3X7CBixqJXux+N
/q/Myw469pvc11CnQFxIPybv++f1ug067tS4d2J+O7lC3hw66qaCHNefKGbB
ePE/eYw8D+XMmdO9/PLLfi8t5vB7T15kdE4ZNTwLFy70cVUiIiInj5pM9ntf
f/2130s5KcnFR+xXucthNnrDhg3TeFWnhniC70tSb0nFH0HCGTf3TcS37DvZ
f3JHQ54btUNhOeunfxKxFJ8fM7DB7xh3b+QOxZPOnTtbrEXdP/VU3KsGNacx
NVG3w5kJuO8rWLCg3UXzc/Tdd9/5vDoREZHjt3btWuv1w+s/cUbevHn9XtIp
oVaDPlrkFj300EOWr8Eejz+ZrR2kOenJzc/w9uRBxvk+nwc1CitXrrS9J9iD
P/HEE4H6Ph0LtfrRuXz8noUljkoOv4d169Z1999/v32u3jkAccXYsWNthogk
jX7WzG9kfiH9A+jJxpnDG2+84Z599lm/lyciInJM8+fPtxwVzvrpBcN5P7MZ
OEsOap4R+9XMmTPbfo7PiZwVevk88sgj7s033/R7eSeMGpoVK1ZE3uifNWDA
AMvbDvpcN/ZNnOmTe86Zv3d+S137FVdc4fPqTh2fxwMPPBDpsUTcRO7Lp59+
GtpalGg1atSwXgXUu3MWz9ciLLlwqYH7SXqvkUtH3hS/69z/EI97iL/joTeZ
iEg8oEdKGHHWz76bevAcOXLYvjX67PiZZ55xjz76qI8rPHlDhw61vBtiqGjU
GQ8cONDe5++C3s+XM80wnGtS506NxuLFiy2+JdYtVKiQK1asmN9LOyUbNmyw
+TT0PNu6daud3fP96tSpk99LSzP0f+OuFMT/9LfjTpFZhZIQcTazKkuWLGm9
5Jgzwp0PqC9r06aNxWnkT4Xpnk9EJB5RX0tfGPKHqZ0Ok/Xr11uOL7kM9HpJ
CvFVUHOAqZu8++67EzzGPQC9RZkDtm/fPouh6PMbBJxrcvad+I3ZEvR/Bb1g
g9qPOFqTJk0s1rjpppssJz3I3n33XVeiRAl7n9pdcmCo++ZcP/Esm7A5dOiQ
9WK99tprIzXv3uP0auB51es3JYfdc889kZ4AP//8s93Hch9GH3LORapUqWI9
y1TLIiISbOxTOYej12KZMmXcbbfdFoo9XLSw154SG9Lbhu8f+Te8ZpP7T60G
56vkIXi9qGLdseozOCfn/aCeEbNvIm7yzmiD2usssaZNm9rZNL9r7LfZJ/K5
vfTSS65evXp+Ly9VlStXzuJF8jFvv/12u6uKRtzFGb38g+cncsrIW73yyivt
dYh5R9xhiIhI8HHOXadOHavPJK+YvHh64HC2ypy7eBL0e/miRYu6//73v658
+fKW3zxnzhw7Sw0i5nQREyX1xgw7Pi/mhgRxjtfrr79uvQeIk7zeQ0G/x/DM
mjUr8rk9+OCD9lzC94q7tp49e/q9vFTDXpn8H+5NyR1j3iJz3on7wxJDpoa7
7rrL1a5d22qUvHk/3GOEoU5JRCTekRvLTFpiDGa8RSOnn3x/9glhR08czvzZ
7wUZMaOH2srBgwdbngZnhRIb6DNA/h65X+zJySVilgJ7VPanQeblCrHnZgY4
8QVxIfEG+0hy4cKI3zXqUejpFq1Hjx42F4VczaD3Yk4p/IzTQ4ozApAjRUya
J08ei8fokcDXkX5dIiISTDyfv/rqq7bfoa89+1DOjzgD93i5spzPhRF7IPr9
cJ7m5eNUqFAhFHkNzZo1s3Ny8jcuu+wy+z7TFzJIqAVNqkaI/K9Bgwb5sKKU
wX6UOdnRiA+ZE9muXTufVnXq6NHLz1vi7xn13/R2Y+5JWM2bN896vJ199tmR
GmYPnzfn9dQbxDt+dzm7ot8BPWvpu8EdMjEH97DZsmWz5ytqBIN4TykiIv+o
WrWq9Vvy0HPS63tDTyLOl7x+m2HTtWtXyx1nL16tWjXbG7EfoGc7H3uC2IuS
eyj2e+zvvNfqb775xr63S5Ys8Xl1x4+fTb4/9Jvxcr+YRUDfHnL9g6pDhw62
706MPBvyqYKK2gPuZOIV5/DMPiemf+WVV1S3nAT6a7ds2dLep+cGtYD0q+XO
nLuu0aNH2/mWiIiEDz2JqMPjXI6+r/SICdK+9EQwW4IeP4l7+TOL9q233rL7
HvpO8XVI3Cc21rGHZfZgYtRu0KspSL799lv7mWR+IrXFzJygb09Q62jYexYp
UsR+rsibogYF9FvmfJc8qiDi86J3Kz2l4i1Hz6sZ8nA2T7zFmYXm8R1GDMbZ
DjHFiBEjIo/z/HvLLbe4++67z/6NiIiEEz3eOQNnHjF7bPp9xCP6pPJaSI8c
8kCo4QxaHhU1JuTmRCMvh/ubIPYVJbeN+iHy2sj1CzJy9Om1QI8FYg3umJg7
yOfmzZsIIs6imzdvbnMzuG+if0RQP5cTQQ0B30O+l8SP3ly5bdu2uVKlStms
nnjH6wm5qfQvJP6iFon+6R5+J7g7D/rvtoiIJI8cKvowRvdF4cyYfXfYe8Hy
OZNXRB939gvUg9MDP6jIPeBsnFnMzM/48ssvrdcP9wLETkFBTfGTTz5p8S+1
JcQb5G6T2x2GM3P2V/zcNW7c2OXLl89yxIg3qNMIam4662b+ID9r3D3VqlXL
zjDCiDMZatrIF+PO06vxio7lo/syxCNeQ3guZfYkz7M8/9x77732WhM9X4Sf
G+WZiYiEV3RPQXTr1s3q8tj7cJZM39ug9kc9GvYEnC2TU03tYXQNa5A/31at
WlkOC/sevn/kTFGrGiTMz2CmYHS+9pYtW9zjjz9u8zOChL33VVddZbGSh5wR
Ph8POer0ogra3GxiJep3b7zxRrvH4CyfmmdqaTjDDtrnk5zEvcCo5ffO4Kmr
ob6GmJHfOeYUejlx8Yz7YGIx7ro83A8Td1x33XWhP8MSEZHD2IN6dxnM8yUX
gHpVzpl4LWAPQX142DBXi9lhXr4DeJ8cFvaFQe7DyT6HmQxBusOIxvfBmxPJ
HpzaGeo16H8WpDNyepvy+8RelD046AdG/JcuXTr37LPPBrYXEX0SmLPG/prY
1jvTj77HCHK87uH7w7kLNUJePhg1UHxPd+zYYV8D+kjwHEptM70kgvo9TUnc
UXAnedFFFyWYWcjXht5+yisTEYkv7OuYLUXPomic+5NjG2bcZXCnQZ4OeyXm
iTAPLgzYG5Hn0bBhQ8urCgpqQzkb9r4n3htnpF7//VhHnWt0T2HWzefA3Gxm
mTPTjlgkiDivJo8NzGrh/onzCC+GCtod2tHMnj3bvpeZMmWyOxxiRs4h6IuW
O3du+zfkUJEzFu84EyBvk7wx4kx6jJDzGH03SUxGjCYiIvGDfQFnr4n7+bRu
3dp6goQRM/oefvhh2/uRQ8XrI3uK559/3s4mg5j/QI4Hs5epu2EOo7c/J5eK
eCMI2KPkyJHD9nX0XKbWhO/FpEmTLB5kH/vZZ5/5vcxjYk7b5MmT7X32XNmz
Z7deAx7OvpPqcxsE9CglJw+c9Xt3ntREd+/e3c+lpQru1Ro1amRxFL9b/DxS
f8DPIr2Ws2TJYj1t45k3657nzqxZs0ZyUenvx70P8xtFRCQ+sQ/KnDmzGzp0
aOQx9qXMn2LfGiYjR460Oxpqv8kLy5UrV4LZ55y3kTvFHjdo6F9L7x/yoJk/
Qd7/8uXLXfny5W0uYxCMGjXK6oOY7ZUUzkjpvRzrOMelPgPkInI3E90Hlf5g
Qas38VD/zM8U6CXEbGeeQ26++WY3ZswYn1eXetgrU5PC8wM9iXlu5Kyibdu2
CXppxBvObLhr5HeWnwPvfMOLs5lDSf6Zlw8pIiLxh5wpzqM4Y2VuAWd13Gd4
gnCGfDzo585ZMjUM5LBEf44gt5jzuCDWpZD/nNR+h3uOoMx4p4aBOzQ+l8Rz
TsBejz17rNfQ8HNFLMs8Bb720bP4yL2hD+znn3/u4wpPjfdzxt1TwYIFLY6l
V2/Q5yHweZEHxQwM7nnnzJlj95zMOJkxY4b74YcfLM7ge/riiy/G5d6Zr0E0
7nJq1qxp7xN78TNB71/633FugHjtmS4iIv+YOnWqvXbSTyW6Jwh7bu6+o/vk
hAGz+ej96u0V6O/OOS05L4lziGN9X3s03E2x5w1Cv016F5GHQqyb1NwP6kyo
JYq+g4pV5PPXrl07Qd1Tr169rIctZ/9BqxmmtwDrJ1do0KBB9jvCnvzBBx+0
2JB7jaAj7yu6JojzFuJa7tj4ufP6ufF8yL1ovMUZ3MnRuzg6bma2KXlk1MRz
v0UvB362ueOgFlz1GCIikhzyjHhdSXyGFQacsVHHQC4E+yQ+T+aiMz/Ew+dN
Ljq1rkHBHpxzf87U77//ftsXefn0sY5eyqyX8/7E9xnUD5UpU8Y+p6AijqUv
U/TMsiDgZ4pZM9xZMGuG/SO5YcOHD/d7aSmK+5jq1atbXE7/hCDEs2mN5xbi
LHr2Rd+fUsNCfRu4DyL+DEtPDRERSXnkFrGfoLeKh7rcMOUis5ft3LmzndFy
7k9PX3KMOYOmdoPaT2pdg3JWSy+j6Nlv5IiRnxOEeVjMXvDOkfkc6JlKnEf+
CvUyhQsXTpCLEauOZ25G0PBzRY2vdzbNPARyYzjvD8P8xMTopUxMRY8IcqYk
IXpIEWeSZ+v1D6EPGXeR7du3t59/6sVERESSwln/tdde695++23LoeK1I2fO
nLYHTNz/NizYOzEnjv0U+1xmHCxZssTvZZ0Q5hcQL3n9/kE+HPNRiBFjGTMj
qR1l38KcAupkvLiDngR58uSx3pmxLKxzMz7++GOrwU+MvEPO/cOI71/p0qUt
b+rNN988oh9fvGM2BvXdzNDk3oefa/IeOQ9IKudRRESOxN6T/Vk85eFyX8Fr
Bbm25MlzRsXZZfHixS3WCEKe/4mgTyWzDjifI1+HfWGQ7/v5/pCfw5/ESeyT
2LNzN0X/qSDhDoD+RkHZm4dxbga598z4Zk+ZeP4jvWwT91IIMp7n6Z8cXc/O
943fHeLcoJ07nCrqoehFmC9fPru7IN6iJwg18eT+0WOKe1PyToPeA0BEJC3x
ekoPDc4g2SfwGjtkyBC/l5Vm6LlJrjy9UYk76HlLvBGEnkUninNL6jTeeeed
yGvlr7/+at/v6dOnB262ce/evS1e4k6K97mXwtNPP233BJJ6wjg3g9pf6mJ4
LmQeHbXg5N9zZ0Mf5eR6EAcR50rc0XCmEv17zwz0Bx54wHXp0sXH1aU9vrf8
DPMayOsB5xfUv/N957FLL73U7hp5n7mFQcjPFBHxG7mn9Mq4/fbbLT+ccxvu
gZkdRl5NvGFPwedOzgrnffSaoW989DnmsmXLfFxhyuH+nxjLqxGgHoAz6sTn
uLGM2RmcyaJTp052NwXqBqL3vJLywjw3g99x6nzpu8TvBzEH/abCxjt3oGZL
nOVgco9NfOHlAoKzGM5hqJ1idmO3bt18XKWISDBQB3zdddfZfiBxrgbziLg/
j6f7Yc7Er7nmGte4cWPr0XnxxRfb16d58+a2xyAGY09LTnoY7jpKlSoVqQug
Ppy4g74p5NUHxZdffmlnkPz80gPm0UcftcfZO/F9C5LRE7a4srVmurwlJ9qf
fBzLwjI3g70jnwO594mRy8bPEWfal1xyieXks+cMMp73iQ+9ft7UOZE3GrY5
pSeL3FLmpDDbNAzP8yIifqFXH/cY3J8nhfxqzvfjBT1/2C/RP4RYI7r3CrN/
vT059z9Br5Ok7zu5IcRP9IQnviJ3gpyxIPW1Jb6gTw4zGoj/mBMC7uLYTwUF
McVdj0044i3WY42gz80g/55cmCZNmrixY8dGHqefALW/Hn6W6C9AL+jox4No
xIgRkX4D1KTRO4meU5yr0MdVDueUkU/G9zss99ciImktf/787sMPP0zy79iH
0jcmnp5j2Uuwv4hGfTG5unwtqGHhnJxz86DbvHmzfU7eTD5iC3LEatSoYbnZ
QcL5Mmfp5E0FtYcB9xdJxRk8HjRBmpvBmQH7bA9n2dQBe72/yCeK7m0dlj7X
9M0ix5AzBmZokCvKnAi+HrEeG6YG7nboMcbZm9eTma9DxYoV7a5n7ty5Pq9Q
RCR46GlK3klS6B0f7zm75OMSV1ATzhwDXovYm4clT5ucMHKN4c0GZgbwpEmT
fF5Z/CFXKqk4g8cldXCGws+8Fw+xryRfhroT8kaZCXLGGWfY80AYEEN5nyt3
l8WKFbN9Nbifpd9SEPLcUho/B9zdE1PwfE/PKe8en7iSmJneACIicmJatGgR
uLPrtMBry6uvvmp7jAoVKkTmddHDkz4j0bjvCGrvW2/WbaFChax3Srly5SK9
LMkZo8cl+5Ig7rP2/DTKbXittFv9Qm77k49jWVDvM8bM3OIqtprh7q03wf7k
46Cg5pf6EnrZsu+mPxa9EKJzRcnR79q1q4+rTDncw1LXzn0TMQW/2/R9CFrv
4ZTEzwBnLcxMAfEW99fkkEU/7wX1nlRExE+cb9HDlr30zJkz7bXHy6PxhCVP
4ESRS0AeUTRqGKJ7cPE6RB46ud1BRb0uM+MS1+gMHjzYzvjoXco8gSAhplhd
I+cRb7EcawSxPoOYIl/t8Ue8BSnW4LmPOgXyhdiD8xzo4fmRv4v1eYknglkQ
5EzxvM8bZ/h8jvF6h0nuMN97eppHo96f5z96MIqIyMljn8n5FufanOV5PdM5
53nmmWfstZd7ZOol4xmvQ7wec7dBfkVS9x1hwFlulSpVrKaas94SJUoEqp4a
do+RRJzB47GMmOKe0pMsvnj82ekxHWOA+4uk4gweDwruMeg3Re+spUuXRh7n
XJs+fNxnBL3nA32qmZfDPBkvnuD8iPc5u7/88suttikekTNFrTd3uonvLOjJ
xRxTERE5dbzueLOaiDGILZh/yz3H999/b8/F5CvHK3IqypYta7UZ9FfnXj3x
fUeQMTubnrDEFtxfkDPFPQf5ykFDrlRScQaPx7rKDX+2OGP+4t1+L+WYyJVK
Ks7g8Vg2b94862HLz/aKFSuO+Hv2lsx7pC/v7NmzfVhhytm4caPlRjHfm3ky
zDhhnnX02QHP+/F0bz1u3Di7r6Z3BGdE9K6lZx05xEE7UxERCSLmKjzyyCMJ
Xnvodxq0/JmUQv0F9aLcsXOnwdeG1+8w4dyWvDB6Xnr4/gfx8wzqfQaebnA4
zli4NPbjjCDeZ/DzTJ03MfUnn3wSeXzVqlU225w6JR5n7mDQ52SA/tzcSXpn
SHye/K4/9NBDPq/MH/S9Jk/q5ZdfdgUKFLA+W/Qz5l6f2XzMRw/D911EJJbx
Osyc8Gj0W0o8V4HHovvmhxVn+8QZ5JBF14RSn8HH0XNjg4rXV68W0kM+CWe7
SZ35xrIg1md4KtSbZXHG4uWxPx8ziPUZdevWtf1l9BkKufj0keN3nL3mpk2b
fFxhyuJsaMCAAQke4/eZe0t6W8cT5hEyezZ69t6bb75psQa9bJlJS69f+kuJ
iEjqufLKKxPMrKI2nJlbnI15yKHibD+6Ljqs6HF57733Rvbb3h6F+lDyEYjL
Fi1a5OcSTxk9Z4YNGxY5yyN+pP7k/vvvt/yRoMUavw7q+P/xRa5A9JvyPFn7
cN+pZauCkb/xcvcFFlvcU2d8IPpN5ciRI0E8TQ4+e+42bdpYbRJ9HcLUz/up
p56y++nouIqeD5yZ/PLLLz6uLPUlrqthVgg5r4nRy5j7Kxw4cOCIXigiIpKy
+vTpY/UYQ4YMsb5DvPZyzufVyTFrgRiDc/5407RpU/vceW3yzsVefPFFy3kO
OmIlvu+8PrPvKlq0qD3OvGfm9wXJji/ftzhjx9ed/V7KCSn9wgyLM1auDcZe
p3HX+RZnjJ4RjLNx6n2Ztwme36hXaN++feTv6fVNXVoQcR7ft29f17lz58is
OebLZcyY0XpWkzNFvMHzVVL77TBZt26d9TUhF85Dz26eu+fMmZPg377wwguW
RyUiImmH+II8Xvad5LR6MQZ9S84991w7+4435JJx9kkeAr0hqRWljpBaeR4n
tzvIyAHzanDImeIOC926dXN58+b1c2knbGPbKhZn7JsXrDl3JWr8ZHHG6vXB
mMnyePOpFmes3hyMuMibvcfzGnlS3pw6D/XhQbzPIHeT2IEcoEsvvdT6UXvz
RHl+4vc3Xbp09jjnRkG7nzxRnJVw106vreg8OO7kr7rqKjdlyhT7eP78+e6S
Sy4JzexVEZEg48yH1yn6dYD6DHp0BL3v4/Hi9ZrzMK8nCeeivH6T0xuGGnly
5ciZ4/tJTthZZ51lj9evXz9QM0IOHdzvVj+f261+7k53aF/s1zlEe7TadIsz
Nmzef+x/7LPtuw5ajFHkpUmB6lc0bdo0m7nJ81c0736D3/Ogefjhh+15aPv2
7dZ3mzsZ7qCj0WeL/TW5QfGCe41///vfkRoVzoKaN29ueWPEW/QNjO4HICIi
aY9eJdwtc07mvQZ79Rnc0ccTXstLlixp54G9e/e2M9H//Oc/bvXq1fb3QZ4b
y/4kV65crlKlShZDMaeK7z19jvm7oNi3YIrdZWx86ym/l3LCHqo81eKMrdtj
/+do8vztFmfUem/Osf9xDKNvN3tyzvvbtWvn93JOGPUm3GPwe+ph3hHP1+Ks
/3jiWsK1a9dab70g9tMTEQkb5vVlzZo1UjcYz/UZ1AiSz83nz76EfkxebME5
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
mlZypZKKM3g8zLjXoNaE53hm79100002U8g7m4f2xslr27ate+yxx9zKlStd
nTp1LNeM2Iz8KO4zmI/LHHV6AFNLLyISj+ifQpxBHfgXX3wRefyrr76yM5qs
WbNabmlYJXefseS+In4vzRBTEDOs2DLXbd29zt7v/mMTizkQPXOPx/n72avG
ug7DD/eUIv6Qo5vw03aLM+q8Ns/vpRxh2JSNFmc07jrf76UkyZvJ1+mzlX4v
5aTF232Gh/lx1OUxg5Czd2YtMVOIvbHii+Qxl+rVV1+1OI15heC8rmTJkhZf
EKdx10FdD3Xhe/fu9XnFIiL+oa8U5y2jRo2yj6kTJ8bw7jHIN82UKZPbsWOH
n8tMNcnVZ8y/5jq3+vmabveP49xfh/zp8bNm26JIztShvw65TTtX2ce9xr+S
5L+nh5Q3G8OrGe81vvnfr4Gx2aMoVgwZvdHiDGaCx5pXey6yOOOLcbE3j2LU
lC0WYzxUa1ogZ/J5jlWfEQbk7uTIkcNmeHMGz/kS6OHL7FL6TO3evdvmhBQu
XNjVqlXL5xXHJnqm0LuQGXunn356ghxjvnbUYZQuXdrHFYqIxB5vBhV9vakB
z5s3r8uVK5edd+GWW26JzN0II6/f1Pxrr08y5lic/x63+d333O/r03Y21ZfT
O1isQO4U1v+61D7uOzHpeYrkT3n3GFt2rY30v2UuhiSv56A1Fmd80Hul30tJ
wHrxN51iccbqzbF1JkpfrkfrTbc4Y+i4TX4v55TM/CYqzsjS5Ih+U0HGbCT6
Hl166aVWgzd48GBXqlQpq8Pr2LGj/ZudO3daLTi9keg9Ra8kncEnRB4x89DL
lCljtS3o27evfR2py/BQ63LJJZeEpmeAiEhK4rXGO5+h9o9Z4b169bJ+6j//
HHu56ylt16jRSd9teG9XX+tWVXnG7fpuhPvr79fv1LRhx7L/n6NXze09cLj+
d9XW+fbYZ1NaJ/vfDZ/dzf7NDws+tZl7vP/BqJoWg0jS3u66zOKMT4es83sp
Cfyy5jeLMUq8Gnt7li5frLIYo9KrP7tDh2KvbuRE1M7aNBJjhAl99ZiBxDw4
ar6jEW/wvM5MIZDnw+y45557zoeVxj5ir9y5c1uO8a5d//RjoG8X826j56NH
/72IiPyD50zug72cKfqA87zarl07+5h7dfprhDXm2P3DD0ePM6LeFt2Z221s
09YdWLEyxddBnlOfCYdn6DHHwrNk40x77MvpHZP9bzfuXHF4xt7I590ffx50
n05uZR+Pmd83xdcZFk3bLbI4Y8S42OrPRR9b4oy2A5b4vZQEqPcuUHWSxRlz
lwZ7T9Xh8Y8idxkT+sVePHcqyH3KkiVLsrUWLVq0sPo7r883dx+6x/gH8cKH
H35ofRhBrTwxRYMGDSL/hv5SzFQhlovu1SUiIkeifq1s2bLutttuc4888og7
44wzXOfOne3vqBEkl4pZVczb4Dk3bKjFON44I/ptxZPl3Y7Bg92hFJqdPnnJ
EIsNPhxT1x38458ePvPXTrTH6TF1NN4MDfpRbdm1xrUfVsn63/K+HKl6kzkW
Z8yct9PvpSTwfMfZFmeMmxNb87UbdlxoMQb9bINs9dx1kRij2R2t/F5OiuPO
grmkrVol/bkxS4lzJNV8H2nGjBmW/8T8d17z6MeIyZMnW67UgAEDIv92+/bt
1m9KMZqIyPGhBx/PpdSAY926dS579uxWKzhhwgSLPZgXTg+/MPlt4sSTijO8
t4W33+E2tHjN7V908nMElmyc8XeMUMnihJVbEvY/8uq8R8/rc9T/jblr/o+9
rwCPIsu+/1Z/u7Mzu7Pyn7XZ8QHGmRkGd3fXwd0huLsTIEjwwSU4gSTECXFX
4u7unnTC/fe9lap0pWOdtOed76sv3dXV1S9NqHrn3XvOcRTpOOyCb9LzO677
WzwufcbYRd7EMxJStCfnubBEAr1XO0k3Zygp0x6NtYt/DnGM/ovcITtPt9dv
DT6u9bMtK9VNT96mgN5Ib7/9tiiXjwd6eyDPwLzqtgzkW7IaC9RFffTRR3D+
/Hl6jt4o+D0dOsT1q2LO7VtvvaW3dX0GBgYGVQPrGq9evaLHUVFRdM1F/Vul
jCYBOcepU6c0NUSVoNjdo1U8Q3ZLMlgDbxTMHglNcYdjFnOJE7hHPZN7nc/S
cI543Oh5Kqsq4JT1EjoWParKK0vA2GYFPceaCIMYPSe6EM9AbbO2wN4vk2oZ
K05pjx65vKIaxq/zJp5xz0q365nXlt0VOMbT/fqTbYDzZaxfYA/PwYMH6ZqN
mmT0FMQ1edlsb9Q1Y89PWwd+X/j9YA4GArUWuM6GmhX0Qmnfvj31Rf3mN78R
Mr2xpxjr/gwMDAwMLUdSUhJ52i5cuFDo4UUEBQXReg7eo/bu3Ut1Y31AsZdX
6zlGu/aQftRQoR4q1GhbB10jHoCbQ6hJvcfZvL5Or/vG2TR5TvuQO1w+eCCX
u4g9VPgc+QbThNciv7CSOEb/n900PRQR9t8KJ55xxy5J00MRcOlxAnGM6dv8
oEqHtd85yXkCx1jXfpemh6NUODo6UvY05njPnDmT1uYRmLn6n//8h7ymkIPg
Gv0777xD+9s68N6GukTkDXzvU2BgIOkzsI5/8uRJ2tejRw+q46OnFPI3favn
MzAwqB/oMd6WryV4j3r48KFoH66X4bV20aJFEBoaCgYGBpQjW6li/yV1oMTX
r3V9U9925B5/3h5if54OWRcuQom3D1QVy8/rkYcUe3tD5Na1YDWrD3EArGU0
xiGe+pyi48JTm9ar5hanCX5VPK/gNeHIaRg4RMQWEc+YutJX00MRgP5NvJ9t
XJp29HwnpJVS5jfyjIAI3dZ+r2u3U+AZuWnapclpLfCaPX78eMpdnTVrlqh+
gfcy5B+9evWia/jt27c1OFLtAvaQff7556RP5IH9UejxjkBuhr6/qAFn3IyB
gaG1wCweXPvBnkyslaImmvViAtja2lKv7/79tX3+eF979913hZw/XUZpYGCL
OQZm+uWZPoP4efMhuF2HevypOkPU4KEQNWwERPTsLcrqeP3pZ/D4xU7IKmx8
7Rr1FlzGd/P0tw88jtLx3rFcrR/zxLm+rNmQkhvd6u9LH+DkmU08w2Cv9swd
XscWEMeYtNtL00MRsPzQa+IYB69EaXoorcL9baYCx7ix8p6mh6N04No8epPj
/Qq9pMaOHUuerDxQi4CZ1Zil0RaB/r4bN24EU1NTITeKB66bYY3n8OHD9Pzu
3bvEx1CngbX76dOna2LIDAwMegbUHKDPEnoqoT4Ot9WrV1POEZ9b1xaBPuvo
XcL7T/G4f/8++XHoQ92n9HVwi+sYVYWFwnmqCgoo+y9l23aIHjEKQjp8Kf++
z9pB1NBhkLb/AOT4uTcyqlqcs11NvKGgNLtZx/M+uJcdNgj9E+iTi/uuOW6T
zkm0R4+gKTywSCGeceic9syfL5rFEc8weqgdXNDCOYM4xpBlHpBfpLt1y6Kc
IoFjGHy6XdPDUTnwftWuXTvK905PT4fLly+TBqEt+6+i7hDv77iGiHneyB+w
L4rPR0f+ga9bWlqSv/vmzZupdwp19MX11KUZGBgYFAF62WG9ub568oQJE2DZ
smUaGJV2AK+x6EMlC/SjQu6Buaj6APSJalE94/P2jZ73TXU1VGZkQFlEJH1G
hZS7KuqBW1UtoToE+tM2lx9Uv6kWMsFjM4NoH2rEL71cT/s8os0UGoM+4sz1
WOIZVx9oj+fOjIM+xDO8wjXvN5pXWEn8AnnGC5cMTQ+nVVjfYbfAM1IjdDvD
vC5wHeHevXtw4sQJ8u7gkSG97mDvD9blcb4s+1pbBfIKXBvDDFqszfPfD/ZN
YR/w119/DX/605/Yd8XAwKB04NrGpEmT6n0N68ydO3dW84i0F1jXQI7BZxjp
A5AHtFif0QTXaC1yilKJG1y0X9v0wTJwj3oul+0XV5MrfuLFfMgt1q/5lqLY
ashl9Fm+0o45dHJWKXGMwRtcQVJV3fQbVIzdFyKIY6w8/Lrpg7UYD3c9FzjG
pfmN+0LrGrA+0bNnT8o3wvUwXKtHfw5ZYO6DPmjolAXUrnz88ceUC4VALxPs
k8LeKFxrxO8QdSwMDAwMygJmFeG1xde3fj3ovn37yL+DgeMYqNNAvQYCe4Kx
hxX7gXGdaM2aNXK9r7qA8piYlvVNde4KiRs3qXRs0en+xA1Qc6EISsoL4PiL
eVQLyS+pzXvDrD883z33Q8oeqk5hznp/4hmBodqhbTaxTyKesft6yzNYlAX3
oFziGH3mu0FSuvZkiyiKomyZfqmPt2l6OErH6dOnyS8JaxplZWV0DcYscImC
vtptCfg9IS8bMGCASCuPwPsZ+p3oQy8wAwOD9qCwsJB4RkMaDLwWsesOhxjp
fNzDw0N4jjp5/O5Qq4HfEa6pzZ49W3MDbCEq4uMV4hdZd00gcdVqtYzNI9qc
eIFdsOIeMTyneBV2X9hXWlEExjbLaX9AgoMSR6pbGDzTnXhGVo529KwvO8ll
gNv5Zmp0HCVlVTB2DZeVcdsiWaNjaS3Wd9gl8IyUcP2r3y1YsACMjIyIV4wa
NYqyqRG4LhYSEqLh0WkH0O/3559/ptwL3oed923HdTEGBgYGVQOv0f/973+p
v5Wh+cCeYNTII7cYM2YMfY/oO/773/+evAJ1CRXS+46itYw3aupF4LlCSzgB
ekvhe09bLwVJVe18OizFg/aftFoMhWX6kYGiCEpKq4hjYE4fr5PXJHILK6Dn
Kifou0bzGeCGN6KJY8zZGaDTWRkmm54IHOPiPN3vl3r69CnMmTMHdu3aBVlZ
XH3S0NCQenrRkxX7gfi/5S+//BJcXFgup7W1NeXwIf96//33yW+rsMa3w9nZ
GX73u9/pjcaQgYFBu4GeSqj/wh4g1D3jmj1m8vDA9Q+8xqOP9p49e/Qmn641
wPUh7AXGe9uMGTPoPof1DtTV1a1HazsqU1PlucSnn4s0GClbtkLwdx2FfZGD
h6hlbFdfbSFOkJrXMg+iG8476f1BiY6i/U+8jWj/Q89jyhimTiEyrph4xuTl
PpoeCuGpSyrVMjZc0KzHrm9oPnGMHnNdISpRdz12spNyBI6xRg/8pZYsWUJ+
6+jLOm/ePGGujD1AWE/GDX1bEefOnYOPPvqoTXtL4e+OmedTp04lPoHA/mjM
40O/X56P4Xf1r3/9i/K/GRgYGFSNZ8+eQYcOHeiajf5269ato/0BAQF0LcIe
IVz7wOvUDz/8IPImb4vA72f58uX0GGsZQ4YMoe8OM8QR2EeFuUbasF7cFNAT
qrHaRZErlxmNv4ss/8iztFTtuKrKwbDGa0q2HqEI+Dzw6047RPuLyvKozsFx
ECdlDFdn8NIti3jG2v3a0VtiYBxEPMPCQ3O9PaXlVTB+HdcvdcVUezy4WoK1
n+0QeEZGXFbTb9BioN8qcgz0j6oP8fHxMHToUMoyat++PXkm4T2rLQPvzV26
dKH7kez3ht6+//jHP2itkAf6/jIwMDCoC6gDw/kxX5dGoPcd9rvy82U8pmvX
rnJ5EqjJ0ycPpqaA12esSeP3gNdvXFtD3lFSUkKcDWvS2I+G/EPb+6gk2dmU
a5GyYydE9OkHkQMG1mTsdaGfqXtqPVyKPD1FHAT/HlSFxOywejmCIpBUVcKZ
Gj1Gcq7YrzEk2VXon2puNoc+4MajJOIZRr/EaHooUFBcCb1XO9FWUKI5X6Aj
17l+qVnb/aV/M9q/NtAQfll0W+AYN1c/0PRwWg2898jmo2Kt+OrVq9Qb9eGH
H1L/KgK92TEztS17S2GfQWpqKj1OSUmBf//734JmhYe9vT3dm/QhX5aBgUH3
4efnRx6usrwDgfXY3bt3C8+xDxSvXXVzJvQdmD3bt29fWiNC/0Qe2GO2cuVK
4mZY858/f74GR9k0qoqKoPCVI9U1KqT3p8SVq4hDZBidpJ+Y4y2LqJGjBZ4R
3r2nysblFmlaowFvXX+5Y9hDOs9zv3Nyrz3xPkmv3fc4rBO1J2Vgv3Ek8YxH
L1I1PRR47pZGtQyDs0EaG4NHjb9UTx3vl4r3TxQ4xrp2OzU9HKUAtd6jR48m
/oBcAte4cH1n69atpNXA+xOfNdeWgTm7b731FnnTHjx4kPbhPen//u//wMTE
RHQs3qdZ9h4DA4M2AOfReE2XnX+hVgP9A+3s7Og56jj+9re/wYEDBzQ1TK0B
5s7id4X9ZdgLi48jIiLI20OXkHHyFHGItCNHIbxzV3pcFh4uvP5GIhH1T2Ve
vKSScaD3LHKA8FSvVp2nsDSHeq+OWcylfilZFJcXCPUO37i2sca3aEsg8QzP
AM3X2fieKTMp39AECoolMGq1F/GMm2ZJGhmDsrDqw60Cz8jLKNT0cJQCrK/j
9RP1g9jPi/oMWX1gjx496LrbloG6QOwt8/T0pD4zvD/z38mlS5eIf+C9nIGB
gUHbgPqwr776Cnbu3EnrScgpsF6NvUAIzIrAftiJEydqeKSaB/bE4loSfkeo
10CtC64joQfVli1bND08hZD/3Iz4Q8LSZZC8aQvHJc6dFx1T8NJB1D8lUXJv
GGoz+PwL9KJtLUx9zhCXcI6Q7+2LSPMW8vuyC1Na/VnajiGzPIhnpGdqVmOV
V8T3TDlrrGdqm3E4cYyFewOhWof9pY4OPyNwjOeHrDQ9HKUCdd9mZmbUnyoL
7FHF+XVb7QFKTEwkLxLsjZLtL8DcPaxj8DV29CzBdS8GBgYGbURYWBhpyt55
5x3SlWHPFPIPXKtHT9dvvvmGarA4n162bBn9bKv46aef4Pr16/T46NGjlIUk
C1vrVJg2wQl6/mRJP/G5NqI06DVxh6hhI6DA2oYex0yaLHdc5OixtZl933ZU
6hii0n1p7n/LZU/TBzcDSTnhdD5jmxVQVS3vnfoi4HKNFmR7va/rCwqKJMQx
+kxx1Xif2FNnzmdq/XnNZG5bumQQx+i/yB2SM8o0MgZlwOuRn8Axtn6v23Xl
QgdLiJ87GiIHf0c/8bks+L9Z5BiTJk2CQYMGaWKYGgfWdDAfFu8x7733Huko
ZbVyGzZsIH0G6jRwjZBlYDEwMGg7AgMDITm5NrcKtXnYL4U1W7z2Yw/t999/
36Y98tDnBH3K169fTx7AeB/kgZyi6/cv5DZt5BpVUq5I3OHrb6FKyiFD2n9B
OvGq/HzRcdVlZaL+qUQD5eU+vQi4RPN+96jnSjvnNcdtdM7gJHlv/QpJGVx8
uY5edwg1qefd+oGgsALiGbPWar6PYqkRl81n5aV+z5uUzDLiF8gzzBx113On
rLgMVry/WeAZFaW66+eKnCKy/1dymyzXwBxUrLFjPy/W1Xk/27aEBw8ewKZN
m4Q6OdY1sLdMtm6OevnBgwfTcQwMDAy6BnNzc5FnBfZVYWZdQ5nibQnIxdC7
HNeTsrNrPYywflEfz8D92ojQ777n+qFycyFu+gx6nG8ur/PPk/4tyPZPlfj5
tfqz0SPqlNUSmvPnFCmvbx8zNPCcmKlRH1Jyo0jHgcfEZWpmjV3VeGabRjxj
x/Hwpg9WIdJyyohj9F/rAiXl6s2bQT+p+XsCiGNsOROm1s9WNjZ/t1/gGG4P
tCMPpaWgOkY9PAP388AciJs3b1LOtabrcZoC6ryxt+DKlSvCPszJwIxY5CA8
sK9ZlX6ADAwMDKoAXrtwLenYMS7fDPtmkXNg1p8scJ5tZGSkgRFqJ7BXqj6e
gfu1EdgzhbyhNDgYsi5eosfJGzfXe2zE2PGiTL/W3v/DUz1b7WdbHzCD44z1
Ms7jNqd+jxq3yGf0+lnblaQR1zegly3yjGsPNZsRccsmkXjGzmvqn+efexBH
HGOMgRcUFutuj9z9rU8FjnFk2BlND6fVwF6p+ngG7mfgPGmxXwyBtfIvvviC
7sc8MGcX9fLYe8DAwMCgy8D8OQTqnT/55BPKaZXF7du3SYeGueIMHBqqZ4wf
6aCV63Lx8+YTbyi0s4Oy0NBGPWzRF1e2phE5aHCrPvuBx1Ga6/vEKl/fyXvc
PvM1rvf1N2+qwaTG5wrHoY3/Nq3Byl2viWc4eWo2L2TmQR/iGc5B6h0H72Hb
fbYLBEToLo9MCEwSOMbqD7dClUS9NSFVoDn1jLYK7INCLeTkyZxODjWR+Bw1
krLXKPT6ff1aP2uxDAwMbQ/5+flUv3V1dRX2+fr6kq8eX9NFHyasbeTX6e1v
a2hIn4HbsAF2sHdHIB1TWKgdOVO8z1TOXRO6j/GZfeXR0fUen/v4iYhrZJyp
fx7fFHKKUmu8nxZAWaXyPd4LyziPW9zwcX1A71ve69Y96pnSx6BJDJ/jSTwj
OV1zuueIxCLiGMM3u4GkSn19HVl5FTBsuSfxjGvPdDfzG/8/ynrYxgfo7u8i
iwzjw03qM9oyoqKi4K9//SscOnSInqM2EjWSsjmGDAwMDPqGoUOHUlYd+lpg
/QJ9BjEXm8fcuXPh7bffph6qtu55Ies31RDn6NHJEhbPc4cbV6MhSoPrremG
xzg/2xq+kGSwhp5n37zV4Huix44TcY3yOj6UzYFl4BWa31sHXWvhyJvGc9+z
9BmOYQ3nJcdmBtExhuazISE7VGVjUSfypRwWOUbvyZr1mjr1OJp4xomH9XNW
VQA1GUsOBBHHWHnktU572O7vd0LgGLfXPdL0cJSCkiBfMb8YVL/flD4De5Ex
74IH8ohz58TZolZWVtSn/OLFC3pua2tLz9EXkoGBgUEfgT6269atg/79+8Ov
f/1r6N27N/VTIc6cOUP9U1jL3bdvH+UFYXY4A0D3TvXzjLrbqCEv4eDeIHj1
Mh1KStTXS5595SpxhdS9++h57oMHQqZGQ0A/KlmeEfLFVwp9Zn5JJmXp4dw+
t1h1HkCo90YOcdp6KVRWNezP4xT+SPDCrZvvp4vwDsojnjFvQ4DGxoDz/RFb
3IlnhCWoL0vujAmnycBMvpwC3fVksjr9UuAYW77dp+nhKAVlcVEijlHk7dr0
m/QQ9+7dIy033x+AWnd8/vixOPMH76fvvvuukIMeHq5ZTwcGBgYGdQAzgT7/
/HPBZ/DVq1d0jXzy5IlwzMqVK2HKlCmaGqJWYWh/22bxjLqa8RWLPeHuzViI
i219dl1jyKvpg0pau46eVyQm0vOwHzo1uhae++ChiGtEjx3f7M80979A83oL
/4utHn9TuOWymz4rIMGhwWNQq3Hf4zAdd8d1n87natx5lkw849C5KI2NAfUY
yDFmHFCfN5KDdzZxjB5zdFuTkRaZIXAM9LItzFbtNUAdkGRlSbnF1wLHyLN8
0vSb9BjoQ/uvf/1L8JA3NjamfgBZzUWW9DvDbHTMzMW+ZAYGBoa2AswDQqC/
Lfrc7thR6xeENQ7MlMD97dq1g7Fjx0JamvI8S3UNs6e5KMwz6m7jRjiA4aFg
8PetX2fQGvD5fAmLFgv7wnv0pH1lTayfRY8bL+IamZd/afLzkmtqDMdfzKe6
hqoRmuxGn3flVeNZ7SXlBXDObjUda/v6hsrHpUrsPhlBPOOxpeYyWzZeDCae
cdc+SS2fF5dSIuRkmFjpdta7wcfbBJ7h9UTz+SethaSoCCIH1HKMbJOmrxP6
DvShxV7kzp07Cxxi3rx58Omnn0J8fDw9R1/fhQsXgomJ/ub8MDAwMDSGMWPG
wKhRo0Tr3itWrKD8Uqz1lpWVUV1j4MCBGhylZrF9s3+reQZui+a4QVqq8rMR
i1xciCPEzZgp7Etas47Tht9qWKOBkGRnQ3C7DiKuURbTsDYH6wQ438e5vHO4
evrNq6ur4Jzt6mZlZaTmxUj5zzw6NihRO/NOmoOfV/kSzwgK18yafnZBBfRe
7STdnCG3UPW9S0UlEpi0wYc4xs5zut1bcmjwKYFjnJl6WdPDaTVw3Sly0LcC
x8g4d1TTQ9Ia5OXlwWeffUbaRgTyDcz9xl6pYcOGwZ///GfKhGVgYGBoq8De
KdRt8Lh69Sp5UKEXFY/r169TbaOt4uyp8FZzDOOTYVBVpRo9a4m3D/GDmIm1
meY5d+5yvVSrDZp8f869+3JajTcNZEa9DLlLc/jLDhsp40JdwKxx/NyHnsea
PJbP+EO+gbUXXUN5RTV0G+cMXaVbmZpz8XjctuUyM7ZcDlH5Z6HO28AwmDjG
zO3+GvudlQGLY7YCx1jXbidUlut2/x4ickhHgWOkHao/l6etAH3icR1u27Zt
guYC92G/1OnTp+k59goYGhrC+vXrIa4F/hoMDAwM+gr0oEItOGZq8ECPW9Ry
4DUT4e/vDydOnNDUEDWCBybxLeYX3X98AZPHOoLTq3SV+QaVBgZy+oox44R9
ZRGRtC+iZ69mnSNmwiRxrsaw4XLHRKR5c75OFnMgNU99/kOI0ooi8s/Fz88u
arqnxi74ppDhV1iq/F41VQJrGFjLmLbKt+mDVQD8O52y14t4hmuw6r+7k3di
iWMMXe4BqVma8/BtLWRzMnBDjYauI2rYjwLHSN62vOk36DGuXbtGXrXIM7BW
8Ze//EXwSkFtI3pJodaRgYGBgaF+YA/pli21PfDYfzpy5EjSamD/FGraPvro
I+pHvX//fpvRtaF/VEt5xsQxL4XH0yc5gaV5Mkgkys0hKA16zfGM0WOEfThX
DP2uI+2vTG/aD0qSlQ3B7b8QcY20Q4eF19PyYsHIkpvne8doxr8S/XOb66OL
vVb33Dld+DXHbVAh0Z356wOLFOIZe09FaOTzvcNziWOM3+mpck9ZU4c0Tvc9
1xX8w3U3t6eyvFKUk2F3Xvfnm1EjuwgcI3HtXE0PR21ALaKFhYWo3wnvfViz
8PT0FPbt3buXeAefN4UaR+yhwpw+BgYGBoamsX37dnjvvfcgMTGRenTRD/eD
Dz6AU6dOwejRo4lzJCXVakRxbquPXrghwXmt6plC76nhA2s9q0YPfQm3rsco
LeevNDCopp4xVrQ/btYc2l9gadWs89T1n8KtyM0NMgoSyFcW5+wvAjTXb451
DD4XEOsbTQGzA7G/C9/z2OsEVL9RX85ca8BrwB9aaEYDvv1KKPGMq5YJKv0c
L+n/K/SVQp5h5qg6b2R1YGeXwwLHMBx1ruk3aDmix3QXOEbC0rbhO4j3L/R9
x77h999/n7zfZ8yYQa+hhxTyjLrHf//993DkyBHhOd4rGRgYGBiaBmYKodct
+oIjVq9eTdfe1FRu7oO1DrzG4n4eu3fvpszxWbNm6dWaTmZGWav1GSZ3YsDM
NAmmjncS9vXpZgWH9r2GyFb6d5b4+nH6jAkTRfvTj5+g/elHDZt9rpgpU8Vc
47N2YPx0fs1c3YjqBJoE6jMUyf7GbA+eI+mKB9XEpT7EM0Kj1O+FmkP6b2fS
gGflq65eGZ1UDAMWc95SxvfjVPY56sD1FfcEjrH2sx1QWqA7tbP6ED2+l8Ax
4uaNafoNeoLDhw/DJ598ItQxoqOjKX8PgfWMP/3pT0LmHo8lS5aQVoOBgYGB
QTFUVFSAg4MDPb5x4wb84Q9/AC8vL+F1XLtBz9u1a9fS82fPnsFvfvMbOHny
JHz99dfkTyWrL9dlYO8IZn8ryi16d7WCnGyxvxR+b24umbBqqZfo2HkzXcH0
SSIUFyle4yhydSNOEPvzdNH+Als7OR+qpkD9Ux2+FHEN3286gKnPaa3IpIjL
ChZ0F80dT1JOBHnw4vs8os1VPMLWobBIQhyj50QXpffXNQdYw1C1/jsjp5wy
+JBjbDMO02jeeWvh+dhPpMmI81VtDUjViJnUV+AYsbPkNVr6CuQRqK9wcmrY
o27r1q3w3//+V8jHSElJofwMc3PtvqYwMDAwaDNycnKoXoxcQxZnz56l9R30
0wgNDaVjMEccUVRUBL169YLBgwdT3UMfgFnfivKMW9cb10rHxxXBiaMhMLCX
TW2NQ8pN0EcXdeOVlc377gpsbLn8jIWLRPtRl4H7Qzv+oNDvGnrxmlz/VF0O
o0mg3gI5w+sk52a/JzzVk96j6PvUDXffXOIZCzap3wsT87/HbPcgnuEToZpM
9YJiCUzb4kscY/H+IKho5t+4NiIrIVvEMTD/W5cRM2VALcf4eYimh6NWYN0C
a/F476oPWJ9HfrF8+XJac+vZsye88847rJbBwNBGERUVBRs3btSb9XRNA+vH
ssA1H+ypevjwIWng8PqMW7hMJhxyD9wXEqJ6X0x1AOsNLfGaQi7RFMrKquCF
WTIsW+ghev8AKf/YtS0A7G1Tobi44bX73IePOA/bdevlXgv7qTO9VpHUdNZa
bm45nDEKgx4/mYNFl15yXCPj1Kkmz6EOYC4G8oXrTtsVep9PrI3glxWdrp3Z
aRfvxBPPOHm14QwTVeGlXyZxjJ/3e6vk/OhXu3BvIHEM5BoFjfxNazsklRJY
8+l2gWOcGHtep+syMVNrOQbyjbYGzNXD+1VgYGC9r6NP7YQJE+ixt7c3XLp0
iXnWMjC0YeC14ocffiAN8+XLl/VmTV0bgLrvf/7zn1RDxu91+PDh8OWXX8KG
DRvIewPzT/F+e/HiReqj0hdd3Ob1vs3iFoP72oieowa8OVyDB+b43bgaDTMm
O4vO00N6nqXzPeDKpSjw88mBcpmMgawLFzl/qAMH5c4naMFt7er9PMz08PHK
hr07AqF3Fyvh89YuuwohX30txzUK3dwU//KUDOyXwr4p5AzxWYrxWMewh0KW
eUJ2qIpG2HIs2xFEPMPBPVv9n30ygHjGI0flZ3FXSqph1VEuI2OMgRf1Tuky
9vQ0FDjG+g67oDi3WNNDajFk6xgxk/tpejhqAfYF8/1PPDCvFv0V6wN6uffp
00cNI2NgYNAV4Bz4/PnztEbRsWNH5mutJKDWG7kFfr/INZBb8PWOp0+fUp3j
448/pj4qXAPiga8tXrxYU8NuNY4fCWmwZiH7eOcWf9izPUCOa8TGFir8mYkJ
xeRLtXieu5w+BHnH7GkucHBPELyavoE4QJTheaqNyCLt4CF6LfOMMfG/rMwy
8PXJhnt34mDrBj8pL6r1wer2wwvYYOADYSGcT2O+hYUcz0BdeGWG5nMB3CKf
NTu3ry5sgq7Te40sF0FKrnpzQBoD9i31nuxKPCM3XzleZM1FeGIRcYzBG1yh
RMk5efh7bToVShxj2ApPSEwrbfpNWoyry+6K+qWiPeM0PaQWQ1THmNQ2OAbC
2NgY/va3v4GpqSn1+BYXFxPvQI+p/fv3i45FT3f0POH7ghkYGBh4GBkZ0XzX
wMCA8ucmTpxIegOG1gGvu9g7hRyubmYfet6iF2DdGtK9e/dg2rRp6hymUnHz
Wowcx5g2wZF+jhxkRz9ldbs/T3SU4xpRkS3v40MPXAf7NOI7M6c4i/jNrXbj
iAMs//oAPe/X3Zr0JJPGvIIDfTiecfubKcRN6uNKeNzFsxGQnFQi97nxCxbK
cY3QbztCtUSzPS+yuX1ZhckKvRf5lrn/BXrvSavFlA2iDQiNKiSOMWGpavqW
GsPem+HEM848iVHqeauq35DWGznGoCXuEJWgu+v+CMdrbiKOYXNWd9evZDXf
bYljIPD+hD0PeA/D2jsP9DNB3eHkyZNJ3405UV26dIGuXbvSfY+BgYGBB/pH
vPvuu3DwINdLgmvuqOGqrFTvOqG+Aq/TAwYMgD//+c9Uq+Dx/Plz+N///ic8
x+8bs//4LCNdhdWLFGHNH3+uWOwJjg5cfh/m723fIJ/d3K+HlbgG0ckSwkKV
o68tKZGAv28OZZW7/9CP5v/LBtyAXp3Fnzn1m/P0muVnven50H52MH+WGxzc
G0T+VolNzPskubnEK+pyjcjBQ5Xye7QGNq+5uoRl4BWF34tZGs98jen9p6yX
aAXXuP00iXjG/jORav3crPwK6GPgDL1WOUFajvLmUljH2H42nDgGetiGtqCm
p02I80sQcYyz06/qrCYjZkJvmV6p/poejtqB+kHMf0If20mTJole8/f3h6FD
h9IaJXq5o9+trt+/GBgYlI+lS5dS/05byazWFJBjINfA3lbMK0Kfv9mzZwuv
47/Dhx9+SLxPl4G9Rv17WMOyBZxW++TxUJBUVsOQflzfUX0ZGCXFlXK1A+Qa
QYG5ShvXGymPC27XAYI//RyqS7l+FPTGTU8rhYT4YogNyeC4QYcvoaK8ZTWI
Qjs7+f4p6Za4anXTb1YhMBvjqPlsOP5iHhSXK14rwiyQpz6nhLqGpnuo1uwL
Jp7xwkG9fWnnn8VSLWPbFeXpVbC2t+UMV8fov8gdgqN1m2MUZhXBqg9q8763
/rAfSvJ0s/8relyPWl+pqYM0PRyNAesTwcHBxCf49UhZ4FqarvJIBgYG1SIo
KIg0yI8ePdL0UNoEkpOTYeHChdChQwdYuXIllNbMd1GD/9Zbb9H6EAJ/1u2z
0hXgvD3APxduXIkivnDkQDDtNzwUTM+NT4bV+77g1/JZ4tjz5OOlHN5VFhrK
1Rf6N+wRE96lG+c5ldJyfW/iaoN6uUbmhUstPqcy8MT7JPEEp/CW/V9HrsHX
NVCvoSltOGa09JvmRjwjPUt9ayOoxRiy0ZV4Rki8crhAeUU1rDseQhxj4BLd
5xhVkirY8MVugWOs/N8WSAho2r9NGxE1qmstx5iu+ZqkOoGcwcrKivQXLi4u
wv4nT57QfAHXzCQSCURERGhwlAwMDLoA7Ofp27ev3H68fqxZswbmzZtHHISt
VagObm5upIm5e/cuPcd6BtapO3fuTD2vulpnevwgoYZncF4lyD3w+djhDXvn
m9yOleMa2H/l5Jje6vHk3LnLedoarGnwmNgp0+iYIhfXFn9OVWEhhHXqXC/X
KLDXXG5Ack4kcQTM/K6satnfFPZQ8XoN9KGKSvdT8iibBq/NGLdYvdqMey+T
iGOg15QyUFwqgaUHg4hjDFnmAWEKeK1pK/b1PS7ql3K+6a7pISmM6qoqiBre
qTbne3b9vkr6CrzXjxgxAj7//HOYPn061TA2b94szAEOHDhAXOPf//43aTMY
GBgYGgL6R6BnRECA+L6J2Q7oL9G7d2/SC3zwwQe0Bs+4hvKBOal4vUavWwSu
EfXv35++c9SJjx49mjhHUjMyHbQNd29ynOHkMW7dG/9+Rg/lMvyCgxrWXqxb
5VUv17B+0ToPUeQXONfPuXWrwWOSN2ykY3Lv3W/VZxW5uNTLM7BnqywqqlXn
bg1uu+whjuAbZ9vic+C/I6/3MDSfDYEJ6tX3Xn+USDzj4Fn1fY/oNTt2B5fL
5/K69T662XkVMHO7P3EMzPuOS5H3FdA1XJp3U8Qxbqxq3f8hTaC6sgIih3wv
cIz4heM1PSS1A/3Wv/32W/KzRcydO5c04JjPxwO9TTATis0JGBgYGgN6SCB/
qIvvvvsOxo4dK1xDcI6LeZ5eXl7CMX5+fjB//nxa78DrjUTDnjq6CvT1wixw
zFBFrF69mvR0qamp9Bz7XtEnEPfrGs6eCieOcO1y7XzQyDCU9mHGXWMYUeNL
VXd7eD+uRWPBv2U+h688umFtQcbJU3RM+rHjLfocWaRs31Ev1wj54kuQaMjL
LSLVm/jBpZfrpd9J67JyXCKeCLnhzhGPlTTCpsHnZti5qE/H9NwtjTjGzIM+
rZ5bxSaXwNi13sQxJm/0hdQs3ffmMTtsJeIYBwYYQUVphaaHpRAkhQUQOeg7
gWMkrPhZ00NSKRwcHEjD/c0338DRo0eFezh60qJWEOvoyDF+/PFHynby8PCg
jD4GBgaG5iItLU3OuxYzqX/1q19BbKzYU+brr7+GK1c4r5rIyEjSMw8bNox8
cDHjDx+jrzaDYsjMzITcXE7rfOPGDfjDH/4g4nM4p2nXrh2sXbtWU0NsMbZt
8iNugPndPAL8cmjfxNGNr4GXlUmgR6f68/1+uai4x1CJlBfjHD+iV59Gj8t9
8LDBvHBFgVrziF696+UaYT90gmoN+Lkht0COgdwgPNWz1efzj7enmgaez8zv
PEiqVPs7YU52jwku0GWsM+QXquf7Qz3IlL1exDNsfFqnO/cMziM/KeQY8/cE
QH6R7nv6eT7yFXGMde12QmasbnlZVGakQ+SArwWOkbR+gaaHpFJcuHCB+qF2
7twJZ8+epb4FnmfcuXOH6hdY00Dfdd6jFucAqNlgYGBgaA3QB/v//b//J9oX
FRVF1x30t0McO3aM/Fj5db2MjAzq5WTZPC0H8j287iPXkAXeA9CjPC4ujvzK
Bw0aBJ06dYJLl2o1xd7e3rTupG1Z7pPHcrkYYaG1Poc4Z0O/WNwfF9N4P3pE
WH6DWeLHjyqWbZ26bz+XA77vQKPHFTk703Fx02codP6GUOLrR71SfM+UyO+2
/0ClfIai8Iu3I15w03m3Us4XkxFAunA85y2X3VBUphw/4vrg5ptLtYxZa/1V
9hl1gdwCOcbkPV6UcdFS3LdJgR5zXIhjbD0TRhpwXUeUR6yIY+D22lb7suMb
Q1lspMAvcEvZ07B+Sx+ANQnMiJXVd8sCa+t4v8eN5xjowY5ri/yaGAMDA0NL
kZ6eDr/97W/B0tKSnuN1plu3btCjRw/hGPSawGOw9sFj+/bt0K9f28ovUjai
6/TzYA8s3g+wLw1zFPEx6vEwKwlrHKjfwH8v7LPStr4qzNJGPtC3mzV52spi
745ALjPvetM5Z7evRzfINbZtbJ4GGf1s+Z6p0sCgRo8tC4/g8sKVmHmRftRQ
lBEuyzVip6m/N6OyqgLO2CwnXpCY3Xj/WnORUZAAF+zX0jnP2q6CpBzV+NAc
uxRNPOPCHfX0byAvnn7Ah3gG9k61BGUVVbD3YgTxC9zOP4zXi7729OhMWPnB
FhHHMDe00fSwFEKRj7uIY6Qb7dH0kFQOrFegf7osAgMD6d4yZ84cWrdCLoL1
DDwO7/9///vfwcLCQjMDZmBg0Ds8ePAA/vjHP0KfPn2oJwqzNXA+ywPXzYcP
H041DdSMI9CH9dy5c/SYaTdaD9TE/POf/4StW7cS//jd735Hun0e+L337NmT
NuR32vYd378bR1xgg4GP3Gt2Nqn02rKFHs0619KFHg1yjSXzm/azyZN+b8Qd
hjftGyPJzhb6mpSF6grUlg6rXxdO/lfq74lzjXhKnOCRV+t1KDxKKgrBxO0g
nfeYxVzwjlV+j8WEJd7EM4LCWp4XrwjsfDOJY0zY5QmSKsXrD4nppYLeu+8C
N7D10K1+ooZQkFUEBp9sF3GMczOv6RR/yrN+JuIYWVdPa3pIagH2RKP/C/Yl
3L59GwYOHEi90qgDxA29DxMSEshz3czMjHThJSW671PAwMCgXUAfJNRjYO2C
r50eOnSItGCIoqIi8kXCtfQUmawBpt1QDnbv3k1cDjnd+vXrSa8nC/w+sa6t
jbl+1M8+juuZsrdNlXu9oKCScjF6/mQJZaVVzTrnwN42DXKNqeMdobKy/jkg
znuQX5CH1P2m/W/eVFUJPU5vlNiHViblhZQR2ADXSDt8RGmf1RyUVhTBiRcL
iBNkFSrPywwzNhxCTQR9+GMvI/osZSAxtZQ4xsDp7lBVpfr5rKiW4ap4LcPS
NYNy95BjTNzgA9FJ+nENLC8uh41f7RFxjD09DaEkX3ey+LJvXRBxjFzTu5oe
klqB+oy//vWv1CO9ePFioTcBr5ddu3ZlPdAMDAwaQa9evSi3h0d+fj7VOqZN
mybsY9oN5YHnd8uXL6d7gSwOHz4syvXTJjx7mkjz/3EjHCjruD7Mm+FKx7i7
ZjbrnDk55Q3yDNxGDLKHgnx5TW2+uQXN48O796S6QnMQ2vEHeo8kT7k6g6yL
l2o9pzp8Kcc1si7/otTPawq2r28SF7Dwv6j0c0em+cAp6yU1fVQrITaz8X61
5uDOs2TiGduPhythhE3D2iujRbWMwmIJ7DgXLvRJbT8bTlkZ+oDKcunv1vmQ
iGOs+WwHpEa0Pt9GXUg7uk3EMQqd7TU9JK0C+kshD2FgYGBQN5ArfPbZZ8Qd
eOD8F33xeDDthvJhb29PvsKvXr2CyspKugdgH5WJiYnoOM+EUNhqcQnm3z9M
P/G5uvFaOt/o18OK5v42lg3nXRjXeN6i921zYV/Tb9XQ1r+HNSQm1q6dV0t5
GvpLUWaGyb1mfw7/ngolZ5ZgfSRm0hSBV4R+850c10C/K3UhvySTvKKwx6mw
VPk+uwWl2XDX7YBQ27AKvALllS1f816yjfOztXFqHjdtDSRVb0j3jTzDwqP5
c2gX/xzKw0B+0W+hGzx7pTvz76aAWd/oV1tX9x3wIljTQ2s2EtfMFnGM0mD1
50yqG8kpTmD3ahmYWoyln/hcFnxOBvbebtq0idYJZe/xDAwMDOpCYWEh9e/8
97//pbrGiRMnyCNJtsbRlHaDoWXAHjb0Ffz000+pX4rP9eOBnGKOyUG5TZ1c
I7ekEBafvgrdu5jBihXOjR7r5pJJ3GDRHDeFPmPHJn85foE9WN1+5B5jL5a/
L5ejlnbgIM3do0eMon6o5iJq2HB6X1m48tfNkbuEfPVNbV1D5jG/5VtZK/1z
G8Jzv3PEAV6G3FHJ+dFH1yPaHI6/mEefc852NWV4KIqCIgl0G+cM3ca7QFGx
6msDz1xTiWNM3efdLI8pzN3DugVfw1i4NxCS0nWnj6gp4HX9xLjzchzD/Khu
6L6xvh47Y1gtxxj4DVQkJ2h6WCoHcoqn5iPlNp5roO4Sc2LRx/CTTz4hf5Gg
oNbXHhkYGBhaCvS8u3z5MgwYMIDy/Ph+qOZoN9Cb9eXLlxoZt77g559/hiFD
hsh52GL9oj6egfvVgfCMRDAwPU2fufb6DcjKbbwnv7CwknhB7y5WDWorGsLI
ejL8enWRbp0thezwx8decvP2z9s36TFVFzFjx9N7S1TUk8ZndAj+U9Ix1s0M
L3JyavpESkB6fjzN/40sF0JZper0A9mFKXCrJosct4eexyCnSF670xDMX6ZT
LWP5jtcqGyOP8ooqGLOdy/5GHXhjwL5AE6sUIROjzwI3el7dCv9bbQPO0c/N
vFrLL97nfmL+ty7ovqtKSyBqVFeBY0QN+R4kua3PdNcFYP2iPp6B+3kgr8C1
wrt372qdnwgDAwMDj+ZoN8aPH09eeZjRgXpxBsWRl5dHW11gr1R9PAO34w73
wCHKD5LyMqFayfOCtMIcuOxuJnzWQbtbUFzRvHXcKeM5rXhocH7TB8sgP7+C
ahg8x+hZwy+wX2tAT14vbgF7vjCATOOzCv9OsVOm0Xy/2LP1OXYNIWHxktr+
qe9/lNeGS/lHsadX0ydSAh54HKW5v1vkM5V+DtY2MLvjlNUSwZPKLvgmlJQ3
7R21/kAI8YxHL5rPTVqKmzaJxDHmHfVrdB7t4J1Ned58DWP9iRC9yPauiytL
7sjVMQ70NyI9uLajMj1FlPEdPbobVJe2He8kU4sx9fIM7KFiYGBg0CU0pd3A
Ogb2+2BtduzYseSbe/p02/ARVAcaqmfU3RY9MCQucMfXBhyjAyAyMwkKypp/
362qrobEvAywifCCQ/a3hfMiz3kS5EivNxe7twcQJ3jyUPH+hVcv08TajJ7W
9HNgL0sY+cNdgWtsXCPvq9sUMKMP5/pFror1dCkC9M8N7dRZ4BURvfsK9ReB
a0gflwQEqGwMPOKzQmjeb2yznLI1VA3kFVZBV6WfObumlrIIHMMeNuhLVVpW
BT0nchng2bmqHV9+cSUM3uBKPMMnon4fALeAXJi3O0DgF5M2+IBrgPL1LdqA
WwYP5DjGxq/2Qla89v++xf4eIi1G7PQhlKXTVuDle6RejlG3nsHAwMCgC2hM
u4E9PthjNXjwYOq7QtjZ2ZFnd2JiooZHrh9oSJ+B21yTQ83iH5vNLxAHOeX0
EC64PYPLHmZUqzjr8gSOvrwLWywuwoL7R0TvW/jgKFz1tIDMIsW9me7eiiU+
cORAy3SkWzf4ibjGkH5cLWPIdyYwq8tVYf+0CU5QXtZ8fUbcjJkcz3BxbdG4
movClw518sEHcI/bf1G7v10HKddQfb/0TeddNOf3i7NT+WfxyCxMovwOvpcK
e7fsg29DfonYpxl131jLWLBJ9ZzL6GE0cYw1Z8XfOerCrd0yYVZNFgZuw1d6
wmO7VHpNH3Fn/SM5jrHqw60Q4RLd9Js1jNyHN0QcI3H1LJ3o8VIGJJJKMLee
1iDHkNVnMDAwMOgSGtJuYH415gIl1fHv+cMf/gA2NrqhI9QFCH5T9w7DvHti
brFYyiOOOZgQn6jLLxbeP9qsWgi/bTA7BxelPMQt7jWUVra8d8LTI4t4wOJ5
TWftNYRh/W1FXKN3zyecp+4we9i/O0jYP7iPLaSmNq9uE/vzdK5vyq3l42ou
UnbsFHEK9N+lx7K+t9L9pSrWZqI2G+f6F+3XQvUb5eWGNAcpudGk1+D5BtY5
MHcjOt2fxrLhYCjxjHtmDfuXKQMJGSXQe7Uz9FrlBNEpnFYF+6AuP0mAkau8
RPzirmUylJU3n7vqGu5tfiLiFyv/x+V+O99sXramJpF6YJOIY6Qd3a7pIakN
KWluIj7x3HICxMbbNOo3xcDAwKDLQJ0GZgG1b99etB8148g9UCeO9Q7MpUPt
Buo5fH19NTRa/YFzbGANj6jlEPNMDsGLMHfwSgyjGkVdzoH84byrKZgFu4JL
bBA4xwTSeZC/vE6NoX6pcony+lYyMsqIAwzt1/I19MSkAuj6wwuhTwp/jh/l
QD8xK9DkTgzpwnkvKk/3pj1RYyZN5niGt+K+SIqiurQUIgcMqu2f6tkLQr/t
yD3/Qsw1ShTUsysC1E5cdthA8/yQZNX1izWGjIIEMPe/IHhTUY3DYg10n+BE
PVOZ2arVPmy8GEy1jD03wuGxfSosPRgkcAvcpm3xBVOHNKhQ0LdA12CyScwx
1nzK5X4/3PFc00NrFNVVVRC3YKyIY+Tcu6LpYakNrp47RRzDyW2LpofEwMDA
oHKsW7eONBnIM6KiomhfqXRu1alTJ8oJ54G5G1evXoU1a9aQdoP5UrUOqPfe
YfkL8YcDtjdFfAK5RLmkkjafpHCqTSx7dEJ0zNJHx8HY+TG8ivZvUU9Uc9Gn
G5e1UVykWN809kB4xIfAuudnYfSGCwLH4LynLGHi6Ff0eNZUF3B3yyRfK/71
m9ca7/uIHj2G5vaK+lS1FPg5srqM2ClTOR+q+nqofFXn9x+U6Ehz+6uOW1X2
Gc0B6jfQC/cXh02w/MQ+qmWMWHIfzlgvAzO/8zTOnCLF87kbAmbo3bTktN89
pVvX2c4Ct+gz3w12nY8A31DFvAp0Efh/6vY6ca/U+g676afxz1ek83jt5VeS
nGyRpxSXv6e+HkBNolz6/+W55UQRx0hMdtT0sHQenp6e4Ozs3Gb67RgYdBHo
KYV5ck+ePKGc8Pfeew/mzZtHGRAfffQRacZR14F+esgreO3G7NmzYcKECfSY
eeG2HFiDQM6w/PEJeBjgIOIR219chozCXOFY1G+HpseDiZ8d6TTq9krhfB61
Go4xAZBaoDxPyKnjnWjuHxVZ2KzjsZ6C3Ae1IvzYkE/N/NlB1D81crC9UNdY
MNsNkpOLYcRAe+H1zesarpnx9YXymBhl/ZpNAn2xeE9b/Jm4YqXALepqw1Xl
g1VVLaF8C+Qa2LOkDVi41Yt4xtrTZ2T6qrjttPVSMHE/RJ5VPrHWEJnmC6l5
MZBbnE5cpaisWMohKqGgWAIZOeUQk1QCXsF5YOGcAZceJ8A24zCYsskXukl5
RfdlTsQzui1wJm6x3igUXrhk6E2Od1PAmvKNVfdFHGPzt/vo5/6+J6C0QHt9
tEoCvaX/Z7+p5RiDv4OyyJCm36gHiIx+IuIX5lZTQCLR3n8rXUBCQgL1ff/r
X/+iNc9Ll9TjDc/AwKA4MFsOtd880M92yZIlpNvgczW6d+9OOUFfffUV5W0Y
GxtD586dYfXq1fQ6euGijxVmYL9+rXrvfH3DIbtbNBc3fe0MlmEeIu6ANYzA
lPrX9rGG8TLKD844PyaeUpd34L5jDvfgceArqolkFOW2aN1n1VIvmvdjbl9D
QJ9cr4RQuOBmCosf1vZ6rXtmTLwHazcVFVXQu6uViGvMm+kKY4e/pMfLF3lA
SUklLJzjJryONY+ieuooYT91oTl9Zabqc6d5YFZ47OTarPCQDl9KucYqzvcW
+6hq+AfveVvo8Eol4/COsaQ5/B3XfSo5vyLIlHID7JfqMcEFCosklLfhG2cD
pj6n4aztKjneUd82Yu1DUe9TfVuPRc7EMYZucANn/xwoq9Bf3UV9wJzvywtv
izjGth8Pclzjm32QlaC93lLZdy+LahjoW1uZqbxalzbD9tVSEcfw9D2s6SHp
Bfr27QsGBgZ0P+Oz0hkYGLQXjc09UReOXrfeNX3wLi4u9By3sLAwwQt34MCB
MGbMGPjrX/9K9Q+G5iM8I0HgFKjZRu4g9qI6CM+DXRr9d8J5fEJuOliHe1Ev
lcHT0w16Vu2yukJ9Wcg/0DcXayqY21FQVlyv5y3vbWv+LIn4RHJ+FnEf63BP
uOJhTnWXuXU+56DdTXCPD5Y7n7dnVi3PqNFk7NzqDyMGcXWMdau8QVJZDUZH
Q4Tj+na3hpBgcV8Y1RCk8/lqNd9jMCtc0GZIt/DefSFuxix6HNath1yWX765
hfLHICmnOgHO0ZNylJ+HrghuPUmiWsamw/Vn2heW5UBMRgB4SbmRTdB18q66
4bwTLr5cRz1Wh58tgLEbnsKgJe4warUXTN3sS5qLnefC4cKjeKpXeLzOgYHr
OR9bj9Dcej9Hn1FZLqGeKFmOsaPzYfpp8PE2iPGO1/QQG0TypkUijhE/dzRU
FTeeD6oPyMkJA1OL0TIcYxRkZbfMs49BHv/4xz/g/PnztK558uRJmDVrFmze
vBnKy7U/L4aBgUEMrNVj/9SMGTMgMzOT/l9jTQNrGbwXLuZf88jJ0d51NW0G
X9N4Ecr5J6G2u+7cHesWZZXNn1dnF+eDd2IY9WNhXaMh7lF3Qx/c5Y+NYPXT
U5QfPmbxHZrvj153ucH3oJfuYfvbNP6mtCK7t/kLHILXf1+5FAlD+nG+VNs2
+kFV1Ruws0mFHp1q88Pv342j90tyc7kawnfft/j7bg3ynj6tzQmX/oxfsBCi
hg3nfG8HDhJzDemWc+eu0sfgEvGkJrPbUOnnVgRTVvgSz3D0VF1287YrocQx
tl5uG302sigrKocTY8+LOMbOLkeEx95PtaN3ri4keVJ+ObGviGOk7FgJb6r0
v8fNy0eciWFtP5/pB1oBXLfEXgnssUhPT6d9O3bsIM997Pnu06cPaUaRexw4
cEDDo2VgYGgJYmNjSQ/+4Ycfwj//+U/4+9//TnnX6IX7zjvvCP/3eVhYWMAP
P/wAPXr0gOvXr2to1LqFoNRomq/jvF5SzfWEoIaa977lMzG2vbgk0mwoipKK
MojOSiavqqdBTqTnOPLyDmy1uAgrnxjJee3iNmI5l3MxcsUV0p6jNsTw5V24
4W0JdpE+EJWVBJUKzh94TiHowjtbUb1kQC8uX2PvzkC6NycmFJPfLX/c+tXe
UBYWRvP3qCFDW/w9tBZJqw1EXCPdyAjCu3SjxzHjJshxjQwl511iXh5mWSDX
SM/XzHr264hC4hhDZ3moLJ/CLSSHOMbAdS6Qkdu21ioLs4oo01uWY+zqdgQM
PuG8paxOaacmrtjHTcq3vxVxjKwrpzQ9LJWjvDwfzKwmizhGWKSJpoel08Ce
KFzLxCxhXO/EnyUlnPc5+mRWymQ6ol5048aNmhoqAwODktC/f384e/as4IV7
+LC43xT/3//5z3+G9evXw+PHjykT8ODBgxoarW6BzwtHfsHDOzGcsjZ4vQXf
XxWcFquycaDHVWF5CeSVFkFuSSFcuBhKc/yzp8KU9hnRUQUinsHrwp0dM6Bv
Ny43/OhBrs+gsrIa5s9yrT2u7wtw/eR7iJ83X2njURRVhYUQ0bO3yGcq98FD
CPnqG3oeN2uOHNdI2b5DqWNwCDUhnmHqc0ap520uDhhHEs84fU01f4uowZi4
y5N4hol9UtNv0CNglveOLoflOMamGt337bUPNT3EepF56YSIX6D2u+ClpaaH
pXKERpjIZWKUlra9Hj9lAfu0DQ0NwcjIiPgDrjlhPwXqRNFfH4FzjV9++QXM
zMxIq4Ga8Ph47e0hZGBgaB7w/zv2S1lbW5MuvG4/JL6ONQ+eW5iamlKfFUPT
4HUZmPctC9+kCJh//7CQn0GajXuHwCbCSy3junkthub3xieVxzMQp46H1mb3
1ejDF811Bw/XWo/bM0a1n4k8hz++R8fn8GThSaWOR1EUe3mJtN/h3XpA3lNT
ocaRsHSZHNeIn7+A9OTKQFFZXk2OxWzSX6sTJaVV0HeKG/GMuKTmZSsqilOP
Y4hjzDniq7d53vUh3j8RNn61R9wr1fUI7O5hSI/PTPkFqiq1SwdfXVEG8Ysn
ijhG1IifoCxCv3vdJJJysLSbI+IYbp57ND0snQXWL5A3YJ9Ex44dSfu5f/9+
4fUbN27AW2+9RbpR7KPAPgtcy5wzZw7jGAwMeojqOvOl1FRuroP54Zgjjrnj
EomEcjcQyDlQy4G1Dn9/7ewr1iRQe8F7NaUVinUufsmRAtfYY31N6Gm64mku
nYOpds5x/Uo0ze3PnVa+5nj00Fof237duTqG4aFgcHXOgB4/cdqMyxciheM9
3DKh149mQubf/l2BSh+TIkg/fqLGe4rL0EBNePbNW0KNI2ndejmuET1yNFSX
KcfX0jroGtU0LPwvKuV8zcVjy1TiGIu2qOb7D40vhJ6rnKD3aieISNR/3TCP
17ahYPDxdrk6huEIY3p8cOBJKC3ULk/U0vDXEDmsk4hjxM0cBpLM9KbfrMOI
T7QR8Yun5qMhM0s9eT76hMTEROIXyBuwJvHTTz9BYCB3XVm5ciX1S5XVXC9x
HRNfl9WEMjAwtB2MHTsWjhw5Qo+fP39OGi30p0KgNwRyj2XLlpGGHNcr6mZu
oA6Ev760VaB/E/KHx0HyGU7+MlzDyPGBkCOO3k7Y56QqXDgbUaPVjlL6uRMT
ikS9Uz1ruIX58ySwt02F7j9y+2/fqM3JCBw5FcZ8e114z/iRDpCbrZne/TdS
Hh0zfqLgc0tajBNGkH7UkNOqf/Md9UvV5Rrh3XuCJCur1Z+fV5IJhhZzaMsv
af35movpBn7EM6wcle8rjFneMw74UC3jrKnq+gO1Da+uusKK9zfLcYzzs67T
4+2dDkJeqnZlEWbfOCfuk5JuyZuXQHW5dnEhZaK6uhLsXi0TcQy7V0ul+/Vf
465sYB7XBx98IMwbRo8eTXMDfg2zoKCA+iNk9d1ubm6kAQ8ICNDImBkYGDSH
U6dOkVY8piY77dtvv4Xt27dDaGgo1T8//vhjwfMWa6GDBg0SvR89sfE41H60
VYSkxxF32GR+od7XZesaqOFeY3qGHq9/fhaS81WTJXHscDDN53m/J2XDWKYf
iq9pYN9UWGg+vDBLFjypHt2Pp3l9yBdf0Vz9wA5fET+xtVZv7xCPioQE4hOy
GX4F9i8hyWANxym6dIPUvfvkuEbo199CaWj9frCKAGsZWNNA31h1ICisgDjG
4JnupJ1RNs4/iyWOMXWfN5Sr4PzaBszwfrD9mYhf8BzjzvpHNZnfuyAlVHsy
J6pLSyB+8SQ5joF6b332VkpKdSGPWlmOEROnfO9qfQbfe80D1yBR04n1jKio
KPj9738Pjx49El5HDcbbb78t9EsgkGswMDC0PeD1Y9u2bXRNwDzxv/zlL+Dr
6ws7d+4k/jF16lSqi2I24M2bNynbjwfqPfhcjrYMvP6ueGxE3CElv/71adJr
1GjD7/rZCn1USx4eazDTrzXYusGP5vK2Vqqbx48eUts/NaEmI3zscAfIz6uA
p48ShNceG7tz/rEDOI7q7JQuaDlw27LeVyPznLwnnNdtSHuufyq04w9QHhsL
cdNnCONNO3pUjmtgdnj+ixet+uzsohTSaKBWAzUbqsY2wzDiGeduxSn93MFx
BdBrlRNtr2MLlH5+bQNmeJ+bcVWOY+zpaQhmR6zp8eqPtkGEi/L/X7cUJb7u
EDnsRzHHGPwdFDpaa3poKkNVVQW8dDIQ8YsXNjOgvFz//0aVjeHDh1PmBQ+s
aeCa5Pz5nK8H9lXjmiSv/cR74vfffw8LFy7UyHgZGBi0D1jrxJ6ozJqs5pkz
Z8LatWvpsaurK3Tq1In4xKJFi2gfaji+/PJL+N///gf/+c9/NDZubcEl9+fE
G6zCPRs8BnMxeA9azBE/5/pU0IfbRngrdTzzZnBeT4EBqvNPiY0pFPVPTRj1
in5iFnl19RswuR3L5Wh8bwFX20+G5I2bhfcWFFTCtAlOwnuH9bej86kbfP0C
cz1IhzFqNFRmZ0PU8JGc3+34iZBx+oyIY/CP048db9Vno+cU1jRehig/q0MW
mP/dbbwLdBvnDOlZyu1VKy2vgil7vdpMv1RGTBbs631cjmPs63Oc66Gqee7z
THv6Q9KP7ZSrYcRM7APlMRGaHprKkJjkQNoLWY4RFHpF08PSeuC9HvPz0C8G
f2Zncxk72PeAeb78c4S9vT38+te/Bj8/P5o/vPfee3Do0CHh9eDgYEhOTlb7
78DAwKAbMDY2ptpFRkYGPcf15qtXr9I1BXHmzBnyyN2zZw9pPOoCNWCY0YP5
420BrnGviTOcdHzQ6HGYt81n+WE299PXToI+/JaPtZxOv6UYWJNpkZOjWg0E
+tjWZoBbwZC+XG7GeWNuDnPtF06P3r2jGVgcfCb3/tNGtf1X2Gv1y8VIuWNU
CfK67dNPxDWSN22BSunffUSvPjV+Uwsh6+IlgV/wPrj02tx5LdaHY4YG8gwj
ywVQUqE6joU1DKxlbDmq/P+LR00iiWPMOuRLGg19RqhDBGz4Yrccx8C8DOQV
qz7cSs9fXnLW9FAJFalJEDtlgBzHSFw1A6ryVV9D0wQqJSVg77hSxC/MLCdB
YVHb8lhuCTA36//+7/+oBoGPu3btSv1PCFxX7NChA2k1ZfH1119D79696fGl
S5eoL4Jfq2RgYGBoDFgXxTxx5BKTJ0+mawmv4cD88L/97W+U+Yf6cL7uwSMu
Lo5qHFj/mD59uiaGr3ZkFeURV8DcvKbgHBMocItX0f7gFhcsZPqdeHVfofzw
+pCaUirUCFQNrFsMlX4OzxXmTncRdOBOr9Khurwc9n2zTtBjuLnI34NCgvNg
YG8b4RzTJjpBrhrz3Ur8/YU6Bd9DlWNyD8qlf+9hP/7EcY/1G2o9qaRbWKfO
wuOI3n2gIjGxRZ/9yOs4cQ3HMNVkK5SWVcHA6e7EM1CjoUw4B2UTx+i7xhli
UoqVem5tAq6xYL5eXX6B25GhZyD0VSSs/WwHPX+6Tzv6/nNMfoHIAV/LcYwM
40PwRsVed5pCTOxzOR2Gt5+h9Bqln7+vMlFcXEx6i8Yyei0tLeE3v/kNeHh4
0HPskcJsX+Qm6B2Da2ToU6nPWh8GBgblAq8XWBvFXD/0t+WBvnWY94nXFfSa
wNoHjxcvXhAHQY6BXlXISdoK+Ew+zMprCpjJTT1T0g1rHJGZSYLGY6flFcgt
bfn6to1lCs3X16xQbi9WQwj0zxX1T21ex2m9saYSds+W5uJ7eh8WtOLently
55BIqmHtSm+RRtz0SYJaxo/IPHuOq2l821HwoSoNDISSgAChfpF28BDkPnwk
ZG1E9BtQW+P48isocnRS+HNTcqOJZ5y0WiTll8qfq983SyGOsWCTcvt4MvPK
YdgmN+IZ917q71ox+tFemnezXo5xfPQ5iA9Igk1f76XnN1c/0PgcC+sU8QvG
yfGLyCEdodBeOziQslFSmgnW9gtE/OLZi3GQla3fOSDKRFBQEN2z09JqfQuw
hhESEkKekjxwzRH7p3BO8OOPP1J9g2VgMDAwKBN43fntb38LDg4O9BzrphYW
FsQ5UDuOeTzHjh2jXs3Tp09rdrBqxn7bG8QTwjKaNz+2CHWn41GzEZASBRmF
ueRZhfvWPjsDSXktqz8f3BtEc/WbV9WnQ924ttZHCrPBVy/zosdTet4Hv0++
gMzz5+HIgWDh9QD/+nUjdjapIo34glmuUFRUqfLxYw5f7M/TOf7QsxfnOdWj
J0ikPLnIyYlyNXAf9k/lm1sIz6NHjxFpxNOPHFU40+++x2HiGq6Rpk0frAAw
J2/sQi/iGQ7u8tyupcAa1vJTgcQx1p17rfG5taqQFJwi5Oyt/GALxy9qPGxP
T74M6dGZsOOnQ/QcfWyrJJpdN88zu0/a7rocA3unyqOVn6Ojabx5Uw1BIVfq
5GGMBBePXdI5sv569CoT2LeAWu6UlBTyou3Zsyfdx0eMGAF//OMfBZ+XBQsW
0PElJSWwdOlS6NatG+X6Yr43AwMDgzKxd+9eGD9+vPAc+zGxZjpkyBDym0Cv
KvSe+OKLL2g9BPP/sM+zT58+jdZk9QG8rhvrE83FwwAHeg/2TYVL+UlReQkc
sL1J+5Y+Og4haXEKjQHnfCMHcz5QEeHq81UpK62CPl1r+QFmhE8a9ZIer/1q
F1QkJ9PY9u0KpH39e9pQv1R9KC6sFHTsuPXqbAnmz1S/Zl6Zni70SfHaDPSe
wj6T/OdmApfIvX8fCh1eCV690ZMmCzkcpB2fMFGhnI3E7DDiGaetl0KFpFRp
v4/FywziGJOW+RA3UBYum8cRxxi9zR1yC1vX46etcLntCQafbBe8o2Q5BtY3
8tLySfuNz0+MOQ8VpZqbb1UV5EHCksnyNQzKxVgMVYX65zmekxsG5tZTxTUM
i7GQksq8UxUF+kzeu3ePsi3GjRsHnTt3Jl7x4MEDqlVgfzRyDfSvZWBgYFAH
MAcUgXovvP7gOsjIkSMhNzdX8NK2srKiYyIiIuD48ePkt401jrpaDn3CdS9L
4gf2kb4teh963CbkpkNllQTOujyhfZi7gfqN5sLXO5vm5uNGOCg4+tYDc/pk
+6eMFj+C3h1N6bHpY06/gPPdHZv9ad+g3jaNciH0xuUzAHFD7pGfr9p5baG9
vZALHvZDJ65f6sBBei3nVo0+47N2UGBpCcXe3hD6HddnFTNpCoR361Gbs9Hx
B6qDNBd33Q4Q13CPMlPK74GcbvJyH+IZ5vbKy3j2CM0ljoEetr4R+qclRs/a
q0vuCr1RdTkG9kaV5JfCkWFnhKxvfK4p5D65DZGD5GsYqM3IuXVe72pNFZVF
4Oa5W66G4ei6EcrL9Y9PqQJO0usS+klibQKBfdCLFy9u8HhcL8TahpmZcq5N
DAwMDM0FrnWgThxzP/n7Geo1sOaKwFoGrpPk5XHzEeyvQs1YaWntfRlrsHZ2
qtcrqwPoF4XcQFGP2mrpd8fXQlY9OUn9U/h9mvjZCXrxF6HuzToXP4e/dE69
vk08fp5Y61Xb+/tncKLDAlGGHwK1GJtqNBxD+tlCTHTDWpSCvHKYPc1FpNtA
v1xVInXPXq5vCnlDTX9Uvpk5vZZ5xljQixc5O0NpSAiE/dSF9kWNHAUx06aL
+qhQ0/GmGb0FcVnBxDPO2CyHCknrNfB2rlnEMcYs9KL+KWUgLadM0GTcsFaf
dkZdiPNNgF1djxB/MPh4G6x8f4tIj/F4txlUlFbAyYkX6Tn2VBVkqt+LGVGZ
mQbx88bUW8OIHtNNyoFdNTIuVQGvh9Gxz8HUYoyIX+Dz+EQbTQ9Pp4B9Bbg+
iD0GRUVFpKls166d8Dr2QPNriYgdO3aQRpznJQwMDAzqRJWMd4mtrS387ne/
g/DwcDAyMiJviu7du8M777xDfGLDhg3w3//+l449cuQILFmyBH71q18J/hW6
jsseZsQJHGMU19xKpN+j4cu79P4Nz89BfhmnCbYO9xJ8cG/72DS6PpmWWgo9
pPPwHp0sIT1NM2usSYnFQhY4bnN+PA9H9gUJNZbCQm7OLams1X0PH2gHCfGN
a6CxtoH9U/x5J415BYkJqvE4Qo+s6BGjuJ6oMeMEL9uycK7HPW3fAWFfiY8v
VEj5dkTf/oI2PFXKLfiMceIfw0ZAeTN6Dm677CGu4RXTugxA/BuZutKXeMZj
S+XkNGLG97yjfpwm47x+aTJQV2Fx3BZWfcD50m76Zp+c5tvG+BVUVVaRDgOf
b/3hAGQnqi6bpiGg9ifr4nGIHPhNvRwjccXPxEH0CXn5UWBpN0+uhuHgvAZK
SjM0PTytB96jUa+N63wIXB/E3gKsaaAeA73rsV6BGg3EpEmToGPHjpTfi35S
//jHP6g3moGBgUHTWLVqFaxZs4Yeo04MeQUiNTUV5s6dS2sofI6Pm5sb8RBc
JzE3N9fYmJWJIy/vEB8ISm2Z/hr9bPmc8F1WVwV/W6+EUMH3FusekgZ8Gg/s
5ubzu7ZpNiPsUI0OvWtHC/r5wCQO5k7n9BbrDXyEOWpFRRWsXOJJ+0cNtofk
pMbXy1APvmS+uyhv48iB18RZlA3MBQ/9+luhJ4o4RJ9+IMnLo/Fj5iCXudER
SoODSY8RPXI0Vwfp3BVybt8R8jj4+kf29RuNzs9jMgKIZxjbrIDKqpb3h9k4
ZRLHGL3Ai2pHysC+m+HEMSbt8YKCEv3RfmLunuHIswKf2N6J03Wv/B9Xy0Du
4X7Pm9Z4+X4q9JdKjVBeL1pzUfraD2Im9K6XX+CWef4ovKmSqH1cqgL2QXl4
H5TjF5i/FxVjqldcV9VATxbkEugfifjkk09oPRCzMvBe3aNHD7hz5w69hll8
eB/H3gRcL0xPV//fOgMDA0ND4Osb69ato2uZv78/ZYVOnDiRdOLouY1AL1z0
psKfEyZMoH3W1tZy+aGYDYg5HtoOvOctr/GlzS5ueZ9wQVkJbDQ7T+c55mAC
VTXeRWHp8aTfwP1Y96ibsYE9STjvxnqGqtb5m4uMh0+hT8cnAh/o38MaggJy
SY+Bz29djxGOLSurgqXzPWj/2OEvqSbTFBwd0uic/Pkxe+PVS+Wv4eY9fsLx
hC+/hqihwzhd+Kw5pAvHdeXEFSu5LI0ff6J6RVVREcTNmMXxDylHyTN9Jp0X
ThL1UcVOmw4VSQ1r2m867yKu4R1r1aIxV1W9Id038gxTa+V8J+hbixxjwDoX
vcnJwP+vDpddYM2nXO7Flo77Yct3+zlNxsecJgNfe20bRsfeWfeI9q3vsAsS
g9SbcVxVVEB67ob4RfSorlDkYq/WMakS1dUSiIh+BKbmY+U4xkun1VBUxDKm
m4Knpyd5z6KWG7MxEOfOnaPeAsz8Ro+py5cv09826jNkPaUYGBgYdAHod4e+
Ux9++CF8/vnndB17/PgxvYZ6cczYQO8qHriG8u6778LUqVPhxo0bkFXj14O9
pFjH1XbE5qQKfrStRUZRLqx8cpLO94tHba0HNeKravZj3QO9qRBl5ZUwcTyX
w33qeGirP781wLl2eNfucKndNJEmHLM8nB0z6DH2dQX41eaqlJRIYOFsN3pt
/EgHyMho2pMSayFYt5H9DKyZpKYot4c4ae064geRAwcL2Xxphw7Ta6i7iJ+/
gKthSH9n7J/Cffx7MPsv5949SD9qKOIa2G+Vc/t2veux0en+xDPO2q4ESQtq
GqY2acQxxi/2Voouwy04B3quciKe8dJPP3J+M2OzwGjcBaGGcWLceSmn4Lyl
+Ly9zd/ug3h/zrvg4Y7nAu+I9oxT2ziRy+bcvQyRgzs2yDGoTyo9RW1jUjVS
0z3AwmZmvTWMiCjMJ2GZe03h5MmT8Kc//Ym8Wf79739D+/bthRwrzOzG/Aus
V2DfFA/0qMV1PgYGBgZdxNmzZ2HAgAHCc+yv+uCDD+T04FjXxWsf9oZi/QNr
vHXrG9qKG96cZ9QdX+VoEpG3LHpgSOc0fe0s7EcOssHsHO3fanERcksK4bKt
GfQZ8AiGDnlB/rKaROrOXVyv0fiJMGWco4gHWFokg/GpcKFPSjbzu7io1ssW
tRfZWc3TQsdEFRI3ke2lOrQvSPq3pZz+kariYul8biD9TvGLl9Tqwp9z3iuo
5ZDN3aio6XFONzxWm6khfVzo6CTKEKfaxuSplDleFzecdxLX8IlV7G+pvKIa
Rs7zJJ5h7dR6ToC1i0EbXIljXH2h+1lcqMNAnQXPKbCGcWHOdYFvrP18J/3c
09MQMuO4vBHTA5aCLjzMUX3eCsU+bhAzsY8Mp5DP9kadhr70SeUXxIKj6/p6
+MVIsHdcCQWFuv/3pyxgzwCuvw0fPhx69epF63I8goODyWvFx8eHnqN2GzUW
Q4cOFY7BHgHUUeI9mIGBgUFfgN54/E/MCb927Zrw2uvXr0mr8fTpU3qO67xx
cXGkPzM0NNTEcBVCcn6GoJ9IyW9+bkJT8EuOhLn3DtF5XeNeC/vzS4tg+4vL
tH/106Ow9NFWWGqyC1wDNOtvjv5LvCcsaqYjw/NFPAO9pXKyy2HxPE5jsWqp
l2hNv6CgEmZN5bylpo53EvGQpnDfJE6U79e3uzU8uBenlNwI9JTi8zGSN3G6
DMzOQF0Golp6L4+ZNJnjGn37Uw4HIsfkHtU0cH/iqtVQkZoK8fPmi2sb7b+A
jFOnia/wiEzzJZ5xznY1SKqar4W48SiJOMYMA79W965n5ZfDuB0exDF2XQtr
1bm0AXF+iXBo0CmBU/yy6A4cG3VO0GDwWRmYhVGUw/WZoDacXv9wKwTZqKdO
WJGcQDUKEaeok72HGo1iL+emT6YDKC3LBm//4/Xyi6fmoyAs0kT6f5jVMHig
NyNm477//vuwfft2mD17Nnmp8L0CyCEwu0oWmGmFx8iu2d28eZN8WKoVzBRl
YGBg0HYkJibCr3/9a7h165awb+DAgbQ2Iwus62J+EPrr4RrNiRMn1D3UZqH6
TTVsMTeERQ92wBnnB0o/v12kj5CjEZ6RKOwvriiFLRZnYMnDrcQzzEMclP7Z
iqAyI0Pwd808d17Yv8HAR8Q1dm8PgMyMMhjaz46eX7ss5kb5eRUwfRLnjTt9
sjM9by6wJrJto5/o8zCz0NW59Z402TdvCbrvxJWrhPqFJJtb964qLBS8qbDH
is/pwwyN0G9rMjYmTpLuzyY9eLBMrh+9p/8A4mkI5AjXnbYT1/CNa15NIze/
EvpNdSOe4RnQulyLkjIJzD7sSxxjyYkA8prSVZTklYLJpieCR+2ubkfB9pyj
oMVY/8VuQfN9deldqCzn1kOw7sHrwf3MglQ+zqr8XEg9sJFyL3g+ETXke/nc
vY2LQJKjvLUMTaGysgRCwm9KucSYBmoYK6jGwVCLCxcuUP/xpk2bRB6zmK03
ZcoUeozai9/+9reUbSWLv//97/Ds2TO1jpeBgYFBU8DrJZ8XbmpqKnjh8sDH
uA9fQ0RGRtL1la+JaAtwPnjX15Tm+QameyAxTzV+ktiLhVwDdeaYrYF4Fe0O
yx5xHGPB/d3S105Qr5UmUFlaAjHjJ3A66Rkzqa+cR1ZmGekx+J4m/OnpngUe
bpn0vPuPL8DXJ1t0vpyccpgynuu5wuwM3gu3uYiJLhDleOA2Y4ozBAe1bv6d
sHQZ51M7agxlflPv05RpQj5GVX4+RA0fyR0zZKjAQcrCI4iTcNykN9V6yqOj
IXr0GBHXoLrHshWUna5oTePQuSjiGGv2Nj/TsT5USqph9Zkg4hhT93pDQbFu
ekvhOq3LLU/yhuJrEqYHLcHc0EbgHLy3FG7PD1sLNSC7C04cx5Ae5/nIT7Xj
LCmGTPSpla1ZDPoWokb8JO6Xkr6ee/+aznssVUn/lqNinoKZ1eQGahijISzi
DmnBGcRAzSJqGFFLIQvsOR4yZAg9xr8P9F+ZNm2a8Dr2C2A9A/1sGRgYGNoK
+PvlihUrwMDAQPQa5vzJ6jkw5w95Bv7E+YOJiQmEhISodbx1USG9X171vE/z
/JVPdkJUVpzKPgtz/IwcHxDX2Gx+AW54PeJ6paTbi9CXcMrpoZAnHpGZ2PQJ
lTq2arBav5DTQkvn0JKcHLljzpwME835UU+BPlMXzkbQ8xGD7IlbyAL5Ceo0
+BxwrFUoCnvbVBjc11b02csWekBUZMuy1aoKCiCiVx/6XVO2bBPyv1O2bReO
wd+f96aKGjYcJLkcL8T6BmpWqCbyzXeUO478JMPoJOWLE8+oydzAHq304yfg
pu3mmpqGbaPjiogtgq7jnKGbdItrwhu4MVBW+9VQ4hijtrpDcpbmcq5bgyj3
WFGP1KlJlyDKMxbOTP1F2Le7+1FBd+H50Fd4L3pQ8cegn62qUF1RDjkmV6R/
Iz+K6hWxUwaIMr3xZ9ycUVAepdu9a6jfjk+0BUvb2Q3wC85LitUwGgf6zL79
9tuQlsataaGuu25/QFBQEPzlL3+hbAy8v2ItQ9ZzhYGBgaGtQbZH1MrKirQa
eK2UBdY3zp8/L/SmokefqoFcQlLPulp4RgzssjrB1TGe7obQdNXrItDHdrOZ
MSx+uF3gNp4J/vQaet+edzUlroHa8dB09axbIce46f0IVphsgidTh0CyX/15
i6jJ7ted86FF3138ef5MOHmw8p62q5d5ya3Vou8Ur/FeMNuNfKkURWVlNVy7
FAW9u1iK+Ab6X0VHKc43SgIC/j97XwEd131mf/5nt93d7mm7u+12t22STZoG
7cRBJ7ZjhpgZYoiZmUmWbVmW2TIzySRLliVZDBYzMzMzMznff+43em9mNCO0
Jdnuu+e8MzOP5o008Lu/77v3ilrwwhu3RN1GsdLvPHqjEseMlef8TZjEmRsA
NBiZm7eKnKLgiry/DDoPZPm1rG1EffsNPdr7I1122NhmTWPlnnCuZejfVNeU
dwYnHiUwxxizw5sSsipf6Fy9gbykArq+9J7IE7T7H+OeJ+i3hT6pnX10aN83
R0RPqeRAxWfF/Y6PeKz3w4BuuUbwixKTu5Q06TtVfjF/rGKdUgZf/lld2fum
ff+1VxX4TGdmu5Ojy8pW+QV6p+IkHUaHAB9H+EehzxgZuOAQffr0Yb/aU6dO
iTX/pKQk5hboP3Zxcenlq5bQE4A/APT/4eHhvX0pEiS80kBtA3VgAfhehWb8
17/+Nf39739nz29oNpQRlBlBhxzO0npTbb7F486ipLqMInJiyS7WlW76PaKD
DvoyLnFaNoaX//bh9xJ84rzHbbGWgOfKLu/+DKOy2gp6GGwu9kmtMtGiG77m
Kvug5gEPXHCNFY9PUGTOi4052wP+Lnea6zkbzQ9QUmHb3MbYMFVlnA++kZJc
oaLVMLilnm+IPA3kamA79ONd9ZEqK6uno4ciVbLKsWzbGMjZI51B4c1b8tyM
L7+mQgMD0cO2ysdX3KehoIASRo5W4xpAwaXLij6pjZvoeW2tvLZx9hzrwgUt
vbCP78DPKPSBZj8EO7d85hhjF/pRZVXXe03OmSYzxxi+1YvCkrqe/9IbKMst
p0e7zMU8b/hG2Z5xouqyGjLXtRG5w9HRZ2nbRwfE+8WZijxvZY7hec+3jWfr
Gp7XVFPJYwNKmjxAVdM9ZySlrZihWDfqc4XW28/9pV9HTwHfl9m5PqyzaJ1f
TCQ3r62Sl5QGlKe4UIr5Yoq7O4pv8VgAcr1R34ffOzziwS3AMVDnAOdwc3Pr
xSuX0NNIT0/n3nL87zFHi/fGhQsv7q8vQcKbDPDyWtnYC364yN+Az+3bb79N
VlZWavuCUwjjfuWlNa7R0NRA6SVZ5J0aRI/DrEjf7QZts9DVeA6vFNkYND+J
noTbkJbtCXH9lqc6zEc01TpeJoqrS8kkzJrH8Xjedab7ZFziMS1r9qDyUfKg
Alg/HGDL2+B/FZbdPXWWmoZakW+hnpNQ0H6vAzK7J4x2EvMzcLtyiS9fs49X
gSJXI7RE7djsrGqaPNZF7HtCz1VXgXyN3duCVbgGlvWr/CkkSL3nqzWkLV8p
+vciT4N5x1ffUL3sO18AtPEqXKNE8doqnJy4f4q3TZrMmgygVvZ7IWg/ePlE
oRdPmjqNKr28xHOUVzYyvwDPsHbuOt+9apnKHGPoZk/yje7436C3AV8os0M2
ok8tNNvQfJcXVFBuYj4d+/G86Cd1ce5NUZdxc+UDqqtWzFW43fYWOYa7gc9L
vcam8jIqunuZEif2V+EXidMHU7bOFoXWWykjI+fAZmoqezEtUW9B4BcuHhta
9ZDCrYXtdEpINpPyMDQAnCLuzjC1RZlrwKcWGd7KgMfK0qVLmYdI+MfBX/7y
F9bk7N69m+dlkZ+CedmYmN7N0pIg4VWHq6srDRs2jAwNDfm3a8SIESpeuAJQ
U9DEEbC+tKaMonLjyD7WjWsUOg5naO0TLY37t1w2mGmr7QuuAX5RXd99fevg
LmHZ0XTF+77K81/1eUB5FXIPEZfEYLFukVqsrj2/H+TQbVwjqyyX6zy4ph1W
epRW0nq2dUs42GUrfGcHyPuorJ7KjxdyNcAnUHtoCWScwzsK+2yQcYK6uhcb
nyTEl9PG1f5qfGPhXC965pDDPV1tAfUJQdudo3uY0patEPXfyCoUoMw1oBFX
5hrIEE8YPkLMFK/08ub1nM92/z57W2FbxAcfUNgnH4p8A75V8LE6ckmu/V61
t+t1coFjDNnkQe7hr4ePUUVhJdcphEw9LLdWPWRuAXjc9RVzvvd/d5z1GcJ+
qHMo9+cpcwwc97LQkJ1B+ecPq3lGoZ6Rf+EIpS6aoOYrhb6pcsfX0xMIf9Os
HK92+QUWD5/dVFn15mQLvmxwHUMDz8B6ARhDwlcKWkUJbx7gV9xS7w9g/jU2
NpZvBaAHBDp/oc8Dn8XPP/+cduzY0WPXK0HCmwBkm6I23BLoleoIb+jKgnH+
EaeLZBZhR0lFad3m9YK+KL/0ULrlZ8S1EuH58dqgNc8sVfeRutNct9hmcVHM
BVeG4FH1srgGXrtLog/rQnBtes8uUFGVeu2hLUBnPGOSq4r3FHqmkJvR2Phc
zASHF64mpKVW0vhRTqKeA5ngLwp4UK1Z7qvGN6bI+M6Du8l8ba2hOiRE7G8q
tbJmjsF5fsuWq3hucQ/VqDHN2vAJog8VAG25mKnx9w+p8Np1leMyN28R+UXo
Z59QzOfyGohZ3/EyjuFBA6d5UEp617QUVyxSRI7xOmR9o88J2dwCh8ByZaEB
ZUTKx6ylOWV0cd4tcdu1pffo0JDTcv/ajw+oZWC4XPd86RyjOsSPsrU3qPjT
MpeY+B0V3bkg46TbFesmKGocWTtWyP7f3eNX151APSIj04Weua1utTfqqY3c
u9bKfhalpNm+9p5Z3Q30SmniGVivDOTdvvfee1IGxhuIDRs2qIx3UKfQ0tLi
DEbo/tHfIfgU+/v7c69UfHy8uP/x48d5H+mzJkFCxwFuj89ZS7RWz3hRfhGd
G0+1jR3PiesoSmvKuRfLOcGL9Q377U6pPT/G8M/iPamitvXxY2NTk+y1GzCX
OOliyPqMllDmGhE56tqHjiKnPJ9OuV4Tr+9+kBlr5LsCN5c8cSw/bqScMxw7
LO//ysmuoVGDHXkd9ByakJpcSeNGyI/buiGQdd4vA2EhxbRupZ8a3xjyvT0d
1Y2kuFjNmgVBqxHzxVdUFRDIdQk8zj1yVGU/5hqjf5RzjTFjxXwNAJwkX/+M
yCfS16zjPA4B0H0EDv5a0Us1chxNGm/GtYzD32/jekmx4SPWeXQE+O05Y5LU
zDE8yTXs1a5jZERk0d0NRqL+gjnEkru8XkCAaQjt+FSHt8HL1vyQDW1v1mIc
Hq5P+cmqr9HxkpuSHkOzf0FHAW/aUgsjGV+copZ3gfpF0YPrsv/PTUoSeqfG
9BN9phLHf0NllsYv9Py9gaamOhlnsCEHl2Wt8gtLuxnifd+AQ5zJJ6F9dKSe
AUCbIWl+3xzU1Kj2SUB3Udzs3whfsT/96U+s6a+rq2N9P/Q42dnyORZkjenq
6qocixqHp+ebkecpQUJPoeXnEGhNn/EiyzpTLR5Xo1fpfpApmUbYsX+sS6I3
azYC0sMoJDOS+5vCs2N4Cc2K5mvxTQvmbAv0V5mG25JBgAlrGdCzJegsWi6b
nx6kC54GMu7hTQWVHf8tLqmuoA1mZ5lLmEZo1owqc43o3NRO/b0r6qrIKNSS
dSG4zl1WR/g1vyiUsy2gyUBtIzpK3o/u6pTL6wf3t6f4uHKNx8MnCtni2G/7
5iDWfrwsRISV0Ka16v1Ugr+upXmGmu9V+opmrcbU6dz7JNQ4SkyeqOzHPlTN
nrfgBkJuuIDyZ05irxRy+2qVMmWSsoPJeMcoCu3zMWkP3MscY/rUpxT9wzCR
f0AfknfiJDVkt56j0vT8F9J7EM8cY9gWT/KMeDXHfk2NTRRqHUlnpl0V+QB4
xt2NxpQdq5j3L8+vYM4h7HN5wR16tNtcpZ+qrkp1vsD+nLOYj+HzqOvetbVx
kZR3+gBzBTV+Me0Hzruo8vNQ4R/JM4eK9zO3LaWG3Kz2n+gVQn1DJXtD2TjO
19gTJfALoYZh67iAsrI9evuyXysURTxqV58h4c0C+jVQw1DGu+++S8eOHeP7
6CHfuXOnuA0a1k8//ZS2b9/OjzEHi8fKgK/x3r17u/nKJUj4x4Cy35SWzYmX
zjte5rLd8jBzGOT7eST7U0ZpNvvDdhXwsF3SrAuPaMVj6m6gXbPn7QmKy0/X
uI8yymrKmVttauZFqO88CrF4aboUD1dFTWPaBFdxDC/UeE8cieJ1s6e6t+ov
lRhfLmZj7NoazH1XLxPgOFq7QtT8qbDAo1f3QDiFBhfzNSOfT8jVyNE5RCVG
xvIcjI8+oaoAVX9U5GtAE86ZfcNGUH22ap96fVqauD36074qXOW+10Hae3EL
fTfFg76b7E5WfUZRdN/PKX3tOkqaMlVR7/j7h6xTr3B1U+nfQq737uvRzDFG
bvOigLjO9b31BEqySzlLb+9XeiJXQM+TmY41FWepaqP9HgeLNQzs43zNg/Sn
XhFz+ZCF0RJWxx1EjoHjO4vGkiL2pU1bNlWNW7A/7bwfuT5Rl5HKem6RX0wb
LGbvoa5RZvW4y3+j3gD0FGGRV1RqFE9tpqr1Rynzj+Cws8xLJHQMvzQ1UGHI
HYozGMm8IvHRNI1+UxLePOjp6dEf//hHmjx5Mt8HwCv69evH96dMmUKbNm1S
OQYcA1ljQFRUFPdOKde3iopezTkkCRLeBLgm+rw0XoB6BmoZTyMdyDjUiu4F
mtItfyO65vuQtdqXve/xctXnPt3wNeT6hWHIUzKPtCeHOHf2tYIWPbMsl32a
ugOWUd7MI9abnuEaR0tgLHzb30bM8ksu0qzBRNYg9CDKmhe8tu7w7p2vVNMQ
ahMW5vKMQWi858+Sb8d4vjWgl2n0EHmf1Z7tIS+dawCZGVXMe4Z8b6exxgHP
3cvn4yjaNkj0pC23s6NcXT1R363sQQVAQy7wAmjJ61JVfT2Rs5G1c7fIG7K2
76DnNTUUkxFOwxfYcC3j3LlA0fOKn+fb/qxHz9iwUeGNi+zEgT9Q3qnTVBib
QmvOhDHHGLvLhyJTNNeKegMNdY0UZBHG2grBE4r7nYbps99sy3pEUUYJXZyr
0GFc/vkOBTwJEbO/tb4+QilB6l6ppgetxbpIoHloh68PnrTljpaUtWul6Dvb
cklfM4cqXGypqbKCCm+dV+i/x35FqQvGKnQYsnM05Ldeb3rVUFgUQX6Bh1Vq
Fha2M9V6pJTzMRxdVlBBYVhvX/prhdrCOJV+qUSjafS8G/p2JfQckKX49ddf
c6ZFS6D3SeiJQubwv//7vzNPgF9YVrP3YFhYGK+D5n///v3svams/0b9Q8iB
B/bt26ei0ZAgQUL3Ahzg5fVR7aPDz84zxwCHQVZEbcOr8xsAHnHazYh5xBGn
+xp1gdBvXPOx4H3WPtGnjFK5Nw/8o6yin9H+Zg8poX4BzgT/3+6Csk5DyP2G
JryiQq77QLbG0O/teb2jXeveNLHRZaKmQ2tnSLs+UV0FPLDu3Ejk7HLhulvW
OmaNtCS9TzaQ4+c/Um1yCuvBuQdq9I8qegsAj5NnzZZzge8GsPdUS5Q8MeWa
hnCOg4cDmWOMWWpOXnFyDWBVYCD7TynzioLrN6jg8mXRy8q17wCascSYOcaU
rS6UFNP7vTrPm55TnGci3d9iwrUIgTMgn/v2GkNK8FGvzeEY1CwEHfjOPoe4
78niiJ14/KX5t9nvVhn4fCBfA9s3vatFYXZR7V9fdRVVONtQ9v6NlCjjCpq4
BZbsfeupJjyI60ZlNk8490LkHqtmiscmTR3IXOV1ALQXqen2KtkXT20mk43D
PDV+8cx1tbge9YyoWAPZ8ep+cRI043ljPRUEXqU4gxEqPVLFUSa9fWkSXhCF
hYU0fPhwCgkJEdeVlZXRypUrWc8N/cScOXO4Bwr8ALmLS5YsUTnHJ598Qtra
2lRaWkr//d//TbNnz+asjNu3b7M+w9j49dN2SZDwpgC9SDut9LrOLWRjbeid
Dzuea9ULd5/tSZ7vR60D2dzogapr7J3f2Iq6atpsfr5NrQZyw/XdHtFSo0Oy
16dLe2yOqbye3dbH+LUgt6O7gbHfnGnu4hh9/ixPvj19XKH/MH+SzutG/ODI
GRqtAdqOkc1cQ3t3aLdxDQBaEPjzLm/2xlLWmSg/nvzNIzp9OIQsRy6n8L99
SKkLF9Mvjao9YM+rqyl1/gKx7lETqT7+RZ4GfKzufDmXOcYg2d9s3/2NdM5h
NdU1KP4myOMQ+q3kdZIhVPzgAfk/9aKxG54xx5i96CF5fvINZ5Gn/DSPigzu
tqnleNlorG+kGNd4MtxhSrs/0xW5AZbj4y5w7aK6VHNvXmpwOh0dfU7c/87a
R5QenkmnJl0SaxQOF1zV/FXATe5tMuZ9kLMR7RKn8fwA6gylFo/kdYsx/VQ5
xWhFHSNp0vdUcOUENeTIPZmrAr0pbfl0cTv0GKkLx4uPcw/voMbSVz+XBL1R
EdE3ydrhJ5FHWDvMIXunxWr8wsF5Kbl6blHK29tGZeWpvf0SXitU50VQsukC
NR1GotF0qZbxhgDfR6hLCACv+OqrryggIIA8PDzoN7/5Dd29e5e3IVvv97//
Pdc6BCDTHfnEAHyl+vfvzzUO1DagDZcgQULvIqc8r8N5GcrLObdb5JkSwH6z
ALyVkovSuZaBPip43SJfo7XjMX4/436DeQqyOwIzwilFdjzyPF5Ei9EeYvPT
aYmMZ2CJzUtn39mo3HhyjHNnz1xN3lY7LA/TA9l1wgOrO69NE+yss8Rx+U+y
8fPAr+XjddQyBOzeLs/Uw7i+rb4o+NOCj2DfA3vD2EO3u4FayhGdCDELRK5f
t6PBX1qocI5hX5rRmr5H6c7Ci5SVqcqX0CMl1D2gAUd9oiWy0ktp2DQX5hkX
vllOPrNHkv7jeeQZb6qyH37TymxtRX/da0MW09B1LswxtpwLoZynNpS+chVF
f6zI/hNyPdBbVR0UrMaFXhTwmvU1CqQbK+7Ttg/3q3ALnR9Okc2pZ5Sf3Lqn
blVJNWfvCccc+P44RTnHcZ+VUAfZ981RSgpIVTsWvOb6sntiRni8l6rn2vPa
Gtnf24s5Q9qSyaq8YmRftWy99NWzuWaB44C6xFj2oxU1GLNHyDlKs6dtyrwx
VOX/avu9PH/eyLkXXn5aLeoUq8jRdaUav7BxnEd+gXqcsyf3qp1NyanWsvee
5K3aUTxvqKE8v3OavWtlS0n0k/ZPIuGVhFCbQP0BCJR9n4MXJCfL67PQX4SG
hvJ39bNnz3jbn//8Z96Wn5/Ped7m5ubi+RITE3mfACWdX20HfQUlSJDQM8D8
fFfqGRvN9pNbQuue+k3Pm9jvFRp09B1d933IWvS2+IfQg7Xb+igddbpEF70M
6G7gE84bhz8VfKqQowHvKvjqxhekcG5HanGGbMnkWzyOL0hmzUew7LnhfwUe
gYwPaEO0bE7RKpPWuRW03chA32mlT0uMdGmP9VWqrOu+3MG2AN4AfYMwHt+8
PkCew7faX9wH+RVCFvi1S233nsIrasQg+Zj/4L6e4RpAVWUDPTFOo4U/eanw
i1H9jGnsIBv1bI5xLnRofzh7VyET5JeGBtZVCNpvZPAJgG/v4u2hzDG2bHIR
/agCv/qU7p6bRTX16jrbBtnf9cRpZ+YXWLQnalPUF19T3slT7KeLHMFSC0v2
z43p+7kK54j5/AvmIkW371BNVJSKjrwjqCiqpFCbSM65gL5CmVdgOTLqLNmc
fkbZMW1nRaD3z+u+P/dGCbpuy2P2VF5QSfc3PxbPB/6iqQZSX1NPF366yftA
K456SFNVJVUFeMpe23nK2PSzWs0CPU7gCgmjFeuh2YanVG28otaEOkbukV0q
9Y2cwzsUXlKjPqfCa6dFPvIqoqIykyJjbqvoti1tZ5C3n7ZKv5Syh1Rw2DnZ
tnXiOv/gY7Ixz6tfp3mVUJUdREkmc1rlGIlGM7iXSsLrB2tra64zoB8KedyC
Dz+yug8fPizu5+fnx/pu+ElBXwEeIfjT4vG3337Leu6UlBRep6OjQ3Fxrddh
Jbx5KCgo4KzGjz/+mN8TBgYGUhbKKwz8b7TtTna5fwr1ENQCOgrUBAoriyk6
L4Hck/zY2xYc5JjzJfaFfVmakY4sG8wOcF3FONSS+Yiyt1VVfQ1p2V7nPqtD
jgZU19i1PIwXxeNHaeL4G363gq4bnlQCQoKKWQuBegc8ntpCuIxrwA8K5zik
Hd5jXEMAfKrQ+zV6oCq/mDHKhmZ/fo1GfPFEjXdAB79FxrFOzbxCDz+cQp4f
f09lNrZ8vhNXk5hjTFkRQOWVjVSfmSnqMSLf/zsF7FhCz+sV45LCsnpR7z10
syeZ3HallNk/iTwCtQzoymui5f1pOLbS05N9soQswZa8I/XnRbKxtj5VODtT
Q66CHzTUNlB6WCZn3N3b9JgODT6lxitQw7i6yID3gZdUR5AcmEbHx14Qz3F+
9g3KTcjn9QcGnBB7oFrLvQDvODXxojxL4+N9FLFTS+4P1SI7L2HUZ5S6aKKM
V83gLG7lbZlbFlO5w1MVrtBYXEj553RFHpL44xeUe1yL9xWOy1g/j+qSXs0x
QUNDFesu3L23q3AIJ7e1FBJ2nlw8NmrM2AsOP0eBofqiFtzBeRnl5XfdD/gf
EU31lZTrdaJVfqGoZZi2fzIJrxwwLoTmAn1OyOV++vQp53FXV1ezt2yfPn14
P2Se/Nd//RdrtlH7gOYbPOPMmTO8HbWQ3/3ud1zXOH/+fG++JAm9iHHjxjE/
vXjxIr9//uM//oNmzZrV25cloQ3klhd0uH9qbRvbdOzPUEmN5ry2jgJ1EOgf
UJuIyIkl71R5PQJ1F/hUIbsP3lXI3NB3u04nXK7IOMpl5im4PelylesRyNsA
f4E2HfUQ9GfB2wp1kMicBFplcoI5hF9a63kXpTWVtN3yEu+n72bcK7mytTVN
IrfAoqcTwbczJ7up5GJcvRQv1gIErXhrQOaeyDX29zzXAHDt5otlY+K+ejT4
S0uFdvwLa5rb7yrtXOlK2zYG0sQxzmq8A8vIL0xoxiR75hgDpnnSY9MMykiv
4vrGL7Lfp+Tjhyji73IukDB+PNXGxVNwQilN2usr13vv81PxlEJ2efqatazN
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
cimUF4z3vf0PsHYbfVD19W2PNfGezC8I5p4qZd8o1C5cPDaq6MKxj7JPFPI0
oMlQztoD95HQ82iSfTbZ01a2NNVJHO9lARrtpUuXcu4dahba2triNnjyCDxD
8JFC3SIuTu5hBy8o1C3wGcNYC5rwW7du8TaM5UJDQ1X6UyRIeJURHh7O7294
K9fUyHW1qMlBnwF9kSaAf+zatYvvQz8O/dHly5fp7Nmz0nv/JSEiJ5bH9qdc
r6msh6etMO6/6CkfA6YUpbPfrVwrfpcaOtC3HS87j67jOTW+gdtb/kaycXsG
3Qt80mpfFZ7POMSSquraz4noKMpqq2i1ySnmDlG5HRtz3Au05/23Wlykipd4
La3B2kKekTFmqFyrcft6ItnbZvN95EG01A88f/4LrVnmp9Gbqj0ocw1k5OFc
3Y3gyDIaMtubOcb2EcfpwcRJtObYQ5FfjFljT2dHrKGkxcva9YkqNTen6I8+
Yc6QvmYt+UeZM8+467m/Td7UIPvdzdyi8MCNHzZC7MFqC02NTRRiFUFnZ15T
yfJDfni8l7rHQHlBBT3YaiLup/XZAXq2ZC8F7ppKto4LNI7FBY8kZDkYXdhF
m99v5iYTj1JSgitnXVdUZvIYHT1EyBUvMrhEKbNHKLQX476mvNMHqC5Z3lsF
DgIvqpS5oxU5e2vncEZ5S0AzAU10RWWGjENEcp8TdNfwZgoK1ed+JQeX5aJP
k+ZlMvMN/6AjFJvwiPXXmnqgWgP4S5zsOAfnpSqZF+i1gl+U8rrgsDMqWd01
NYXcd6XgJIspM1vSAfYmKjN9m3um1vf2pbxRmDp1Ks/PxsfHk4ODA929e1fs
GcHcLcZdY8eO5VrGV199xY/RZwJNt4mJCa9Hv9RvfvMb1mFIkPC6Anzh888/
pzVr1nCdA31VyH95//33mXdYW1szjwAfHzRoEL/f8XkAvwBQzwNfnzNnDnsh
gGdLeHFUysbMQg2h5ZgMWnBhvO+VLNdtQ/Mt5Gec97zDfVLtAX1WLonetOWp
jsgx1pnK+cY60330IMiM6x/gMSc16MmFZZuMczwKfkqlNS/eW2Ud7cO8YZ/t
DfaXag+NsnHX4Wd3+ZgTLoYdOuZFUF3dKOZ4C3UKcIsFzVoMo4epasfkZNfQ
iB8cebttB7LClYEsP+H5dA+EdyvXgJfU4FlyjrHlaAAdM5P36S17cIhGb3Oj
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
zZP0p6pyiy3va3NfVOSzWNZwC4BPU4mRMcV9P1CR+z1/CVntMaQdnxwUjzdY
b0RFGe1nsrQE+I+L7gPa+Lb8PKc+XEJRzZng6JMqNb3PeXot0VRVScWGNyl5
hoKPpC6aSOWOFnzNvQl4YOUXhMi4wjmydpijUp+A3iMlzYaKS2I5Nw++vsq+
UKy9qFfPCESdAvUK6DOE/QOCj3Pun4RXH7nep5hnlESb9val9AhsbW15ThO9
T7Nnz2ZvzeHDh3O/BeY7f//735OBgYG4v4+Pj9hn0bJeAQj1DQHo8UCvhwBw
EIxblPPJJEiQ0DWgJwr1DsHb9uDBg1xnBL755hv+fMKjDdky4BeoZ5w8KdcW
LFiwgGbOnMmf/Za6cvAXQUeVldU5v57XFRijY0yIMX57QIaGMF5Hz5My4BUl
9ECZhFl36VqgBTGLsGPNuaDbMI+wJx0HRbYfdB3h2a37/OP1mIXb0W7rY+1y
DjnvOEzHna/SMqODMt5wWnYNHZ//Dc9OYp6xzOgYpZW0Xgt6EYCzTfrRhcf6
QqbGg7vyOa0Nq/358dVLmsfcFRUNNEnGT7DPfYPWNQVtITK8ROzZ2rNdlWtA
Q4NMeXDLlhxv04MLNGaxO3OMcYv9KDapc/1lOQd1eDwfN2AQNTb3JCP7IX3N
OnF9fQc/o+YPt5PtZwPp9juT6eB7G1pwi310Y/l9CrIIo7rqtutZz2trKef8
ZXr04RTa/tfN4jnOTT7fbmae2rlqqqnC3YGydXfSjX6KXPDbfWdS6rJpnJ9X
n6W5j7GxMJ8Kr52mpIn9Ff60q2bx+X7pxTEG9PbQh6MO0TKPD5oL8IeqqlyN
Od7wvIJ3bmuafXAWZR2Hm9dWGU/pfN6HhN5DaZwF84xwiz29fSndDtQpML+J
OVJh3A+/J2TlNTb7dKOv+8cffxSPwXc9+saPHJFnjCrXKwDotuG1KQA9Hp99
9hlrMiRIkPByAb0FdOLwfIZ3NG5RZwSg7YAPFTjIxYsXaeDAgaI3A/qq4L2A
zzo0VEKNA8A8gJBhAz+HfxS4Op4lnQcbyDD4aYf2Rw8S53ebaTMvUEZsXqKY
g2Ef69bla0L/1nHny+KY9ZrPA3JO9BbrHVhOuFzhbI62gN4qmxhnOmCv3yHO
IfhqHZM9N/hOSFYUa0Lawv0gB+Yae22udUoL3xkIvVO7ZeN83M6Y5Ma/SRHN
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
DgFYj+3wvgZfwfwFkJLSed3Di6C+IJlKnM5R5tkJIpdoqi6lEpeLlH5iOK/L
PDueahJfng+moKO+42/c6j7pJVk8l4/9MN5/mUAvvuB3K69tuIt8AtuUs/7Q
GxSa1X7+oq7jXeYa3qltzylDow7dxb3AJyqeu8q8Y6N5671XuN6NHaxtoLdp
4+PDtOiiHm25e5523L7Geux9N4zYRwvXsXSrKY2aakh3HgeK/WTIQEcvknLN
4tjhSDFjXJP/FH5rG5838vgePLGwsph1Jcl+jyj17Dh+H6UdH0oBFjpk4GlO
C/Uu0LxjJ2n1zePM6QRv47YW6HuOOl2iW/5GzJPQqwWe2F5tpSYiUpEX/uCh
yrZSUzOxT6nkiXoWGDxs0a+0+zuFz+3Gv+0hvbEbKXBIf3VtxajPOZci/6wu
lTtadkp/3VDbQPe3mIjPY7jlEeXfuyHjKUPF88cP/5TiBn5KacsXUnVE2/ro
rgCeTehJAg9wdl+nxivgFYUeKei70f/UcoyHx4VFkZyHYW2vyNp7ajOZ+YY8
76LjtUJoLfyDjyk4iuycyNRoauq877GENwMVNbKx/H25XkPQbAQldR/XFgBv
mGnTpjGHQF/DiBEjuN8JvQsCoNVGTpeLiwvrMLZs2cK++OhPwGcDmXuoT+D3
PjAwkPufhgwZwnOS6I9QBnQYylngEiRI+McG+qbw3QEPXOTiQJ81YMAA3obv
CtQylLM3oNdArRRzGwKg5cL3FuY1kOnZlo/2iwDzyxUh5pR7Z5k4xyz2y5tr
U8bJEeLjIitdGe94uZk+RqEW8p4g2Xi6LWAcLIytwTteJmob6ljXIIxhURMQ
NCP4PYCGXLn+cLyd7A3XxBDmGSddDDt1HdA0wPf2nIcBrTJpXVsNXUZLfyTl
BfP9u62P0l6b47TL6sgLeWJp4ivo21plqE0rH2rTepMDfH74B2O9ppqMluFm
cjs3UXwfeZ0Zx+vaep7tlrp02PGcqIVHngr+D9BeVL6gVqf06VM5n/jwY6oK
UOWtRXcMeFsY5hhtzZi/mNhbk87y07Th/T3iuH9d3920ds0eWnNvDx26sJoS
Rvdj79kcnW2UNGkURX/8AZ+/6PadTl9fQWoRa8c5q+O9veQwbwufX6yJzBpG
OYd2UdqSReyFK3Cj5Jmz+LWhp6qzQC2gtCyZc7ZRk3BwXqbGKyxsp3M+XlzC
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
N8nExIR++9vf8mMZGRk8AxUREUG//vWv6caNG/z4vHnz6H//9395nmrmzJn0
93//95SXp6wXHjx4QP/4j//IX8fExNB//dd/0YIFC6i5WamHdHV1Ze6yf/9+
ys3Nla8PPoG+ycKFCykkJITu3r1LP/nJT+iVV16R94EOffHixXw99Fewjqio
qEl5fwQmB711ZVRxZcXTHsa+V6je6fxUL0uGT1Yw18j2KZM7F2gSZsS1b3TR
xH7ekUW4TfKotT3MuRvaAvpt1NNhIZrn/uEjhed3nHRW024Yh9+l6tY6eb9D
eom8393b+WN6LTge51n0aTD19gw971RQl09Xgy7J/OK8vwFlVQ+fG6ErTG5k
81rGOhMmoSUtnsI3zCS3W++p6bojY05QSLIxnXNbTmaBe6mvX5nv16f4+5u/
4HPmGlkvz6DOKdTPNXV0kVFgAvMM8I0FNxzoQXQGdfaMT5a5gICAgMD0w9/8
zd9w36GoqIj++I//mCorK7mO/+KLL/h51PbgCAA4QUtLC3+N3IJ/+qd/otu3
b/P3BgYG9Pzzz5OFhQXPYEETLuHChQv0F3/xF9ynmD9/Pv3Zn/0ZJSUl8XM4
N/ogDQ1PZ7cTEhLoT/7kT6igQDmP/tlnnzH3cHR0JC8vL+Yv4Caq/RSBZxO9
rY1Ubb5NhV+8TOUXFlNPXclUL00Nrum+XBu7pftN2jWbOppYJ7DXeRd16FD3
jxbFDWW0wVbZ1zjmdYnq27XzJt2yPlrZPxhCi1CQ3yJ7QQ3UbsBnF9wNehHo
yLEfPGLHAnCLLz4J5nPdtxqsaaluqSbLKHOZXxzzOEyRhRFaazB0xb07+TLX
uGMxvJZ8KNTVp1Fc4gVy9vhU5hcu9z+geDs9au9Q8jtwi1uB+1irEZX3tO8G
j9vCZV8qteS/f4k6UlLH5XWNFqUNLXTcOUyepULuhldqvmL9j6d0XQICAgIC
44v6+no1TQV6G6tWrWJOgBofvALPJycnM68wMjLivsPHH39MK1as4OcsLS35
2M2bN8t6ckNDQ/kanZ2dzAmk/QDoPXAOICsrizkFjpd6HwB05dgA9DDQc5GA
mQSs9ezZsxP11ghMMHqba6jaYrucucczUsfeo7akoX2JphLWCU5cFwfljU0/
oAuQ2YA6GNlwk4Udzldove0hfq16bmeotHHkuf61KyO4hk4ewl+pt7efZr7k
yftgPgpo6mwhq1h7eV5rr6s+BeVE09uvKWenxprtHRFWw+d5e6YP1dcptQzN
nU2s8Yb2QsrB8MrwpK7eifdedbIvoRkvKLkGMkW0QXd3M+XmO5Jv0AaV3sVc
Co86TNn2hpT64x9T2o9/Si0BAfIxhTWpzDMuea6l1s6nPw/oOZAXDq6R8Zvf
Ult09Li/Rl2RUlpD2x74ynxjvZUXReYLD3UBAQGBbwsSExPVNBU7duzg73fv
Vvr6pKSk8PfQZdy/f5/5wOnTp+nevXt06dIlfs7f35/3RQ8E37/77rv0i1/8
Qvau8vb25sf/+7//m7Ug0J3/67/+K/3bv/2bvA5zc3P6h3/4B+Yjq1evHtSn
+N3vfsczXZjnUkV3t9I/BTNc7u7udObMmUG6EYHpha7SDDWfWmwlh2dRc6Bu
2uPJhlG4FdfDiWVpk3I9ZMCd8DzK9XB2tXZ16XjgsOctWvVAn8743eDXi75D
RlXusMd8+cRPNjtr6MwIyXM2PU29R4IeimHgTXmWaovVOXpn3oNR3/dXxe5t
St3IyRNx5J7mKufsgWfYJj5S8I7JzXbH/NhrT/jW2VOp1K/h/j3uoVTXJlJM
vIGa7gLZ3elZVtTW/lQ3Un35ijJb45e/po7kFPlxx9grzDVcE9QzkeBbBV2H
lMfREhA4Ya9VW+D1BmeX0BpLd5lv7HrkT6llI+v6BAQEBASmN5CPoapziI2N
pc8//5x5BYDaHTNQwKFDh+hHP/qRvC/0GOAPktbiN7/5Dc9OYe4Ks1anTp3i
x6Hxxn64jo2NDfc6wDe2bNmithZc89q1a6z/+H//7/+Rra2t/Bz6LdCJYK7r
zTffJCcnJ/7/Cairq+Pzg6esXLmS3nvvPd7Pw8NDPh4zWpjZgsYDWhPVvsl4
orHxu5WB29dSN/JOTwC/qLLT89T5xdF3qCng9gSucPxw3PsS18Ha3N8fD8SX
xHJNfM5vcnt2J3xus+dUdnUxmUc95Ne82f4QRQ2TT/jpR4Ej9iAOP9FeuLmU
anw+tiSZDrg/1YqvvXxN67mtoVBQ2EgLvzGirda75Rmp21HmPDc1VQgPraY3
X1H2bPCeSPqR+rYasou8RN7+a9R0FxExx6iiMlLBSTRnD5bt2auch3rpZeou
Uc4aNrXX0EWPr5hrlNarc9TH/f1yHkfaT39OTa6T62swFKAVd07MkXP+sB11
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
6syNoc78qZv1mShI9f+DuPsTdg3kKUgzN7rO8k8E7sf7Ms9wS9eON7a29Cjn
e2Z4UW9fL5lHPeT6fqvjUcqoGpzFlJer9MBd9Fmw2uPwd70Xe1fN+9Us3ITy
a/Po048CddJToPcQmh9Nu594YsEH91GiK7V3P/WYQr9A8neysshTOx4ZetBW
nPA6psYtMK8FnXftBHJOTbC2KpC5xmg9efva2ihv/sdKffcHs+iC/TIyD9Kj
vv7ekY/t7SejbW7MNb784XkKsUsd1RqmCi2d3WQdlU6LTZxkvvH1bQ/yTM2n
nt7p598r8O1EZ1slay4Kk00oNXA7RTnO1cgvBuozAMxKqPIKzDqBa4BzANBw
4L4lNKCY7Ua/Q5V3ANBjSJ41AGah4FGlqvsQEBD47qCxsZF7kvCdk+aopF4I
gBxAZHVI93jhW4d+CXyroB+R9Fmq0MZvSkCJkoZiZUaz8y7ua0wE4G+KXgmu
g3mg6YArXnvohON6iigY2aMWSE5SesWuXBrG36PGvxtn/0QrcZhSKjLV9m9q
6ub9333dh7/HLJKUTSJ5v0LjUK7CuQzPpo2qxgaveJTowjyDfbEUvCOsIFb+
nYmOquXzvj3ThzJLCsg93Y29cVW5BfLYXdNcqKxxanNgoJt/9fdKrnH+TNqo
5pt7a+soe9bbzDXC5r1K552/pKg8N62OxfWs9YOYa2BzuTH5+ZFjRWdPL7kk
5tJqC3eZbyw1dWYOguxxAYHxQm93KzVWxVFp5n3KDD9MMW4Lh+QTOTEGVFPi
P6TfFIB5JlXegJoAHrHgH/CNAuBPA54BXSYyvaV5bQEBAYGRgP/joQGTtFgA
vpa0IehtIp8DXncAPKief/55obUaJVArXw68wHWmW5r280O6IK82j/Y57+Zr
+GdPD76Hz4up10oycl9EVU3azeI/sFT6sB7Ve9r/wHnQP0Btj6yLhLI0tWPe
mOFB81ebkYHvGTUNtXOKI89NDUR4aDVfY82X4YOe0wZlTZV0MchUnqU663+D
CutLuH+08+It2mh2QI1bwMfKIdlesU/htPodCg6skr2y4MsLvbiu6C4qYp0G
uIb3F6/QJY+vqLlD+xlqL/M4WvoDJde4fdiX+0LPGvoUaw7KKqYt931kvvHJ
NXvOHBceVQK6or+/l1obsqkyz5lyY89RgveaYfsUqlthiqlWf2Mwz3TgwAG1
xzCjjX6E4BMCAgITDXAOVb8teE0gY1w1Q0RAewTmBHC9ibmZ8dT2SihuKJa1
xMhymy6obylhjnHHf9PIOz+B1z1T2r3yLNmaD9bJO6R4ylwjtiSZmjubySvD
g7ZZP9VenPA8SgHZftTRPXRuHrxeUV/D47axYWgfqZGANexzPUlb7XfTDocd
atxi6729ZBlyn3Jrcqckg11bxMfWcf8FXAP+t3hvdEVHahpl/Pp55hqua14n
h9jLOh0f6ZpJy//PkLnGpbWO1N058uzVdEVSSTUddQ6V+Qa2I04hFF/07c0D
Ehg/lKTfoUjHj7TmFapbec7EeYsICAgICExPwMdW6jNkVI2sk9UVmP0/6KYn
e0tNp5o2tcibeYZvonaetkCO9zeUZP0OtVQmaHweHrOb7fbRNkVtr6q9WG90
mJzDg7XK1gO2blRmSozGdwkzcG5prnR6QH7eTgfF5riP9Mxu0Su/d6Pd20fO
/5gOyMxoog/f8pO9eZubdb+f2RoWTmk/+zlzDbttb1NelW5zexmRJfTVLy4z
1zj26T1qbZjYfPWJBvoY6GegryHxjfVWXuSeksfzVgICmvD4cR8VJt/UiV9E
OsymmmK/qV66gICAgMAkA5kL5/3Ocg1qk/Bw3M+POZyDrkqOcTvaQusae7Lg
GXeBeUZ6sb9W+8MvJfnRbOYZfd3qWW7ItYgviaMrQZfU6vqLARdpxyF3rpF1
yYWwvqvUQmuTOQ7uBp8ozGFBX6HKLY56HCK7RBuKKY6la6GW8izVamN9emf+
A0qIm/45EUBxURt7ZeE9Wfp5CNVU6+5T1uTmTqlPMsNvnF7HuSC6oDSrlja/
ZMRcY9ebZlRTMvr88ukCaMYfxWTS8luuMt9YaORIpsFJVNE4vfMKBaYOFbmO
WnGMKKf5rNsQEBAQEPjuAfpj1KIGvqfHfV4qsypD9mq1ir497TgGfIfMvFcx
z2jp0M5PqaMhlzlGhsvTXJfGjkbyzPDgel6q7ZFvfjX4Om2y02NNtt5FR66P
XZ1GzgSXkJ+n9Kn66D3NHAi8Bppy28RHatdWZnMfZb1FXu3gmajk8gw67Hle
5hvrLl2nhvZno16uVnCLJQtCnvjzBlJJse55mTEXL5H1nHm0wPgmWYTp7qvW
UNlCe9+1YK6x4XfXKT/52zFv1NffT8HZJbTrkb/MN5D7d9QplGIKKoQvrsAg
QPM9HMeIcV3IOg4BAQEBge8eAnP8ZT0yZqfGEzFF0fLMEHL/ptOslITS2hTm
GA9Ddmt9TG2OE/OMovDTlF2dRZZR5rJ/lpSrF1UYId8n98kKVtbztgdozioL
um+lWxbD3Pf9uaaGNy6ArJHEsgSeP1PNzsMG3yjXVGcq0kLLjZxE52Q/Wv/w
EK/vG7uj5JMdMu24oCbAv+urFUotPnJMMFOlK26G+tEnphb0makZReTr7lnb
3tJF+osfKjM2fnKREvzyRj7oGUJudQNd9Imhj1Vy/+BZZRubKXyqBGQ8Vvxd
j/daqZFjxHsup47WqfWsExAQEBCYGiSr+Mvi6/EC6luPdDe59oVGYLoiKMWU
eUZ09iOtj8kMPUX3bRbRSff98mvc67SL637kXmiCb3Yo1/IbFFxD39xd4z5D
4cThZHrjDQe68sCZM7hxLVVuAV7jleGp5omrCx46pNOSUxfk3sZx70uUWT39
a2ZowaEJlzx642J0z+A96GTBXGOBmRkV1uk+O9bb00fGO9yZayz973Pke3d6
+DSPJ5oVnALcYo2KLy4yxw08oyilTGSNf9fR3lRICT5fDeIYSX4bqLvz2ZjH
FBAQEBAYX8BfCBkZSn/Z8dPm4V67ReQtORMiomB0nqyTAcxMWfh8zTyjrqVk
2H3BnXJrcphL7HHcJtf4J72OkV+Wj1b52IaPnOW+RmTRyPmOyK5APt4xpzOs
8ZCuCW54I+QqZx3WteleWw9EX99jnkN677P7tNPWQOYbZpHW036WCh638LoF
13j9D14U6Kfb/FJbVwuttjRkrrHk1j2qah6dv6vthVA5Y+O+fuC08gUeL2Bm
Krawgn2qPlLxqVp3x5McE7KZjwh8t9DWmEcxLgsGcYy04D2K303d5xkFBAQE
BJ59QJctaSYwvz9eqGyu5OxoSZuAmaLpjPzK6CczU3uG3Ke5s4n8sn3Vcux2
O2yjSw7rKL0iTadZME+3Mpq/yVTO6o4uVr/3jTkm6Fng+Tswk3v7o1301bkz
FFkQqaiNx1+XC206avUP3vEml2R/2uZ4lNeJf72zgqb1LBVq+gsG6bx+ZPo5
2hXrdLyLdwHNPmHNXGPtfRsFt2of1TqCHqVwbji4xuX1Ts+07+1IqG5uJ6uI
VPrSzEWtx3HWI5ISi6u+lTxLQB0dLSUU4/o584rkgG9kjpEVdYL6dfRWEBAQ
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
e5+TOq/AvBWy8nyzfBTnLtKKdzU2dCszKt7y1fg8ON3VUEuu1w+4Gwzydaqs
UPZD3n/Td8Jnb5oVtfa7r/vw9bTJ2U6tyKLDnudlvnEn1o5auqZPTldHdw8d
dvNkvrDU8i6lVQzPvT19KplnvDc/mNySsvg4bL6Z2WNaR3leHW2feZO5xqYX
b1B+8ujvAXzb0NLZTV6p+aRnF6TmkfvJNXvSd4ugkJwSwTmmEJnhh5lnVBf5
TPVSBAQEBAQmGaijz/oqa2zkfIfmBY/6XEX1hXRdUUOrzgBh/me6ATwAfYuB
3AK+tOBb8MNSrf+9Ey4zx/BNvKrxfJXNFRSaH0KWCj6F/oT6LNQ2Omm/gWwj
b1JGZTpr4XUFanfU7e+9MfT/0/AEPh9oImdWDKzV53+ozNEoyJ/4e+GWt/L4
WmuWa5fpjvkw13Q/2uJwWJ4BC86Pmja9r56+PjrnG8B8AfNQkQXDe0Bt2Z3I
XOPIqTTF5yyDj/tUsYXlF4xpHS0NHXTic2vmGit/fIGi3KZ3nuVUoL6tk5wT
c2jXI381LQc4xynXcPbJbe8Ws1WTiVi3RcwzOtsENxYQEBD4rgDaZfgaSXM8
8GMdrW4C+RHQMUu19RH3g4qaKmTazNyjXoWPE/oTp7yPD+IWyLTLqcnWWNeW
1qYwxzD1XE6tHcqZpKqWKtZuY95JNTND2jB39SjhIUVmulOk9QeU5rCAvW1H
i8YG5dzUGy97Drtfe3cHnfK9yrX6Gb/r1NnzlNMc0kvkc+iaeT0adHb00ex3
/Ph6IYFVWh9X3VpH1570ZbCd9b+h4MHTQ8sDbcDNsAiZM3hlDM2fyys66I0P
AplrRMXUkU1CEh+3wMyS4kpKx7SO3p4+urnbQ9aHO1zWjst9F1Hb2kGOCdmD
OAdmq446h5J3WgE1tevO+wW0R3tXB3OMcPsPv7M+BgICAgLfNaDmlnoY4Bnw
rB3JM0kToN+AL5XEVeCP5KHgLmOZuRov4B45NOyo9wdyAeRlOyTZUW5N7rD3
zHv7uule4Ha65LqMHkTfGJJXYMYKmYPRRVFU3/Z0hr8s7jrrv/HvWNCk4Bmv
/dKRZv3OacR9mztb6YinIdfpl4Jv8UwVYPOgSJlBdyR5TGvRFo+sC/l6yxaG
UH+/bvVFQmkq7Xc/K2efP0x0oY5p8JkCJM6A7UGcZl8t4K7i/QbP+HRJOHV2
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
cROvT2GfHHkV8HRgVpWq5oCv/HRwGCUoNIcxz65q6Oig/d5+8nXvcvem+avD
WWvsPahZfyP8GfBpSF4Wn8zsu+dv76DVtg583yobe6pr021O/Wj0990m++Ph
NPcXR1hrrH/UnHIT9DOfTSAQCAQCwej09HVSerEvWYdukrUFPBhe8ceovN74
9/5Hoir1OmsMZPE1l0UY+nI0wtU6n3UGeqf0SX9LI+uM4kWP6vy5Kps66OWj
Xsqs8IzxrwvDsqv4HAvOBWq9z6m4oYGs4hPZv6GqOdBrBc2BTDtjrXOE5BXI
/u23LlvQsytcFFrDnwKCNetVg+a6ERMvv2Zkk0vfX8z1WufgLPdXVbW06vKl
aERhahVtevoya405Pz9Ct/YHU2+34TzrAoFAIBDc69Q05VNQ6nky914g64ur
fsu4N6q1c3J5YtVRnW4pa4zG4kBDX47G7Fmn9GY43dTvPJ1P+vtZZxTOekAv
c8Pck0pYI8ww8aHG9vH1+2PtO+9sAJ8nMld3vn7kaNskJA3I5pa812ahEZxt
Z2x+DvQ1SRkZuL2w7yZNe8ufaus0/16jF+uNO7OoDvj4U1evsi+pvbtbzvp7
x9JqSK64Iejr6SerA8GsM6A3PnjyEuUnVRr6sgQCgUAguGfo7m2j1CIvsgnd
LGsL3JyjPqK8igj2fU8FqtNv3tUYRQGGvhyNwfr+1f84sc4oK9L/PnHR/IdZ
a9xu189zb7WKZo2AzPDxYh9TyOfYaKndHPPhgOZAnUPqH5Juiy2ted/f2OZW
RRQUsdcE1/iq2VVa9LEv3R5DHQYaSsoj2eDgwr1ToFOhOXa4ecp6K7/OOF43
+qY2Pn5Rrm1YHwphDSIQCAQCgUD7IDOvrC6VfBNP0gWveQN83RGZN6ipbWr1
M1elXlNqjFvPUGOhn6EvZ0zkZTWyxnjzcVeDPH/piudZZ/TWlOvl+TCTFj5u
6AS/tLJxnaO9u5deOabswcI8K32C3irMxF1uZTskixxaBDkXxgCyCQ943q1t
vHvFkSpbNL+28qZm2bMCPVVQV89fh5cD860k3zgyS4yBnq4+stwXSHN+pvSI
f/DUJSpIFrUNgUAgEAi0RVN7JfdAXQ9YpVK7mE1uMfs5s3uq1C5UkTzfk62O
IWF1KYt1xqGtMQZ5/rINM1lndBdlj36wlvBOKWWNMP2EDzW0jS+r+6xvOp/j
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
/ALlWsYxxbHS/KrjAcFj7tsyJro6esjmcIic8ffOH0zI1Sya+nqM6zXVlDTR
bMX1vfnrU9RU1zH6A4wY6Ajpd7CUu/vUU0/JX8NcSngzULuwtramf//73/x1
9D788Ic/5PUJMgCRRQ7Qgy15z6FVMMNSIBAYH8NlckMXqM6KGIyqnxt7Fdib
QE0UM7b379/P8+rEDFrd0lweSemOM5Veb9tXqKHAa/QH3WNsXhrCOsPq0tjm
guqTjuQI1hlVe1cY+lLGxE67WNYOJzxSRj0W86ZEPrh2+GB7CmuNxSvjqK/v
NiWVldM2lSxw+Lat4hOpXcN1V1h+gZyjgdm2EQVFA+6HdpHOvcvDi+sfkn+j
XUNNY6xUFzfR8SWOcm1j/f/MKcEvb/QH6gk/i0S+rpMrXQx9KVoF/ozz58/L
PQ8A/vClS5V7LZhRiXmU6IWAvxN+Tl9fX+61Qk8FwDoDGR7QGPCRI4tcmnUV
FhbGaxiBQGB4hsvklvItwsMHzomBF6uysnKInxvvfXd3d9YtAt3S39M2INcb
noyeduPsCTIklWXt7P9+9n5bam403r2ujoRQpc7Y/56hL2VMlNW30XOHPGja
QXfOyhgJ5IOj9gGtoelMXIF6Wlp76dVZ4aw1Tprlyl9Pq6ikHW6ed/XG1Rsa
642G9g76yNNHfiw8GaoaAnnhkr5Aph96tZQfO1G9SqbCZCU1pIg2PnFR1hsH
5thQeW69oS+LLm725uvxvjz156OgLyIyUumhg28DmgL7ltAXANnjr732mtrH
Yu2C9Qhm7IO9e/fyrH2BQKB/elT+doyWyY39hJUrV8r3ob75ox/9SPZWDPZz
C3RPS0U0pTvNupPr/QLVZtnzjCnBUM4dSeZaxv5NUYa+lBFpjwlgnVF9aK2h
L2XMnPVVerw3azDn1sQzdUw5f4LhSctopoefDmStERpRN+C+jKpq2uXuNVRv
aFB78MzIoll3sjuW3LShlPK7PmnMwn33li3ft8DiJi278zH86JMxY2Mw/X23
yUuxnl96nymv7TGf6tpOP2prNFxd/uA8W76WxIDRfVBTCfRVYe7tjRs3+HPs
e8IDin4qgHlWmJuLfqoZM2bwTHzojPLycr4/JiaGdQrqJvCMYy91/fr1Bns9
AsG9AObJIQPvM5/5DPdEov4wWia3q6srffazn+UZcvBvL1++nPsnoU+A8HPr
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
L8VoQW9U1zVOrCtCb2bxscSMfL7d2eKMSfipmhPRMfnUvK0ba43d1jFKL+eB
SMvLp5knTt1V2zhzPVTppRkl6J2CxxT2DwG8qZAhvnTpUvZ0sbS05F5n+EKi
N0EgEAjqE3iNwZNCQjtPpapHLfa21b6/ved2Np90ge4wFwryS9m/Fjpj/9YQ
pZdjcLJO7NF42u5arvRSjJptLiF31S9GbNf0U/lEpii4MkF1eHilUZPmLqw1
3D1SlV7OA4HPnZOBwdS1itb444yz6j+THgTtz3F4tmB/8LXXXmN9gZ8XfCWH
Dh3K9yclJVGPHj3ok08+oZkzZ1J2tnn1CQsEAv2AuS/MbSO/B77aeK+Btzbm
x6rzhpL2QtTiUXsvlJQV04KTY2SNMe/kaPKNvaD0sgyGxdwrrDFGdnPifD5z
I3XTPI2n7RnRr1wbmP1uWakp2i4/TVkFmvnRvR7hrDMsHEzfZ06NWO2PZZ3R
rI0b3YjKU3o5D8zNynPg0TaHdbTG4L0HKKfQtGbdDQm8IFu1asU90GDfvn2c
h3XrlmaeCucBa9euZV9caBL0MSCXVyAQCO4V5HBDK7z++uuckwLf7TFjxrDW
gA/F1q1bdR6PGuuECRP4ulo8au+F0GQ/nVqGdNl7aR35xLhTUnY8lZaXKr3M
euGq1y3WGC0+OkzREea5n3Vz9s+sMwqDzNPH+H6Yc9iHdYWNl8YnIDo1l293
X3OWyivE/rIxMm9xMGuNLr0vUlZ2Sd1PMFLKKypol5e3jtZAneNafKLSSzNK
8Dkv5VvhXACf+fDFBeHh4bR7927+CoqKiuj555+X87KQIQ6/KoFAIKiNefPm
cbYF9i0AMnzgq71z506aPn06vfrqq5x7AeBvh8ei7mFunPC3rlZnVL1sdFtI
ecU5Si9XbxTklVLv5pp+KevN15VejmLEDv6edUZZpmn2lhgSn6hU1hX9N7pQ
xe2+lZ+3uPIx+N8KjI/iknIaOuYKa42RE3yptNS0a5aht1J4Jlxbb2zxMJ+s
nwfB2dmZ6xX4nEf2FXwjkYn1wgsvcC0D3lTolb54UfNzxHlAly5dFF61QCAw
dpDZDa2hzYwZM+jbb7/lPs5mzZpx/+a4ceP4PQdeFVLflDmx6uyMOjXGSqdp
lJqrruzjFbN95H6psjLTPvd4UMpzMlljxAz8RumlmATYIx246Tzriss3NP0X
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
1Pi4iuIizgqHppD0RfLC0dwvVVFSXOu/UV6YRRmXd1L05pasNeL29KKS9Ch9
/1cEdbDbPYx1QYeVte+nw5MKjzvhG6NzHD1SG5yCZX0xee9F8o+rOwMnLzeO
Iq7vJDfH3rKWuOLxK+Vk3aDysiK64jmtSg2kHeVmR9f5fY2ZY8eO0aOPPlpt
fis8YV9//fW7su9MGcznIVsDrFixglq0aCHfl5uby56D0vulQCAQCAQ1gZnv
Jk2a0Pfff897VZj3w94+/EYwD4i9OnyGNmjQgAICApRert6BxsL5A/LOsY/X
p08fevrpp1lTIbPR1Mj3dmHNkPhrzxofUxjoTfFj28n64taKX6gk9v7nT0pz
kijx0EjWGjHb2lFximlmppsqUSk5skbIKqhZG6IXCo+JTbtTd0L/1OJjmlzx
tstPk/3V2Pv+98vLiyku6lil3ugj90h5nP252l4rv0tzH+S/aDQ0bNiQfb2r
A3svqIUie0ItoG79n//8h6ZOncoZtj17at5PkMWK4+gXQ/aGl5eXwisVCAQC
gTED79pWrVrJtzHfDc2BPX4AbeHq6qrqDEPkU6GegV4xXDCDEhcXR3/729+U
Xtp9c2vlFNYO2Ses7roPdYr0nUtlfQEtUhRyb/kLNfFneQklO8zWaI3tHak0
W73zO8YGehlbL3NgreDoV/1sflKmZjaj+5qzOsfXOgbKMxt1zYbXRn5uPIUH
bSWXU11rnenAJSs9uO5vaIQkJyezjqgpJygqKorvj4+PN/DK6he8D86ZM4c9
B6EvwOnTpzmvFbUbZ2dn1hx5eSKPRSAQCATVM3ToUJ7H0Aa+UtjjDwszj/1p
d3d39teaPn263AuwadMmzss1Jcrzcyi6zxcU3fNTKsvQ7fkqTYqlhCk9NBqj
z+eUdWR7pUbQj3b8s6KMkuyns9aI3z+IKkrV6XdsjAzcdJ71wlzbK9XefzYw
4a77T16L5WPtVpym4IQH1xhlpQUUcKX2mXHtyxWPqQ/8bykJ5rcef/zxGmfT
LCwseG9GzfkSp06dYt2BnwX2X0JCNN4DmN3QzlcSCAQCgUCbJUuW0BdffHHX
zPdLL73E/iNq5caNG9wHsXnzZsrIuHOuhX4x+G0988wz9P/bOxNwrca1j1/4
fIYPiVLmkCFFEyeOUFGhgYiokBQqEckQJSkpldKgosjQRJPmNKdRg0hI81yG
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
kIn7MjIWL8t6/6ytv/3u6vWZnmGdgQ6jfJtR9vX0bze4pr66o+OoRVm+vkMF
HUaY9RnJPPnkk6ZJ8EAHV7x4casxPvnkkwBXlr0wj0rvOLlXTP8CLccXX3zh
qlSpYvckIYQQ4YDrNmdF3Ns4VyMjA+0BHlOcF5F1jea7Q4cOkcr69rNhwwbL
ykjv9XGfxwfG87pfu3ZtGm14GEn4Td1d3P5MtRoDdv+8+s+64vo0NcaKN8sG
vaxMYf6Sd63GGDW9sfvj39lTt//2+1731IezMqw17nh9n5ajw591RS1f/2PW
0uzPzPgrUFPQvwij39SB6N+/vzv22GMtG5s+atyoWLGi+YfPmDEjzZkXvQ7O
ePC+FUIIER4WLVpk2Uiezo77nKeB5iwffyXmZqMMfrXea7766qtdo0aN3IAB
A9zKlSvt+9WrV7e5KZG9bBr7Upo6Y1Wf8P8OyN7bl5Nxu2V/Zye79/7Ltfh4
Xrp1xj1d9+k46vaa4m56dV9v46a2o9yuPeHqX3IGcO+997r33nsv6KUcMpzp
HHXUUa5Fixb7fQ/PJe96FGXwOiTD79xzz7V5KbTweI+gE6SvDvgA87PS3JQQ
QoSDqlWruscff9x69+i/J02aZGf7+CvSy+DaH2W8jG/qDHL3+FlQb3CuyOwC
X/M9vFDCDHMHnAuGJQdr908r0/Q01varFfSS/jb4StHLmPVlt0D+/9Fa0LNI
rjMq/ycjvOJr/83YoP8RFsiYuPnmm+1zymeWvLegcgUPF+Yyc+TIkeY5XkPn
zp0tJxS9RtwYOHCgXYf9ujjy1E877TR39tlnu9mzZwe4OiGEEH8F9tneeX7Y
99KHC3UVOkw825mXZgaY5/D4RQ9/33332RlaWGnfvr074ogj7HeMNz955t4s
WCqzaUzzRJ2xfnB4dTGw+aclVmP0H3uP2/n71kDX8vakbw7qQ/XBZ0sDXePB
4Kyb+U6vH4mGjMwfPC2YsQnbtYw5KeqJ0aNH29/pX5QpU8a0c14WaFjOCDKD
QYMGWY1BrQHTpk2zGsPrY5DjRE2JP6IQQojUYfXq1W7OnDlpzvvwbcW3PO7Q
0yHjG43K/Pnzg15OpkDNxO+WvI8tW7ZY3YT2n3s4/ZtUnsfY/cOyRJ2xceRz
QS/nbzFu1vNWZ3zxXf+gl2J8NHt5mrqibFKd8dWa1PT2QifM+TafU+aM+Kxe
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
4gNzL2gL2C+yX/byvclzpa/rZWaI/2oVkvUp7dq1s2zcqMI8HfkYvD/o5wBa
TmbO0QHccMMNAa/w8KFe4rUxQ89MPT2puJ+3Zhf4oKKT5nOFF29yvuMbb7yR
0hr2v0rnzp2tz8RcPn62zKXSE2TGEv1+lMAPAg8R+p281tmzZye+RzYK/XD8
l4UQQsQDspU8XR4eSewlPW0a54rMMUydOjXIJaYMnEviV5vsDUJthv4xqtx0
0022b/DPgvAe8XwZw+wfs3DhQpuZJiuOmXrP7wjfSb+HWBhgn06uSYsWLdI8
6A2kMp999pnLnz//fs93797d5hDDDD0lagquq/Rr+JM5vSjNSyWDfoueBrno
5NHt2LHDPfTQQ9a74oF/tHdeIYQQIposWbLE9iTsj/37RK7/ZCIwLw2cQcUZ
PM/9Px88cfCM4ayVOQB8UNkLRTXTlbN99gXJudKcQ/M+SU/HG2bIpGZ/RI8m
TL7EnJVzZp47d25XsmRJ6096D/TIqQxr572Evy3vN+p5PJnoszZp0iTo5f0t
yGChdkXTxdee1xBnE8znR+3zkwxziXyWyNYZN26cPTds2DD7fXuehkIIIaIF
e0bO5Zn1YS76ueeeS/N9/Lxz5sy5n2YxTtDDQYvBHoH9G35LHuwPzjzzTNt/
o3vEFyequgz2CeyRkn1R8GhkhiyMHlMHg+zFunXrBr2MQ4LfD/MqYf19oMvg
WkSdxB6UHgBZ82H/XNGroV+2bds284dgVoyzm4kTJ9r1hV5hlOF9SZ/Qq688
6Bd6Z1lCCCGiA318NBfvvPOO/Z35WeZE8Dz3z6WjiY0rzBCz1+H8kZkydAjJ
sP9Bw/Ltt98GsMLsBe8lzpaZv+H8FX3Kfffd50qXLh300v4W+ITh2cuej9kO
D7zEmPcIE5wNMJcTZm0Jemjm8fr16xe6mbWDQeYp5xLMqRYqVMh6ofjfUhuS
FR1VyKbBYzkZesDooYQQQkQLZirOOOMMyyP1QLvHc7Vq1Qp9RlZmQGYYGdEZ
EeV9QXowN9ayZUvz8KUPxow1/Zywzz1QYzA3yNk5r409ID0+eljJuYRhgPqo
cuXKtn8jT9t7hM2fl2sQnmacheBxFgXwm6Jnw2u78cYbLecE8CFgLx5Vpk+f
bvcWb/6WM4p69erZ2VacczSEECKqMO+Cv0758uXT+CahIaWPn+qa0ayGrAG0
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
    "], {{0, 879.}, {794., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJx1kE1IAlEQx/+aYqSRB4kOEUYRBFqiHey4fRCGB1mTPi6xu66rZOtjdyO6
dY7oFBF0j7oHXiLs2C0KKjoVHeoeeCnZ5mmlFQ3Mm9/7MzNv3vTLJTHnBGC2
0yFK64JhSBtpP10yulnQdDWb0C1VU4247CDRx3Ph9EmMFV1Eq7pliDMTwYXF
paDnGW4E0AkvBiXFZEIqleTZX/GnVW/AG+I6zHuFt58OTo6vtkYrA8JK4mL8
b/4P68iqpkLxnXxMYYYFOCLEqXWLcd4kDhg0FPEuZ63BR5zlBp/Wc+bESeJL
Yr+Sl7LED8QhuUXXWni1uKZ8zlBfh6pn0hR7yHuRxAyCyFCcgwgB80hgCtP/
1IzVayZRAsMGDBSgIQ+LOgikMBShEiegQ8EIQsRRRMhjfNe/d9jUWDcQ36en
Hpva8h1Q7gO6dpra0At9ZxY4P2OSIX1v1lF1mblYtMHeMuDes+3XecAzDNRu
bfutbNu1Q6DtHqhUPwB2CHFR
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{680.09765625, Automatic},
  ImageSizeRaw->{794., 879.},
  PlotRange->{{0, 794.}, {0, 879.}}]], "Input",
 TaggingRules->{},
 CellID->348595089,ExpressionUUID->"cf5bc080-dfc7-46a4-83a0-86276cf61216"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "faad6d1b-fe0d-46cf-80eb-b71e5d07cebe"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"d68b9768-dfc6-46b3-9337-948185157ce3"],

Cell["A paragraph that describes your paclet in more detail.", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"54a9929f-fd6f-4ee2-8f53-392bea76fb2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "26e99330-f6d0-4060-9fc8-4ce1d8dfd790"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"cce50126-92fc-4b56-9604-6d0f1bfe9f22"],

Cell[TextData[StyleBox["This package provides functions for making a call \
graph between the functions that belong to specified contexts.",
 FontFamily->"JetBrains Mono",
 FontSize->16,
 FontColor->RGBColor[
  0.42745098039215684`, 0.42745098039215684`, 0.42745098039215684`],
 Background->None]], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.89359780373291*^9, 3.893597806264374*^9}},
 CellID->404986432,ExpressionUUID->"d12ee868-f3b3-4508-b1a8-6718b1c5b892"],

Cell[TextData[StyleBox["The main function CallGraph gives a graph with \
vertices that are functions names and edges that show\nwhich functions call \
which other functions.",
 FontFamily->"JetBrains Mono",
 FontSize->16,
 FontColor->RGBColor[
  0.42745098039215684`, 0.42745098039215684`, 0.42745098039215684`],
 Background->None]], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.8935978112899523`*^9, 3.893597840471839*^9}, 
   3.89359794405415*^9},
 CellID->1439229667,ExpressionUUID->"44322b45-6871-4dde-ae5e-bfc7cdebf460"],

Cell[TextData[StyleBox["With the default option values the graph vertices are \
labeled and have tooltips with function usage messages.",
 FontFamily->"JetBrains Mono",
 FontSize->16,
 FontColor->RGBColor[
  0.42745098039215684`, 0.42745098039215684`, 0.42745098039215684`],
 Background->None]], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.8935978112899523`*^9, 3.89359784775504*^9}},
 CellID->10122943,ExpressionUUID->"bdfdd60d-6288-4c96-8ee4-53eaba6e2237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "385f3379-1576-4c41-a023-a0581654648b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"bc3b70e4-418f-42a5-b8a2-cd7fcbbbc62d"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Guides/Callgraphscreation.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"d1cbe109-4618-43c3-9d5c-1b41574acd3f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f25d23af-07f8-4838-b26c-6926335b5ed4"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"604399c1-1020-49fc-af8b-5b0ebdbe9012"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bef6f6f8-9343-4e31-a7fd-395eba6e91d0"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"1f782eac-07c2-466e-9b4a-07a87ff85076"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"2c2d801d-5476-47d2-a5a3-d0912b039b68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<AntonAntonov`CallGraph`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->172764492,ExpressionUUID->"0637fe44-83b9-48e6-8d36-e6ae0f97a02d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"5476620f-e675-41b5-a907-b3f3d8b0f4a5"],

Cell["Get a paclet:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.893595286721758*^9, 3.8935952906597633`*^9}},
 CellID->259087600,ExpressionUUID->"3feb7bf8-4bee-4c86-9011-76183bfe5400"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletInstall", "[", "\"\<AntonAntonov/SSparseMatrix\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<AntonAntonov`SSparseMatrix`\>\"", "]"}], 
  ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.893595295081463*^9, 3.8935953062193003`*^9}, {
  3.893595602063139*^9, 3.89359561448881*^9}, {3.893596924101139*^9, 
  3.893596965920355*^9}, {3.8935970200118513`*^9, 3.893597043646388*^9}, {
  3.893597104528254*^9, 3.893597109538884*^9}},
 CellLabel->"In[92]:=",
 CellID->1833592432,ExpressionUUID->"5e44f29e-7ebb-49fc-9cb5-de4ec6ba3216"],

Cell["Generate a call graph with usage tooltips:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.893595236116457*^9, 3.8935952387630444`*^9}},
 CellID->2043478365,ExpressionUUID->"44a1b4b6-6eca-4c22-bf0c-bc06ebcff33b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallGraph", "[", 
  RowBox[{"\"\<AntonAntonov`SSparseMatrix`\>\"", ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.893595240790934*^9, 3.893595279534604*^9}, {
  3.893595320844528*^9, 3.8935953392917423`*^9}, {3.893595619217243*^9, 
  3.893595620232445*^9}, {3.893595837286998*^9, 3.893595838095356*^9}, {
  3.893595965241661*^9, 3.893595997519672*^9}, {3.8935969439957*^9, 
  3.893596967508239*^9}, {3.8935970309667797`*^9, 3.8935970394708567`*^9}, {
  3.893597110606945*^9, 3.893597123982687*^9}},
 CellLabel->"In[96]:=",
 CellID->1605577879,ExpressionUUID->"5e5fd0a5-b478-4926-b133-2f95f8aa7607"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Tooltip[AntonAntonov`SSparseMatrix`ColumnAssociations, 
        Style[
         Row[{
           Style["ColumnAssociations", Italic, Bold], ": ", 
           "RowAssociations[smat] converts into an associations each column \
of smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
        Style[
         Row[{
           Style["SSparseMatrixToTriplets", Italic, Bold], ": ", 
           "Gives the long form of a SSparseMatrix."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnBind, 
        Style[
         Row[{
           Style["ColumnBind", Italic, Bold], ": ", 
           "Binds SSparseMatrix objects column-wise."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnNames, 
        Style[
         Row[{
           Style["ColumnNames", Italic, Bold], ": ", 
           "Gives the column names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
        Style[
         Row[{
           Style["ColumnNamesAssociation", Italic, Bold], ": ", 
           "Gives the column names association of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`DimensionNames, 
        Style[
         Row[{
           Style["DimensionNames", Italic, Bold], ": ", 
           "Gives the dimension names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowNames, 
        Style[
         Row[{
           Style["RowNames", Italic, Bold], ": ", 
           "Gives the row names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
        Style[
         Row[{
           Style["ToSSparseMatrix", Italic, Bold], ": ", 
           "Converts several types of objects into SSparseMatrix objects. \
(SparseArray, Dataset, CrossTable results.)"}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
        Style[
         Row[{
           Style["ColumnMaxesAssociation", Italic, Bold], ": ", 
           "Gives an Association of the maximums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMaxes, 
        Style[
         Row[{
           Style["ColumnMaxes", Italic, Bold], ": ", 
           "Gives the maximums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
        Style[
         Row[{
           Style["ColumnMinsAssociation", Italic, Bold], ": ", 
           "Gives an Association of the minimums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMins, 
        Style[
         Row[{
           Style["ColumnMins", Italic, Bold], ": ", 
           "Gives the minimums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
        Style[
         Row[{
           Style["ColumnSumsAssociation", Italic, Bold], ": ", 
           "Gives an Association of the sums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnSums, 
        Style[
         Row[{
           Style["ColumnSums", Italic, Bold], ": ", 
           "Gives the sums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
        Style[
         Row[{
           Style["ImposeColumnNames", Italic, Bold], ": ", 
           "ImposeColumnNames[smat,cn] imposes the column names cn into the \
SSparseMatrix smat. In effect makes an union of cn and ColumnNames[smat]."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ImposeRowNames, 
        Style[
         Row[{
           Style["ImposeRowNames", Italic, Bold], ": ", 
           "ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat]."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnsCount, 
        Style[
         Row[{
           Style["ColumnsCount", Italic, Bold], ": ", 
           "Gives the number of columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
        Style[
         Row[{
           Style["RowNamesAssociation", Italic, Bold], ": ", 
           "Gives the row names association of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
        Style[
         Row[{
           Style["MakeSSparseMatrix", Italic, Bold], ": ", 
           "Makes a sparse matrix with named rows and columns."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowAssociations, 
        Style[
         Row[{
           Style["RowAssociations", Italic, Bold], ": ", 
           "RowAssociations[smat] converts into an associations each row of \
smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowBind, 
        Style[
         Row[{
           Style["RowBind", Italic, Bold], ": ", 
           "Binds SSparseMatrix objects row-wise."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
        Style[
         Row[{
           Style["RowMaxesAssociation", Italic, Bold], ": ", 
           "Gives an Association the maximums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMaxes, 
        Style[
         Row[{
           Style["RowMaxes", Italic, Bold], ": ", 
           "Gives the maximums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
        Style[
         Row[{
           Style["RowMinsAssociation", Italic, Bold], ": ", 
           "Gives an Association the minimums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMins, 
        Style[
         Row[{
           Style["RowMins", Italic, Bold], ": ", 
           "Gives the minimums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
        Style[
         Row[{
           Style["RowSumsAssociation", Italic, Bold], ": ", 
           "Gives an Association the sums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowSums, 
        Style[
         Row[{
           Style["RowSums", Italic, Bold], ": ", 
           "Gives the sums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetColumnNames, 
        Style[
         Row[{
           Style["SetColumnNames", Italic, Bold], ": ", 
           "Sets column names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrix, 
        Style[
         Row[{
           Style["SSparseMatrix", Italic, Bold], ": ", 
           "Head of a sparse matrix with named rows and columns."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetDimensionNames, 
        Style[
         Row[{
           Style["SetDimensionNames", Italic, Bold], ": ", 
           "Sets dimension names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetRowNames, 
        Style[
         Row[{
           Style["SetRowNames", Italic, Bold], ": ", 
           "Sets row names of a SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
        Style[
         Row[{
           Style["SSparseMatrixAssociation", Italic, Bold], ": ", 
           "SSparseMatrixAssociation[smat] gives the association \
corresponding to smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
        Style[
         Row[{
           Style["SSparseMatrixImportFromDirectory", Italic, Bold], ": ", 
           "SSparseMatrixImportFromDirectory[dirName, opts___] imports and \
SSparseMatrix from a directory."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
        Style[
         Row[{
           Style["SSparseMatrixQ", Italic, Bold], ": ", 
           "Predicate is the argument a SSparseMatrix object."}], 
         "Subsubsection"]]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 
       8}, {9, 10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15, 16}, {
       16, 4}, {16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {21, 4}, {21, 
       6}, {21, 7}, {21, 8}, {22, 23}, {22, 7}, {24, 25}, {24, 7}, {26, 7}, {
       26, 27}, {28, 6}, {28, 7}, {28, 29}, {28, 8}, {30, 4}, {30, 7}, {30, 
       29}, {30, 8}, {31, 4}, {31, 6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {
       34, 29}, {2, 4}, {2, 7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, 
       Null}, {ImageSize -> Large, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01983683664364893], 
        ArrowBox[{{2.098596133658951, 0.4159890459798281}, {2.809025571490438,
          1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{2.809025571490438, 1.064713718145001}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{2.809025571490438, 1.064713718145001}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.476534811658428, 1.1874047637995069`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[
         BezierCurveBox[{{3.4826345863026793`, 2.9263641168534766`}, {
          3.290179032206237, 3.440770554937859}, {3.44062489053875, 
          3.968993204542845}}], 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{4.681659276896257, 0.8575336905899205}, {4.069957385967567,
          2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{4.681659276896257, 0.8575336905899205}, {5.152749600705468,
          0.}}, 0.050019023719388794`], 
        ArrowBox[{{5.344415626560345, 1.9310574635932791`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{5.344415626560345, 1.9310574635932791`}, {
         6.303805467819281, 1.8496679766387252`}}, 0.050019023719388794`], 
        ArrowBox[{{5.177769202059523, 1.3193975706269776`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{5.177769202059523, 1.3193975706269776`}, {6.02694496987392,
          0.8135558743491125}}, 0.050019023719388794`], 
        ArrowBox[{{5.762610632345547, 3.3614884111001464`}, {
         4.802014883958497, 3.193838878522889}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {5.25052723283582, 
         4.083804415804882}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {5.623766772377671, 
         3.8059105154981436`}}, 0.050019023719388794`], 
        ArrowBox[
         BezierCurveBox[{{3.44062489053875, 3.968993204542845}, {
          3.6330804446351648`, 3.454586766458485}, {3.4826345863026793`, 
          2.9263641168534766`}}], 0.050019023719388794`], 
        ArrowBox[{{2.4435946375250364`, 0.10395774181752504`}, {
         2.809025571490438, 1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {3.361969499097381, 
         2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{1.108714104405058, 1.6984183613967714`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{1.108714104405058, 1.6984183613967714`}, {
         0.23758346656521567`, 1.289983501703016}}, 0.050019023719388794`], 
        ArrowBox[{{1.2079438127224043`, 3.0546751803008267`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{1.2079438127224043`, 3.0546751803008267`}, {
         0.44058003396185796`, 3.62930024300126}}, 0.050019023719388794`], 
        ArrowBox[{{0.9688512495384987, 2.3867365311748405`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{0.9688512495384987, 2.3867365311748405`}, {0., 
         2.4693751984582306`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{2.9057188810843972`, 0.09257894978146197}, {
         2.809025571490438, 1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{3.9321091975980185`, 3.8215848253280393`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{2.745327149486676, 4.450007447840743}, {
         3.0911177477664338`, 3.4683745531430477`}}, 
         0.050019023719388794`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.098596133658951, 0.4159890459798281}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnAssociations",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnAssociations\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"RowAssociations[smat] converts into an associations each \
column of smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnAssociations", Italic, Bold], ": ", 
               "RowAssociations[smat] converts into an associations each \
column of smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.14861515737834, 0.46600806969921693}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.809025571490438, 1.064713718145001}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixToTriplets",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixToTriplets\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the long form of a SSparseMatrix.\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixToTriplets", Italic, Bold], ": ", 
               "Gives the long form of a SSparseMatrix."}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.859044595209827, 1.1147327418643898}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2786993353474583, 2.0154180047109134}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnBind",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnBind\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Binds SSparseMatrix objects column-wise.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnBind", Italic, Bold], ": ", 
               "Binds SSparseMatrix objects column-wise."}], "Subsubsection"],
             "Tooltip"]& ], 
          Offset[{2, 2}, {3.328718359066847, 2.0654370284303023}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.069957385967567, 2.0149231125851066}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the column names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnNames", Italic, Bold], ": ", 
               "Gives the column names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.119976409686956, 2.0649421363044955}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.476534811658428, 1.1874047637995069}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnNamesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnNamesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the column names association of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnNamesAssociation", Italic, Bold], ": ", 
               "Gives the column names association of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.526553835377817, 1.2374237875188956}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.361969499097381, 2.6177213566064133}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["DimensionNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"DimensionNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the dimension names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["DimensionNames", Italic, Bold], ": ", 
               "Gives the dimension names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.41198852281677, 2.667740380325802}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2690286059463483, 2.2909213146803604}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowNames",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the row names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowNames", Italic, Bold], ": ", 
               "Gives the row names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.319047629665737, 2.3409403383997494}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4826345863026793, 2.9263641168534766}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ToSSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ToSSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Converts several types of objects into SSparseMatrix \
objects. (SparseArray, Dataset, CrossTable results.)\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ToSSparseMatrix", Italic, Bold], ": ", 
               "Converts several types of objects into SSparseMatrix objects. \
(SparseArray, Dataset, CrossTable results.)"}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.5326536100220682, 2.9763831405728656}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.681659276896257, 0.8575336905899205}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMaxesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMaxesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the maximums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMaxesAssociation", Italic, Bold], ": ", 
               "Gives an Association of the maximums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.731678300615646, 0.9075527143093093}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.152749600705468, 0.}, 0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMaxes",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMaxes\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the maximums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMaxes", Italic, Bold], ": ", 
               "Gives the maximums of the columns of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.2027686244248565, 0.050019023719388794}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.344415626560345, 1.9310574635932791}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMinsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMinsAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the minimums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMinsAssociation", Italic, Bold], ": ", 
               "Gives an Association of the minimums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.394434650279734, 1.9810764873126678}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.303805467819281, 1.8496679766387252}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMins",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMins\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the minimums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMins", Italic, Bold], ": ", 
               "Gives the minimums of the columns of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.35382449153867, 1.8996870003581139}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.177769202059523, 1.3193975706269776}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnSumsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnSumsAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the sums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnSumsAssociation", Italic, Bold], ": ", 
               "Gives an Association of the sums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.227788225778912, 1.3694165943463663}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.02694496987392, 0.8135558743491125}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnSums",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnSums\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the sums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnSums", Italic, Bold], ": ", 
               "Gives the sums of the columns of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.076963993593309, 0.8635748980685013}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.762610632345547, 3.3614884111001464}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ImposeColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ImposeColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"ImposeColumnNames[smat,cn] imposes the column names cn into \
the SSparseMatrix smat. In effect makes an union of cn and ColumnNames[smat].\
\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ImposeColumnNames", Italic, Bold], ": ", 
               "ImposeColumnNames[smat,cn] imposes the column names cn into \
the SSparseMatrix smat. In effect makes an union of cn and \
ColumnNames[smat]."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.812629656064936, 3.4115074348195353}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.802014883958497, 3.193838878522889}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ImposeRowNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ImposeRowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat].\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ImposeRowNames", Italic, Bold], ": ", 
               "ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat]."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.852033907677886, 3.243857902242278}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.25052723283582, 4.083804415804882}, 0.050019023719388794],
          InsetBox[
          TagBox[
           TooltipBox["ColumnsCount",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnsCount\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the number of columns of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnsCount", Italic, Bold], ": ", 
               "Gives the number of columns of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.300546256555209, 4.133823439524271}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.623766772377671, 3.8059105154981436}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowNamesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowNamesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the row names association of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowNamesAssociation", Italic, Bold], ": ", 
               "Gives the row names association of a SSparseMatrix object."}],
              "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.67378579609706, 3.8559295392175326}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.44062489053875, 3.968993204542845}, 0.050019023719388794],
          InsetBox[
          TagBox[
           TooltipBox["MakeSSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"MakeSSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Makes a sparse matrix with named rows and columns.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["MakeSSparseMatrix", Italic, Bold], ": ", 
               "Makes a sparse matrix with named rows and columns."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.490643914258139, 4.019012228262234}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4435946375250364, 0.10395774181752504}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowAssociations",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowAssociations\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"RowAssociations[smat] converts into an associations each \
row of smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowAssociations", Italic, Bold], ": ", 
               "RowAssociations[smat] converts into an associations each row \
of smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.4936136612444253, 0.15397676553691383}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.165338695090578, 2.276839111990971}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowBind",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowBind\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Binds SSparseMatrix objects row-wise.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowBind", Italic, Bold], ": ", 
               "Binds SSparseMatrix objects row-wise."}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.215357718809967, 2.32685813571036}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.108714104405058, 1.6984183613967714}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMaxesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowMaxesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association the maximums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMaxesAssociation", Italic, Bold], ": ", 
               "Gives an Association the maximums of the rows of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.1587331281244466, 1.74843738511616}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.23758346656521567, 1.289983501703016}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMaxes",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowMaxes\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the maximums of the rows of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMaxes", Italic, Bold], ": ", 
               "Gives the maximums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.2876024902846045, 1.3400025254224046}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2079438127224043, 3.0546751803008267}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMinsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowMinsAssociation\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"Gives an Association the minimums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMinsAssociation", Italic, Bold], ": ", 
               "Gives an Association the minimums of the rows of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.257962836441793, 3.1046942040202157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.44058003396185796, 3.62930024300126}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMins",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowMins\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the minimums of the rows of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMins", Italic, Bold], ": ", 
               "Gives the minimums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.4905990576812468, 3.679319266720649}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9688512495384987, 2.3867365311748405}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowSumsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowSumsAssociation\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"Gives an Association the sums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowSumsAssociation", Italic, Bold], ": ", 
               "Gives an Association the sums of the rows of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.0188702732578874, 2.4367555548942295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.4693751984582306}, 0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowSums",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowSums\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the sums of the rows of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowSums", Italic, Bold], ": ", 
               "Gives the sums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.050019023719388794, 2.5193942221776195}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7413954282858577, 2.9709975763655674}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Sets column names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetColumnNames", Italic, Bold], ": ", 
               "Sets column names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.7914144520052466, 3.0210166000849563}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0911177477664338, 3.4683745531430477}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Head of a sparse matrix with named rows and columns.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrix", Italic, Bold], ": ", 
               "Head of a sparse matrix with named rows and columns."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.1411367714858227, 3.5183935768624366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0767124355485485, 2.6382572083523232}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetDimensionNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetDimensionNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Sets dimension names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetDimensionNames", Italic, Bold], ": ", 
               "Sets dimension names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.1267314592679374, 2.688276232071712}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8254676935194794, 2.8821980966098866}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetRowNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetRowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Sets row names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetRowNames", Italic, Bold], ": ", 
               "Sets row names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.8754867172388683, 2.9322171203292755}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.9057188810843972, 0.09257894978146197}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"SSparseMatrixAssociation[smat] gives the association \
corresponding to smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixAssociation", Italic, Bold], ": ", 
               "SSparseMatrixAssociation[smat] gives the association \
corresponding to smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.955737904803786, 0.14259797350085077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9321091975980185, 3.8215848253280393}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixImportFromDirectory",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixImportFromDirectory\"", Italic, Bold, 
                StripOnInput -> False], "\": \"", 
               "\"SSparseMatrixImportFromDirectory[dirName, opts___] imports \
and SSparseMatrix from a directory.\""}, "RowDefault"], "Subsubsection", 
             StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixImportFromDirectory", Italic, Bold], ": ", 
               "SSparseMatrixImportFromDirectory[dirName, opts___] imports \
and SSparseMatrix from a directory."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.9821282213174074, 3.8716038490474283}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.745327149486676, 4.450007447840743}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixQ",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixQ\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Predicate is the argument a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixQ", Italic, Bold], ": ", 
               "Predicate is the argument a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.795346173206065, 4.500026471560132}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.893597119356587*^9, 3.893597124400704*^9}},
 CellLabel->"Out[96]=",
 CellID->2015555164,ExpressionUUID->"a452dd85-3c28-407c-886a-7c75c8c24a37"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"d1d8830b-fd5b-48a5-a657-cb93cf6f2bca"],

Cell["Generate a call graph with exclusions:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.893595793705934*^9, 3.893595794905319*^9}},
 CellID->2143884194,ExpressionUUID->"2b04bd6b-7b79-4e42-a03f-c14d475f70a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallGraph", "[", 
  RowBox[{"\"\<AntonAntonov`SSparseMatrix`\>\"", ",", 
   RowBox[{"Exclusions", "->", 
    RowBox[{"{", 
     RowBox[{"$TrieRoot", ",", "$TrieValue"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "->", "1000"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8935957985068617`*^9, 3.893595831414427*^9}, {
   3.893596104845788*^9, 3.8935961052840242`*^9}, 3.893597140847616*^9},
 CellLabel->"In[97]:=",
 CellID->205331268,ExpressionUUID->"bf4f375a-eb44-4b5b-b940-aa3a0e082bfb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Tooltip[AntonAntonov`SSparseMatrix`ColumnAssociations, 
        Style[
         Row[{
           Style["ColumnAssociations", Italic, Bold], ": ", 
           "RowAssociations[smat] converts into an associations each column \
of smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
        Style[
         Row[{
           Style["SSparseMatrixToTriplets", Italic, Bold], ": ", 
           "Gives the long form of a SSparseMatrix."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnBind, 
        Style[
         Row[{
           Style["ColumnBind", Italic, Bold], ": ", 
           "Binds SSparseMatrix objects column-wise."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnNames, 
        Style[
         Row[{
           Style["ColumnNames", Italic, Bold], ": ", 
           "Gives the column names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
        Style[
         Row[{
           Style["ColumnNamesAssociation", Italic, Bold], ": ", 
           "Gives the column names association of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`DimensionNames, 
        Style[
         Row[{
           Style["DimensionNames", Italic, Bold], ": ", 
           "Gives the dimension names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowNames, 
        Style[
         Row[{
           Style["RowNames", Italic, Bold], ": ", 
           "Gives the row names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
        Style[
         Row[{
           Style["ToSSparseMatrix", Italic, Bold], ": ", 
           "Converts several types of objects into SSparseMatrix objects. \
(SparseArray, Dataset, CrossTable results.)"}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
        Style[
         Row[{
           Style["ColumnMaxesAssociation", Italic, Bold], ": ", 
           "Gives an Association of the maximums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMaxes, 
        Style[
         Row[{
           Style["ColumnMaxes", Italic, Bold], ": ", 
           "Gives the maximums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
        Style[
         Row[{
           Style["ColumnMinsAssociation", Italic, Bold], ": ", 
           "Gives an Association of the minimums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnMins, 
        Style[
         Row[{
           Style["ColumnMins", Italic, Bold], ": ", 
           "Gives the minimums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
        Style[
         Row[{
           Style["ColumnSumsAssociation", Italic, Bold], ": ", 
           "Gives an Association of the sums of the columns of a \
SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnSums, 
        Style[
         Row[{
           Style["ColumnSums", Italic, Bold], ": ", 
           "Gives the sums of the columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
        Style[
         Row[{
           Style["ImposeColumnNames", Italic, Bold], ": ", 
           "ImposeColumnNames[smat,cn] imposes the column names cn into the \
SSparseMatrix smat. In effect makes an union of cn and ColumnNames[smat]."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ImposeRowNames, 
        Style[
         Row[{
           Style["ImposeRowNames", Italic, Bold], ": ", 
           "ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat]."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`ColumnsCount, 
        Style[
         Row[{
           Style["ColumnsCount", Italic, Bold], ": ", 
           "Gives the number of columns of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
        Style[
         Row[{
           Style["RowNamesAssociation", Italic, Bold], ": ", 
           "Gives the row names association of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
        Style[
         Row[{
           Style["MakeSSparseMatrix", Italic, Bold], ": ", 
           "Makes a sparse matrix with named rows and columns."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowAssociations, 
        Style[
         Row[{
           Style["RowAssociations", Italic, Bold], ": ", 
           "RowAssociations[smat] converts into an associations each row of \
smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowBind, 
        Style[
         Row[{
           Style["RowBind", Italic, Bold], ": ", 
           "Binds SSparseMatrix objects row-wise."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
        Style[
         Row[{
           Style["RowMaxesAssociation", Italic, Bold], ": ", 
           "Gives an Association the maximums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMaxes, 
        Style[
         Row[{
           Style["RowMaxes", Italic, Bold], ": ", 
           "Gives the maximums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
        Style[
         Row[{
           Style["RowMinsAssociation", Italic, Bold], ": ", 
           "Gives an Association the minimums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowMins, 
        Style[
         Row[{
           Style["RowMins", Italic, Bold], ": ", 
           "Gives the minimums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
        Style[
         Row[{
           Style["RowSumsAssociation", Italic, Bold], ": ", 
           "Gives an Association the sums of the rows of a SSparseMatrix \
object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`RowSums, 
        Style[
         Row[{
           Style["RowSums", Italic, Bold], ": ", 
           "Gives the sums of the rows of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetColumnNames, 
        Style[
         Row[{
           Style["SetColumnNames", Italic, Bold], ": ", 
           "Sets column names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrix, 
        Style[
         Row[{
           Style["SSparseMatrix", Italic, Bold], ": ", 
           "Head of a sparse matrix with named rows and columns."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetDimensionNames, 
        Style[
         Row[{
           Style["SetDimensionNames", Italic, Bold], ": ", 
           "Sets dimension names of a SSparseMatrix object."}], 
         "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SetRowNames, 
        Style[
         Row[{
           Style["SetRowNames", Italic, Bold], ": ", 
           "Sets row names of a SSparseMatrix object."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
        Style[
         Row[{
           Style["SSparseMatrixAssociation", Italic, Bold], ": ", 
           "SSparseMatrixAssociation[smat] gives the association \
corresponding to smat."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
        Style[
         Row[{
           Style["SSparseMatrixImportFromDirectory", Italic, Bold], ": ", 
           "SSparseMatrixImportFromDirectory[dirName, opts___] imports and \
SSparseMatrix from a directory."}], "Subsubsection"]], 
       Tooltip[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
        Style[
         Row[{
           Style["SSparseMatrixQ", Italic, Bold], ": ", 
           "Predicate is the argument a SSparseMatrix object."}], 
         "Subsubsection"]]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 
       8}, {9, 10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15, 16}, {
       16, 4}, {16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {21, 4}, {21, 
       6}, {21, 7}, {21, 8}, {22, 23}, {22, 7}, {24, 25}, {24, 7}, {26, 7}, {
       26, 27}, {28, 6}, {28, 7}, {28, 29}, {28, 8}, {30, 4}, {30, 7}, {30, 
       29}, {30, 8}, {31, 4}, {31, 6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {
       34, 29}, {2, 4}, {2, 7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, 
       Null}, {ImageSize -> 1000, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01983683664364893], 
        ArrowBox[{{2.098596133658951, 0.4159890459798281}, {2.809025571490438,
          1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{2.809025571490438, 1.064713718145001}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{2.809025571490438, 1.064713718145001}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.476534811658428, 1.1874047637995069`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.2786993353474583`, 2.0154180047109134`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[
         BezierCurveBox[{{3.4826345863026793`, 2.9263641168534766`}, {
          3.290179032206237, 3.440770554937859}, {3.44062489053875, 
          3.968993204542845}}], 0.050019023719388794`], 
        ArrowBox[{{3.4826345863026793`, 2.9263641168534766`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{4.681659276896257, 0.8575336905899205}, {4.069957385967567,
          2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{4.681659276896257, 0.8575336905899205}, {5.152749600705468,
          0.}}, 0.050019023719388794`], 
        ArrowBox[{{5.344415626560345, 1.9310574635932791`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{5.344415626560345, 1.9310574635932791`}, {
         6.303805467819281, 1.8496679766387252`}}, 0.050019023719388794`], 
        ArrowBox[{{5.177769202059523, 1.3193975706269776`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{5.177769202059523, 1.3193975706269776`}, {6.02694496987392,
          0.8135558743491125}}, 0.050019023719388794`], 
        ArrowBox[{{5.762610632345547, 3.3614884111001464`}, {
         4.802014883958497, 3.193838878522889}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {5.25052723283582, 
         4.083804415804882}}, 0.050019023719388794`], 
        ArrowBox[{{4.802014883958497, 3.193838878522889}, {5.623766772377671, 
         3.8059105154981436`}}, 0.050019023719388794`], 
        ArrowBox[
         BezierCurveBox[{{3.44062489053875, 3.968993204542845}, {
          3.6330804446351648`, 3.454586766458485}, {3.4826345863026793`, 
          2.9263641168534766`}}], 0.050019023719388794`], 
        ArrowBox[{{2.4435946375250364`, 0.10395774181752504`}, {
         2.809025571490438, 1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {4.069957385967567, 
         2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {3.361969499097381, 
         2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.165338695090578, 2.276839111990971}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{1.108714104405058, 1.6984183613967714`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{1.108714104405058, 1.6984183613967714`}, {
         0.23758346656521567`, 1.289983501703016}}, 0.050019023719388794`], 
        ArrowBox[{{1.2079438127224043`, 3.0546751803008267`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{1.2079438127224043`, 3.0546751803008267`}, {
         0.44058003396185796`, 3.62930024300126}}, 0.050019023719388794`], 
        ArrowBox[{{0.9688512495384987, 2.3867365311748405`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{0.9688512495384987, 2.3867365311748405`}, {0., 
         2.4693751984582306`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{2.7413954282858577`, 2.9709975763655674`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         2.2690286059463483`, 2.2909213146803604`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.0767124355485485`, 2.6382572083523232`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         4.069957385967567, 2.0149231125851066`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.361969499097381, 2.6177213566064133`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{3.8254676935194794`, 2.8821980966098866`}, {
         3.0911177477664338`, 3.4683745531430477`}}, 0.050019023719388794`], 
        ArrowBox[{{2.9057188810843972`, 0.09257894978146197}, {
         2.809025571490438, 1.064713718145001}}, 0.050019023719388794`], 
        ArrowBox[{{3.9321091975980185`, 3.8215848253280393`}, {
         3.4826345863026793`, 2.9263641168534766`}}, 0.050019023719388794`], 
        ArrowBox[{{2.745327149486676, 4.450007447840743}, {
         3.0911177477664338`, 3.4683745531430477`}}, 
         0.050019023719388794`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.098596133658951, 0.4159890459798281}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnAssociations",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnAssociations\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"RowAssociations[smat] converts into an associations each \
column of smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnAssociations", Italic, Bold], ": ", 
               "RowAssociations[smat] converts into an associations each \
column of smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.14861515737834, 0.46600806969921693}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.809025571490438, 1.064713718145001}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixToTriplets",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixToTriplets\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the long form of a SSparseMatrix.\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixToTriplets", Italic, Bold], ": ", 
               "Gives the long form of a SSparseMatrix."}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.859044595209827, 1.1147327418643898}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2786993353474583, 2.0154180047109134}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnBind",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnBind\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Binds SSparseMatrix objects column-wise.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnBind", Italic, Bold], ": ", 
               "Binds SSparseMatrix objects column-wise."}], "Subsubsection"],
             "Tooltip"]& ], 
          Offset[{2, 2}, {3.328718359066847, 2.0654370284303023}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.069957385967567, 2.0149231125851066}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the column names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnNames", Italic, Bold], ": ", 
               "Gives the column names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.119976409686956, 2.0649421363044955}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.476534811658428, 1.1874047637995069}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnNamesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnNamesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the column names association of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnNamesAssociation", Italic, Bold], ": ", 
               "Gives the column names association of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.526553835377817, 1.2374237875188956}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.361969499097381, 2.6177213566064133}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["DimensionNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"DimensionNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the dimension names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["DimensionNames", Italic, Bold], ": ", 
               "Gives the dimension names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.41198852281677, 2.667740380325802}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2690286059463483, 2.2909213146803604}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowNames",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the row names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowNames", Italic, Bold], ": ", 
               "Gives the row names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.319047629665737, 2.3409403383997494}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4826345863026793, 2.9263641168534766}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ToSSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ToSSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Converts several types of objects into SSparseMatrix \
objects. (SparseArray, Dataset, CrossTable results.)\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ToSSparseMatrix", Italic, Bold], ": ", 
               "Converts several types of objects into SSparseMatrix objects. \
(SparseArray, Dataset, CrossTable results.)"}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.5326536100220682, 2.9763831405728656}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.681659276896257, 0.8575336905899205}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMaxesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMaxesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the maximums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMaxesAssociation", Italic, Bold], ": ", 
               "Gives an Association of the maximums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.731678300615646, 0.9075527143093093}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.152749600705468, 0.}, 0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMaxes",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMaxes\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the maximums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMaxes", Italic, Bold], ": ", 
               "Gives the maximums of the columns of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.2027686244248565, 0.050019023719388794}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.344415626560345, 1.9310574635932791}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMinsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMinsAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the minimums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMinsAssociation", Italic, Bold], ": ", 
               "Gives an Association of the minimums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.394434650279734, 1.9810764873126678}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.303805467819281, 1.8496679766387252}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnMins",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnMins\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the minimums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnMins", Italic, Bold], ": ", 
               "Gives the minimums of the columns of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.35382449153867, 1.8996870003581139}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.177769202059523, 1.3193975706269776}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnSumsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnSumsAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association of the sums of the columns of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnSumsAssociation", Italic, Bold], ": ", 
               "Gives an Association of the sums of the columns of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.227788225778912, 1.3694165943463663}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.02694496987392, 0.8135558743491125}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ColumnSums",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnSums\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the sums of the columns of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnSums", Italic, Bold], ": ", 
               "Gives the sums of the columns of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.076963993593309, 0.8635748980685013}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.762610632345547, 3.3614884111001464}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ImposeColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ImposeColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"ImposeColumnNames[smat,cn] imposes the column names cn into \
the SSparseMatrix smat. In effect makes an union of cn and ColumnNames[smat].\
\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ImposeColumnNames", Italic, Bold], ": ", 
               "ImposeColumnNames[smat,cn] imposes the column names cn into \
the SSparseMatrix smat. In effect makes an union of cn and \
ColumnNames[smat]."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.812629656064936, 3.4115074348195353}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.802014883958497, 3.193838878522889}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["ImposeRowNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ImposeRowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat].\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ImposeRowNames", Italic, Bold], ": ", 
               "ImposeRowNames[smat,rn] imposes the row names rn into the \
SSparseMatrix smat. In effect makes an union of rn and RowNames[smat]."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.852033907677886, 3.243857902242278}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.25052723283582, 4.083804415804882}, 0.050019023719388794],
          InsetBox[
          TagBox[
           TooltipBox["ColumnsCount",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ColumnsCount\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the number of columns of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ColumnsCount", Italic, Bold], ": ", 
               "Gives the number of columns of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.300546256555209, 4.133823439524271}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.623766772377671, 3.8059105154981436}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowNamesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowNamesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives the row names association of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowNamesAssociation", Italic, Bold], ": ", 
               "Gives the row names association of a SSparseMatrix object."}],
              "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {5.67378579609706, 3.8559295392175326}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.44062489053875, 3.968993204542845}, 0.050019023719388794],
          InsetBox[
          TagBox[
           TooltipBox["MakeSSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"MakeSSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Makes a sparse matrix with named rows and columns.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["MakeSSparseMatrix", Italic, Bold], ": ", 
               "Makes a sparse matrix with named rows and columns."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.490643914258139, 4.019012228262234}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4435946375250364, 0.10395774181752504}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowAssociations",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowAssociations\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"RowAssociations[smat] converts into an associations each \
row of smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowAssociations", Italic, Bold], ": ", 
               "RowAssociations[smat] converts into an associations each row \
of smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.4936136612444253, 0.15397676553691383}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.165338695090578, 2.276839111990971}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowBind",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowBind\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Binds SSparseMatrix objects row-wise.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowBind", Italic, Bold], ": ", 
               "Binds SSparseMatrix objects row-wise."}], "Subsubsection"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.215357718809967, 2.32685813571036}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.108714104405058, 1.6984183613967714}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMaxesAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowMaxesAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"Gives an Association the maximums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMaxesAssociation", Italic, Bold], ": ", 
               "Gives an Association the maximums of the rows of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.1587331281244466, 1.74843738511616}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.23758346656521567, 1.289983501703016}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMaxes",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowMaxes\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the maximums of the rows of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMaxes", Italic, Bold], ": ", 
               "Gives the maximums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.2876024902846045, 1.3400025254224046}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2079438127224043, 3.0546751803008267}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMinsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowMinsAssociation\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"Gives an Association the minimums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMinsAssociation", Italic, Bold], ": ", 
               "Gives an Association the minimums of the rows of a \
SSparseMatrix object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.257962836441793, 3.1046942040202157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.44058003396185796, 3.62930024300126}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowMins",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowMins\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the minimums of the rows of a SSparseMatrix \
object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowMins", Italic, Bold], ": ", 
               "Gives the minimums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.4905990576812468, 3.679319266720649}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9688512495384987, 2.3867365311748405}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowSumsAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"RowSumsAssociation\"", Italic, Bold, StripOnInput -> False],
                "\": \"", 
               "\"Gives an Association the sums of the rows of a \
SSparseMatrix object.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowSumsAssociation", Italic, Bold], ": ", 
               "Gives an Association the sums of the rows of a SSparseMatrix \
object."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.0188702732578874, 2.4367555548942295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.4693751984582306}, 0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["RowSums",
            StyleBox[
             TemplateBox[{
               StyleBox["\"RowSums\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Gives the sums of the rows of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["RowSums", Italic, Bold], ": ", 
               "Gives the sums of the rows of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.050019023719388794, 2.5193942221776195}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7413954282858577, 2.9709975763655674}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetColumnNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetColumnNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Sets column names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetColumnNames", Italic, Bold], ": ", 
               "Sets column names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.7914144520052466, 3.0210166000849563}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0911177477664338, 3.4683745531430477}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrix",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrix\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Head of a sparse matrix with named rows and columns.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrix", Italic, Bold], ": ", 
               "Head of a sparse matrix with named rows and columns."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.1411367714858227, 3.5183935768624366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0767124355485485, 2.6382572083523232}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetDimensionNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetDimensionNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Sets dimension names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetDimensionNames", Italic, Bold], ": ", 
               "Sets dimension names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.1267314592679374, 2.688276232071712}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8254676935194794, 2.8821980966098866}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SetRowNames",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SetRowNames\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", "\"Sets row names of a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SetRowNames", Italic, Bold], ": ", 
               "Sets row names of a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.8754867172388683, 2.9322171203292755}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.9057188810843972, 0.09257894978146197}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixAssociation",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixAssociation\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"SSparseMatrixAssociation[smat] gives the association \
corresponding to smat.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
             False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixAssociation", Italic, Bold], ": ", 
               "SSparseMatrixAssociation[smat] gives the association \
corresponding to smat."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.955737904803786, 0.14259797350085077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9321091975980185, 3.8215848253280393}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixImportFromDirectory",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixImportFromDirectory\"", Italic, Bold, 
                StripOnInput -> False], "\": \"", 
               "\"SSparseMatrixImportFromDirectory[dirName, opts___] imports \
and SSparseMatrix from a directory.\""}, "RowDefault"], "Subsubsection", 
             StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixImportFromDirectory", Italic, Bold], ": ", 
               "SSparseMatrixImportFromDirectory[dirName, opts___] imports \
and SSparseMatrix from a directory."}], "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.9821282213174074, 3.8716038490474283}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.745327149486676, 4.450007447840743}, 
          0.050019023719388794], InsetBox[
          TagBox[
           TooltipBox["SSparseMatrixQ",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SSparseMatrixQ\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Predicate is the argument a SSparseMatrix object.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SSparseMatrixQ", Italic, Bold], ": ", 
               "Predicate is the argument a SSparseMatrix object."}], 
             "Subsubsection"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.795346173206065, 4.500026471560132}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.893595815875515*^9, 3.893595832215846*^9}, 
   3.893596105899252*^9, 3.8935971413148327`*^9},
 CellLabel->"Out[97]=",
 CellID->206336749,ExpressionUUID->"74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1"]
}, Open  ]],

Cell["Generate call graph with buttons to print definitions:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.893596109662958*^9, 3.893596111954527*^9}},
 CellID->2026990104,ExpressionUUID->"337e4631-9bb4-4326-8116-0e12edf20caa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gr0", "=", 
   RowBox[{"CallGraph", "[", 
    RowBox[{"\"\<AntonAntonov`SSparseMatrix`\>\"", ",", 
     RowBox[{"\"\<UsageTooltips\>\"", "->", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"gr1", "=", 
  RowBox[{"CallGraphAddPrintDefinitionsButtons", "[", 
   RowBox[{"gr0", ",", 
    RowBox[{"GraphLayout", "->", "\"\<StarEmbedding\>\""}], ",", 
    RowBox[{"ImageSize", "->", "900"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8935961223643427`*^9, 3.893596138302362*^9}, 
   3.893597145325561*^9},
 CellLabel->"In[98]:=",
 CellID->1102177339,ExpressionUUID->"16b65e71-5e54-4287-ad30-62c460e96963"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Button[AntonAntonov`SSparseMatrix`ColumnAssociations, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnAssociations], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnBind, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnBind], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnNamesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`DimensionNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`DimensionNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`RowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ToSSparseMatrix], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMaxesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMaxes, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMaxes], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMinsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMins, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMins], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnSumsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnSums, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnSums], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ImposeColumnNames], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ImposeRowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ImposeRowNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`ColumnsCount, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnsCount], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowNamesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`MakeSSparseMatrix], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowAssociations, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowAssociations], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowBind, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowBind],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMaxesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMaxes, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMaxes], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMinsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMins, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowMins],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowSumsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowSums, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowSums],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetColumnNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`SSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrix], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetDimensionNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetDimensionNames], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetRowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetRowNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory], 
        Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixQ], Appearance -> 
        Frameless]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {9, 
       10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15, 16}, {16, 4}, {
       16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {21, 4}, {21, 6}, {21, 
       7}, {21, 8}, {22, 23}, {22, 7}, {24, 25}, {24, 7}, {26, 7}, {26, 27}, {
       28, 6}, {28, 7}, {28, 29}, {28, 8}, {30, 4}, {30, 7}, {30, 29}, {30, 
       8}, {31, 4}, {31, 6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {34, 29}, {
       2, 4}, {2, 7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, Null}, {
      GraphLayout -> "StarEmbedding", ImageSize -> 900, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.028273376243492937`], 
        ArrowBox[{{-0.18925124436041088`, 0.9819286972627068}, {0., 0.}}, 
         0.022593081678446286`], 
        ArrowBox[{{0., 0.}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{0., 0.}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.37166245566032813`, 
         0.9283679330160729}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.37166245566032813`, 
         0.9283679330160729}, {-0.6900790114821125, 0.7237340381050706}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.37166245566032813`, 
         0.9283679330160729}, {-0.8145759520503361, 0.5800569095711989}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.37166245566032813`, 
         0.9283679330160729}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.37166245566032813`, 
         0.9283679330160729}, {-0.9718115683235419, 0.23575893550942778`}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.9718115683235419, 
         0.23575893550942778`}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.9718115683235419, 
         0.23575893550942778`}, {-0.8145759520503361, 0.5800569095711989}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.9718115683235419, 
         0.23575893550942778`}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[
         BezierCurveBox[{{-0.9718115683235419, 
          0.23575893550942778`}, {-0.14849138873267315`, \
-0.1557332864833983}, {0.28173255684143034`, -0.9594929736144975}}], 
         0.022593081678446286`], 
        ArrowBox[{{-0.9718115683235419, 0.23575893550942778`}, {
         0.8145759520503355, 0.5800569095711972}}, 0.022593081678446286`], 
        ArrowBox[{{-0.998867339183008, 
         0.04758191582374313}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.998867339183008, 
         0.04758191582374313}, {-0.9898214418809327, -0.14231483827328406`}}, 
         0.022593081678446286`], 
        ArrowBox[{{-0.9450008187146683, -0.3270679633174208}, \
{-0.5406408174555981, 0.8412535328311816}}, 0.022593081678446286`], 
        ArrowBox[{{-0.9450008187146683, -0.3270679633174208}, \
{-0.8660254037844384, -0.4999999999999994}}, 0.022593081678446286`], 
        ArrowBox[{{-0.755749574354258, -0.6548607339452843}, \
{-0.5406408174555981, 0.8412535328311816}}, 0.022593081678446286`], 
        ArrowBox[{{-0.755749574354258, -0.6548607339452843}, \
{-0.6181589862206047, -0.7860530947427873}}, 0.022593081678446286`], 
        ArrowBox[{{-0.4582265217274101, -0.8888354486549229}, \
{-0.28173255684142917`, -0.9594929736144971}}, 0.022593081678446286`], 
        ArrowBox[{{-0.28173255684142917`, -0.9594929736144971}, \
{-0.5406408174555981, 0.8412535328311816}}, 0.022593081678446286`], 
        ArrowBox[{{-0.28173255684142917`, -0.9594929736144971}, \
{-0.9718115683235419, 0.23575893550942778`}}, 0.022593081678446286`], 
        ArrowBox[{{-0.28173255684142917`, -0.9594929736144971}, \
{-0.09505604330418237, -0.9954719225730846}}, 0.022593081678446286`], 
        ArrowBox[{{-0.28173255684142917`, -0.9594929736144971}, {
         0.09505604330418313, -0.9954719225730847}}, 0.022593081678446286`], 
        ArrowBox[
         BezierCurveBox[{{
          0.28173255684143034`, -0.9594929736144975}, {-0.54158762274944, \
-0.5680007516216703}, {-0.9718115683235419, 0.23575893550942778`}}], 
         0.022593081678446286`], 
        ArrowBox[{{0.45822652172741074`, -0.8888354486549239}, {0., 0.}}, 
         0.022593081678446286`], 
        ArrowBox[{{
         0.6181589862206057, -0.7860530947427881}, {-0.5406408174555981, 
         0.8412535328311816}}, 0.022593081678446286`], 
        ArrowBox[{{
         0.6181589862206057, -0.7860530947427881}, {-0.8145759520503361, 
         0.5800569095711989}}, 0.022593081678446286`], 
        ArrowBox[{{
         0.6181589862206057, -0.7860530947427881}, {-0.9096319953545187, 
         0.4154150130018871}}, 0.022593081678446286`], 
        ArrowBox[{{
         0.6181589862206057, -0.7860530947427881}, {-0.9718115683235419, 
         0.23575893550942778`}}, 0.022593081678446286`], 
        ArrowBox[{{
         0.7557495743542585, -0.6548607339452857}, {-0.9096319953545187, 
         0.4154150130018871}}, 0.022593081678446286`], 
        ArrowBox[{{0.7557495743542585, -0.6548607339452857}, {
         0.8660254037844389, -0.5000000000000012}}, 0.022593081678446286`], 
        ArrowBox[{{
         0.9450008187146686, -0.32706796331742277`}, {-0.9096319953545187, 
         0.4154150130018871}}, 0.022593081678446286`], 
        ArrowBox[{{0.9450008187146686, -0.32706796331742277`}, {
         0.9898214418809328, -0.14231483827328617`}}, 0.022593081678446286`], 
        ArrowBox[{{0.998867339183008, 
         0.04758191582374143}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.998867339183008, 0.04758191582374143}, {
         0.9718115683235415, 0.23575893550942656`}}, 0.022593081678446286`], 
        ArrowBox[{{0.9096319953545183, 
         0.41541501300188516`}, {-0.8145759520503361, 0.5800569095711989}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.9096319953545183, 
         0.41541501300188516`}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.9096319953545183, 
         0.41541501300188516`}, {-0.9718115683235419, 0.23575893550942778`}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.9096319953545183, 0.41541501300188516`}, {
         0.8145759520503355, 0.5800569095711972}}, 0.022593081678446286`], 
        ArrowBox[{{0.6900790114821117, 
         0.7237340381050694}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.6900790114821117, 
         0.7237340381050694}, {-0.9096319953545187, 0.4154150130018871}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.6900790114821117, 
         0.7237340381050694}, {-0.9718115683235419, 0.23575893550942778`}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.6900790114821117, 0.7237340381050694}, {
         0.8145759520503355, 0.5800569095711972}}, 0.022593081678446286`], 
        ArrowBox[{{0.5406408174555974, 
         0.8412535328311808}, {-0.5406408174555981, 0.8412535328311816}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.5406408174555974, 
         0.8412535328311808}, {-0.8145759520503361, 0.5800569095711989}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.5406408174555974, 
         0.8412535328311808}, {-0.9718115683235419, 0.23575893550942778`}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.5406408174555974, 0.8412535328311808}, {
         0.8145759520503355, 0.5800569095711972}}, 0.022593081678446286`], 
        ArrowBox[{{0.371662455660328, 0.928367933016072}, {0., 0.}}, 
         0.022593081678446286`], 
        ArrowBox[{{0.1892512443604097, 
         0.9819286972627065}, {-0.9718115683235419, 0.23575893550942778`}}, 
         0.022593081678446286`], 
        ArrowBox[{{1.8369701987210297`*^-16, 1.}, {0.8145759520503355, 
         0.5800569095711972}}, 0.022593081678446286`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.18925124436041088, 0.9819286972627068}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnAssociations",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnAssociations],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.1952373207106262, 1.0129874106262402}, 
          ImageScaled[{0.6419384332703083, -0.23644652294702984}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.022593081678446286], 
         InsetBox[
          ButtonBox["SSparseMatrixToTriplets",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.02182741605939556, -0.022891935130931452},
           ImageScaled[{1.017559258611584, 1.0428005285788027}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.37166245566032813, 0.9283679330160729}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnBind",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnBind],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.3467993491779612, 0.9479204960683997}, 
          ImageScaled[{-0.08953982105709068, 0.03638076033454618}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5406408174555981, 0.8412535328311816}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.5613542683256445, 0.8651581294377532}, 
          ImageScaled[{0.9911455504589635, -0.06681218076569406}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6900790114821125, 0.7237340381050706}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnNamesAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnNamesAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.7166881251734635, 0.7066333990986038}, 
          ImageScaled[{1.130940149623386, 0.9054806130916978}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8145759520503361, 0.5800569095711989}, 
          0.022593081678446286], InsetBox[
          ButtonBox["DimensionNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`DimensionNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.8394390585327031, 0.5996094726235257}, 
          ImageScaled[{1.0895398210570904, 0.03638076033454579}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9096319953545187, 0.4154150130018871}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.9362411090458697, 0.4325156520083539}, 
          ImageScaled[{1.130940149623386, 0.09451938690830186}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9718115683235419, 0.23575893550942778}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ToSSparseMatrix",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ToSSparseMatrix],
           Evaluator->Automatic,
           Method->"Preemptive"], {-1.003298658160953, 0.2327522829788659}, 
          ImageScaled[{1.2466039419298134, 0.5712920324781372}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.998867339183008, 0.04758191582374313}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnMaxesAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnMaxesAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {-1.0296060445778776, 0.055039045064686376},
           ImageScaled[{1.2288586762426563, 0.32318079836792973}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9898214418809327, -0.14231483827328406}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnMaxes",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnMaxes],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.9883164109260607, -0.1739093262054157}, 
          ImageScaled[{0.4643135631321933, 1.249150504387256}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9450008187146683, -0.3270679633174208}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnMinsAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnMinsAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.9765953066467999, -0.32857299427229264},
           ImageScaled[{1.249150504387256, 0.5356864368678067}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnMins",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnMins],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.8528856963375522, -0.5287719459557212}, 
          ImageScaled[{0.18843874024858498, 1.1822239965158887}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.755749574354258, -0.6548607339452843}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnSumsAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnSumsAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.7856402473110449, -0.6652059964387713}, 
          ImageScaled[{1.2087506140360014, 0.7453009724880661}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6181589862206047, -0.7860530947427873}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnSums",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnSums],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.5952670510896733, -0.8078805108021829}, 
          ImageScaled[{-0.04280052857880201, 1.0175592586115845}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.4582265217274101, -0.8888354486549229}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ImposeColumnNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ImposeColumnNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.4875910912810056, -0.8770796483503589}, 
          ImageScaled[{1.1962759497620539, 0.22125315825475333}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.28173255684142917, -0.9594929736144971}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ImposeRowNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ImposeRowNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.29064384617690353, -0.9898420379863719},
           ImageScaled[{0.711299417631073, 1.2196197302108729}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.09505604330418237, -0.9954719225730846}, 
          0.022593081678446286], InsetBox[
          ButtonBox["ColumnsCount",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`ColumnsCount],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.06399732994064901, -1.0014579989233}, 
          ImageScaled[{-0.23644652294702984, 0.6419384332703086}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.09505604330418313, -0.9954719225730847}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowNamesAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowNamesAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.12654313314159424, -0.9984785751036466}, 
          ImageScaled[{-0.2466039419298134, 0.5712920324781376}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.28173255684143034, -0.9594929736144975}, 
          0.022593081678446286], InsetBox[
          ButtonBox["MakeSSparseMatrix",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`MakeSSparseMatrix],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.30462449197236174, -0.981320389673893}, 
          ImageScaled[{-0.04280052857880201, 1.0175592586115845}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.45822652172741074, -0.8888354486549239}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowAssociations",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowAssociations],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.4727203706530756, -0.9169495933011468}, 
          ImageScaled[{0.1563301087044418, 1.1666265864911924}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6181589862206057, -0.7860530947427881}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowBind",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowBind],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.6410509213515372, -0.8078805108021836}, 
          ImageScaled[{-0.04280052857880201, 1.0175592586115845}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7557495743542585, -0.6548607339452857}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowMaxesAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowMaxesAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.7617356507044738, -0.685919447308819}, 
          ImageScaled[{0.3580615667296931, 1.23644652294703}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowMaxes",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowMaxes],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.884372786174964, -0.4742347065748413}, 
          ImageScaled[{0.06495731782160019, -0.11093196403775096}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9450008187146686, -0.32706796331742277}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowMinsAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowMinsAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.9594946676403334, -0.3551821079636455}, 
          ImageScaled[{0.15633010870444297, 1.1666265864911929}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9898214418809328, -0.14231483827328617}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowMins",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowMins],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.997278571121876, -0.1115761328784163}, 
          ImageScaled[{0.3231807983679298, -0.22885867624265632}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.998867339183008, 0.04758191582374143}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowSumsAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowSumsAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {1.0206947552424035, 0.024689980692809976}, 
          ImageScaled[{-0.01755925861158325, 1.0428005285788033}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9718115683235415, 0.23575893550942656}, 
          0.022593081678446286], InsetBox[
          ButtonBox["RowSums",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`RowSums],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.967310105252313, 0.26706729886631725}, 
          ImageScaled[{0.6067361287049643, -0.24236608141069949}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9096319953545183, 0.41541501300188516}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SetColumnNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SetColumnNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.9377461400007412, 0.40092116407622036}, 
          ImageScaled[{-0.16662658649119222, 0.8436698912955587}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8145759520503355, 0.5800569095711972}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SSparseMatrix",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SSparseMatrix],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.8403412454754955, 0.5984042919617221}, 
          ImageScaled[{-0.11093196403775196, 0.06495731782160163}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6900790114821117, 0.7237340381050694}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SetDimensionNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SetDimensionNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.7045728604077766, 0.7518481827512922}, 
          ImageScaled[{0.1563301087044413, -0.1666265864911921}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5406408174555974, 0.8412535328311808}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SetRowNames",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SetRowNames],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.5523966177601615, 0.8706181023847762}, 
          ImageScaled[{0.22125315825475383, -0.1962759497620543}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.371662455660328, 0.928367933016072}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SSparseMatrixAssociation",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SSparseMatrixAssociation],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.383418255964892, 0.9577325025696675}, 
          ImageScaled[{0.221253158254754, -0.1962759497620543}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1892512443604097, 0.9819286972627065}, 
          0.022593081678446286], InsetBox[
          ButtonBox["SSparseMatrixImportFromDirectory",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory],
           Evaluator->Automatic,
           Method->"Preemptive"], {0.21586035805176063, 0.9990293362691732}, 
          ImageScaled[{-0.13094014962338607, 0.09451938690830208}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297*^-16, 1.}, 0.022593081678446286], 
         InsetBox[
          ButtonBox["SSparseMatrixQ",
           Appearance->Frameless,
           
           ButtonFunction:>GeneralUtilities`PrintDefinitions[
            AntonAntonov`SSparseMatrix`SSparseMatrixQ],
           Evaluator->Automatic,
           Method->"Preemptive"], {-0.028114144646222583, 1.014493848925665}, 
          ImageScaled[{1.1666265864911922, 0.15633010870444142}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->900]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8935961391747503`*^9, 3.89359714582038*^9},
 CellLabel->"Out[99]=",
 CellID->1522180862,ExpressionUUID->"f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a"]
}, Open  ]],

Cell["Generate circular embedding graph edge coloring:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.893596176950934*^9, 3.893596178621292*^9}, {
  3.8935974921836863`*^9, 3.893597502501343*^9}},
 CellID->1632894935,ExpressionUUID->"ae6e2985-aba4-410a-93b8-29b08739ccb8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "33", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cols", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "/@", 
     RowBox[{"Rescale", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"VertexCount", "[", "gr1", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"CallGraphBiColorCircularEmbedding", "[", 
  RowBox[{"gr1", ",", 
   RowBox[{"\"\<VertexColors\>\"", "->", "cols"}], ",", 
   RowBox[{"ImageSize", "->", "900"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Web\>\""}]}], "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8935962447215137`*^9, 3.89359626486205*^9}},
 CellLabel->"In[100]:=",
 CellID->973358609,ExpressionUUID->"6dda126e-5317-461f-8a63-26ce8bdefcb7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Button[AntonAntonov`SSparseMatrix`ColumnAssociations, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnAssociations], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnBind, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnBind], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnNamesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`DimensionNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`DimensionNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`RowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ToSSparseMatrix], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMaxesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMaxes, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMaxes], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMinsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnMins, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnMins], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnSumsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ColumnSums, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnSums], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ImposeColumnNames], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`ImposeRowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ImposeRowNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`ColumnsCount, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`ColumnsCount], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowNamesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`MakeSSparseMatrix], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowAssociations, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowAssociations], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowBind, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowBind],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMaxesAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMaxes, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMaxes], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowMinsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowMins, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowMins],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`RowSumsAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`RowSums, 
        GeneralUtilities`PrintDefinitions[AntonAntonov`SSparseMatrix`RowSums],
         Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetColumnNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetColumnNames], Appearance -> Frameless], 
       
       Button[AntonAntonov`SSparseMatrix`SSparseMatrix, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrix], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetDimensionNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetDimensionNames], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SetRowNames, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SetRowNames], Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixAssociation], Appearance -> 
        Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory], 
        Appearance -> Frameless], 
       Button[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
        GeneralUtilities`PrintDefinitions[
        AntonAntonov`SSparseMatrix`SSparseMatrixQ], Appearance -> 
        Frameless]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {9, 
       10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15, 16}, {16, 4}, {
       16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {21, 4}, {21, 6}, {21, 
       7}, {21, 8}, {22, 23}, {22, 7}, {24, 25}, {24, 7}, {26, 7}, {26, 27}, {
       28, 6}, {28, 7}, {28, 29}, {28, 8}, {30, 4}, {30, 7}, {30, 29}, {30, 
       8}, {31, 4}, {31, 6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {34, 29}, {
       2, 4}, {2, 7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, Null}, {
      EdgeShapeFunction -> {
        Module[{AntonAntonov`CallGraph`Private`bsf$ = BSplineFunction[{
              Part[#, 1], 
              RegionNearest[
               Disk[
                Mean[
                 Part[#, {1, -1}]], 
                Norm[Part[#, 1] - Part[#, -1]]], {0, 0}], 
              Part[#, -1]}], AntonAntonov`CallGraph`Private`p1$ = 
           Subdivide[0, 1/2, 50], AntonAntonov`CallGraph`Private`p2$ = 
           Subdivide[1/2, 1, 50]}, {
           Thickness[Large], 
           Part[{
             RGBColor[
             0.9013532424242424, 0.44422121212121213`, 0.19010290909090907`], 
             
             RGBColor[
             0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
             RGBColor[
             0.4151288484848485, 0.6920723333333333, 0.5626724242424243], 
             RGBColor[
             0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
             
             RGBColor[
             0.6283088484848486, 0.7434789393939394, 0.34598354545454546`], 
             RGBColor[
             0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[
             0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
             RGBColor[
             0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
             RGBColor[
             0.5362616060606061, 0.7332649696969697, 0.42078042424242423`], 
             RGBColor[
             0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
             
             RGBColor[
             0.3814987878787879, 0.6697256666666667, 0.613761393939394], 
             RGBColor[
             0.8893551818181819, 0.3662789090909091, 0.1748141818181818], 
             RGBColor[0.8862404848484848, 0.617471, 0.22442945454545454`], 
             RGBColor[
             0.675526787878788, 0.7429325151515151, 0.31717336363636367`], 
             RGBColor[
             0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
             RGBColor[
             0.8674186363636364, 0.2097009090909091, 0.14587490909090908`], 
             RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
             RGBColor[
             0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
             RGBColor[
             0.24790763636363636`, 0.28302187878787877`, 0.7890625454545455], 
             
             RGBColor[
             0.3505598181818182, 0.6429982727272727, 0.6627781818181818], 
             RGBColor[
             0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
             
             RGBColor[
             0.3159191515151515, 0.11731290909090909`, 0.6603037575757575], 
             RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
             RGBColor[
             0.8049979393939394, 0.713523606060606, 0.25715248484848485`], 
             RGBColor[
             0.2805936363636364, 0.5226316363636363, 0.7796697272727273], 
             RGBColor[0.8680576969696969, 0.660111, 0.2341370909090909], 
             RGBColor[
             0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
             RGBColor[
             0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
             RGBColor[
             0.8774782727272727, 0.2882958181818182, 0.1596218181818182], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[
             0.2527632121212121, 0.41065066666666666`, 0.8107441515151516], 
             RGBColor[
             0.2634502424242424, 0.4714613333333333, 0.8041720303030303], 
             RGBColor[
             0.24468436363636362`, 0.34889145454545456`, 0.8118174545454546]}, 
            VertexIndex[
             Graph[{
               Button[AntonAntonov`SSparseMatrix`ColumnAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnBind], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNamesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`DimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`DimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ToSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMins], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSums], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnsCount, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnsCount], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNamesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`MakeSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowBind], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMins], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSums], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetDimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetDimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixAssociation], 
                Appearance -> Frameless], 
               Button[
               AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixQ], Appearance -> 
                Frameless]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 
               8}, {9, 10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15,
                16}, {16, 4}, {16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {
               21, 4}, {21, 6}, {21, 7}, {21, 8}, {22, 23}, {22, 7}, {24, 
               25}, {24, 7}, {26, 7}, {26, 27}, {28, 6}, {28, 7}, {28, 29}, {
               28, 8}, {30, 4}, {30, 7}, {30, 29}, {30, 8}, {31, 4}, {31, 
               6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {34, 29}, {2, 4}, {2, 
               7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, Null}, {
              GraphLayout -> "StarEmbedding", ImageSize -> 900, 
               VertexLabels -> {"Name"}}], 
             Part[#2, 1]]], 
           Line[
            Map[
            AntonAntonov`CallGraph`Private`bsf$, 
             AntonAntonov`CallGraph`Private`p1$]], 
           Part[{
             RGBColor[
             0.9013532424242424, 0.44422121212121213`, 0.19010290909090907`], 
             
             RGBColor[
             0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
             RGBColor[
             0.4151288484848485, 0.6920723333333333, 0.5626724242424243], 
             RGBColor[
             0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
             
             RGBColor[
             0.6283088484848486, 0.7434789393939394, 0.34598354545454546`], 
             RGBColor[
             0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[
             0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
             RGBColor[
             0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
             RGBColor[
             0.5362616060606061, 0.7332649696969697, 0.42078042424242423`], 
             RGBColor[
             0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
             
             RGBColor[
             0.3814987878787879, 0.6697256666666667, 0.613761393939394], 
             RGBColor[
             0.8893551818181819, 0.3662789090909091, 0.1748141818181818], 
             RGBColor[0.8862404848484848, 0.617471, 0.22442945454545454`], 
             RGBColor[
             0.675526787878788, 0.7429325151515151, 0.31717336363636367`], 
             RGBColor[
             0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
             RGBColor[
             0.8674186363636364, 0.2097009090909091, 0.14587490909090908`], 
             RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
             RGBColor[
             0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
             RGBColor[
             0.24790763636363636`, 0.28302187878787877`, 0.7890625454545455], 
             
             RGBColor[
             0.3505598181818182, 0.6429982727272727, 0.6627781818181818], 
             RGBColor[
             0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
             
             RGBColor[
             0.3159191515151515, 0.11731290909090909`, 0.6603037575757575], 
             RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
             RGBColor[
             0.8049979393939394, 0.713523606060606, 0.25715248484848485`], 
             RGBColor[
             0.2805936363636364, 0.5226316363636363, 0.7796697272727273], 
             RGBColor[0.8680576969696969, 0.660111, 0.2341370909090909], 
             RGBColor[
             0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
             RGBColor[
             0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
             RGBColor[
             0.8774782727272727, 0.2882958181818182, 0.1596218181818182], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[
             0.2527632121212121, 0.41065066666666666`, 0.8107441515151516], 
             RGBColor[
             0.2634502424242424, 0.4714613333333333, 0.8041720303030303], 
             RGBColor[
             0.24468436363636362`, 0.34889145454545456`, 0.8118174545454546]}, 
            VertexIndex[
             Graph[{
               Button[AntonAntonov`SSparseMatrix`ColumnAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnBind], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNamesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`DimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`DimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ToSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMins], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSums], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnsCount, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnsCount], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNamesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`MakeSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowBind], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMins], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSums], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetDimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetDimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixAssociation], 
                Appearance -> Frameless], 
               Button[
               AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixQ], Appearance -> 
                Frameless]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 
               8}, {9, 10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15,
                16}, {16, 4}, {16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {
               21, 4}, {21, 6}, {21, 7}, {21, 8}, {22, 23}, {22, 7}, {24, 
               25}, {24, 7}, {26, 7}, {26, 27}, {28, 6}, {28, 7}, {28, 29}, {
               28, 8}, {30, 4}, {30, 7}, {30, 29}, {30, 8}, {31, 4}, {31, 
               6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {34, 29}, {2, 4}, {2, 
               7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, Null}, {
              GraphLayout -> "StarEmbedding", ImageSize -> 900, 
               VertexLabels -> {"Name"}}], 
             Part[#2, 2]]], 
           Arrow[
            Map[
            AntonAntonov`CallGraph`Private`bsf$, 
             AntonAntonov`CallGraph`Private`p2$]]}]& }, GraphLayout -> 
       "CircularEmbedding", ImageSize -> 900, PlotTheme -> "Web", 
       VertexLabels -> {None}, 
       VertexShapeFunction -> {
        Module[{AntonAntonov`CallGraph`Private`off$ = 
           If[(-Pi)/2 < Apply[ArcTan, #] < Pi/2, Left, Right]}, {
           Part[{
             RGBColor[
             0.9013532424242424, 0.44422121212121213`, 0.19010290909090907`], 
             
             RGBColor[
             0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
             RGBColor[
             0.4151288484848485, 0.6920723333333333, 0.5626724242424243], 
             RGBColor[
             0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
             
             RGBColor[
             0.6283088484848486, 0.7434789393939394, 0.34598354545454546`], 
             RGBColor[
             0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[
             0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
             RGBColor[
             0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
             RGBColor[
             0.5362616060606061, 0.7332649696969697, 0.42078042424242423`], 
             RGBColor[
             0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
             
             RGBColor[
             0.3814987878787879, 0.6697256666666667, 0.613761393939394], 
             RGBColor[
             0.8893551818181819, 0.3662789090909091, 0.1748141818181818], 
             RGBColor[0.8862404848484848, 0.617471, 0.22442945454545454`], 
             RGBColor[
             0.675526787878788, 0.7429325151515151, 0.31717336363636367`], 
             RGBColor[
             0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
             RGBColor[
             0.8674186363636364, 0.2097009090909091, 0.14587490909090908`], 
             RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
             RGBColor[
             0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
             RGBColor[
             0.24790763636363636`, 0.28302187878787877`, 0.7890625454545455], 
             
             RGBColor[
             0.3505598181818182, 0.6429982727272727, 0.6627781818181818], 
             RGBColor[
             0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
             
             RGBColor[
             0.3159191515151515, 0.11731290909090909`, 0.6603037575757575], 
             RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
             RGBColor[
             0.8049979393939394, 0.713523606060606, 0.25715248484848485`], 
             RGBColor[
             0.2805936363636364, 0.5226316363636363, 0.7796697272727273], 
             RGBColor[0.8680576969696969, 0.660111, 0.2341370909090909], 
             RGBColor[
             0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
             RGBColor[
             0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
             RGBColor[
             0.8774782727272727, 0.2882958181818182, 0.1596218181818182], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[
             0.2527632121212121, 0.41065066666666666`, 0.8107441515151516], 
             RGBColor[
             0.2634502424242424, 0.4714613333333333, 0.8041720303030303], 
             RGBColor[
             0.24468436363636362`, 0.34889145454545456`, 0.8118174545454546]}, 
            VertexIndex[
             Graph[{
               Button[AntonAntonov`SSparseMatrix`ColumnAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnBind], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnNamesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`DimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`DimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ToSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ToSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxesAssociation], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnMins], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnSums], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ImposeRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ImposeRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`ColumnsCount, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`ColumnsCount], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowNamesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowNamesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`MakeSSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`MakeSSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowAssociations, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowAssociations], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowBind, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowBind], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxesAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxesAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMaxes, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMaxes], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMinsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMinsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowMins, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowMins], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSumsAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSumsAssociation], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`RowSums, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`RowSums], Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetColumnNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetColumnNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrix, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrix], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetDimensionNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetDimensionNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SetRowNames, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SetRowNames], Appearance -> 
                Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixAssociation, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixAssociation], 
                Appearance -> Frameless], 
               Button[
               AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory], 
                Appearance -> Frameless], 
               Button[AntonAntonov`SSparseMatrix`SSparseMatrixQ, 
                GeneralUtilities`PrintDefinitions[
                AntonAntonov`SSparseMatrix`SSparseMatrixQ], Appearance -> 
                Frameless]}, {{{1, 2}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 
               8}, {9, 10}, {9, 4}, {11, 12}, {11, 4}, {13, 4}, {13, 14}, {15,
                16}, {16, 4}, {16, 17}, {16, 18}, {16, 8}, {19, 8}, {20, 2}, {
               21, 4}, {21, 6}, {21, 7}, {21, 8}, {22, 23}, {22, 7}, {24, 
               25}, {24, 7}, {26, 7}, {26, 27}, {28, 6}, {28, 7}, {28, 29}, {
               28, 8}, {30, 4}, {30, 7}, {30, 29}, {30, 8}, {31, 4}, {31, 
               6}, {31, 29}, {31, 8}, {32, 2}, {33, 8}, {34, 29}, {2, 4}, {2, 
               7}, {8, 4}, {8, 6}, {8, 19}, {8, 7}, {8, 29}}, Null}, {
              GraphLayout -> "StarEmbedding", ImageSize -> 900, 
               VertexLabels -> {"Name"}}], #2]], 
           Text[
            Style[
             Framed[#2, FrameStyle -> None], FontSize -> Scaled[0.03]], #, {
            AntonAntonov`CallGraph`Private`off$, Center}, ArcTan[#] 
            ReplaceAll[
             AntonAntonov`CallGraph`Private`off$, {Left -> 1, Right -> -1}]], 
           
           PointSize[Large], 
           Point[#]}]& }}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.0424, 1, 0.8], Thickness[0.01], Opacity[1], 
        {RGBColor[
         0.9013532424242424, 0.44422121212121213`, 0.19010290909090907`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAysbWrBqFx7/0rn8AhHTvPwMyzOF/
nse/lquozpZT7z9jbqyKjrjHv6q094A+M+8/7nt3p0bTx78zymwXexPvP6Ja
LTio7se/K+wHkkz07j9+Cs48swrIv5gayfCy1e4/g4tZtWcnyL91VbAzrrfu
P7Pdz6HFRMi/xZy9Wj6a7j8LATECzWLIv4vw8GVjfe4/jfV81n2ByL+/UEpV
HWHuPze7sx7YoMi/aL3JKGxF7j8KUtXa28DIv4E2b+BPKu4/BrrhConhyL8N
vDp8yA/uPyzz2K7fAsm/DE4s/NX17T96/brG3yTJv3zsQ2B43O0/8tiHUolH
yb9gl4Gor8PtP5OFP1Lcasm/tE7l1Hur7T9fA+LF2I7Jv34Sb+Xck+0/UlJv
rX6zyb+64h7a0nztP25y5wjO2Mm/Z7/0sl1m7T+0Y0rYxv7Jv4eo8G99UO0/
IiaYG2klyr8XnhIRMjvtP7q50NK0TMq/GqBalnsm7T96HvT9qXTKv5CuyP9Z
Eu0/ZFQCnUidyr95yVxNzf7sP3db+6+Qxsq/0/AWf9Xr7D+0M982gvDKv6Ek
95Ry2ew/GN2tMR0by7/gZP2OpMfsP6dXZ6BhRsu/k7EpbWu27D9dowuDT3LL
v7cKfC/Hpew/PsCa2eaey79NcPTVt5XsP0iuFKQnzMu/VuKSYD2G7D98bXni
EfrLv9JgV89Xd+w/1/3IlKUozL+/60EiB2nsP1xfA7viV8y/H4NSWUtb7D8K
kihVyYfMv/MmiXQkTuw/4pU4Y1m4zL841+VzkkHsP+NqM+WS6cy/8JNoV5U1
7D8NERnbdRvNvxpdER8tKuw/YIjpRAJOzb+1MuDKWR/sP9vQpCI4gc2/wxTV
WhsV7D+A6kp0F7XNv0UD8M5xC+w/TtXbOaDpzb84/jAnXQLsP0aRV3PSHs6/
nQWYY9356z9mHr4grlTOv3UZJYTy8es/sHwPQjOLzr/AOdiInOrrPyKsS9dh
ws6/fGaxcdvj6z+8rHLgOfrOv6mfsD6v3es/gn6EXbsyz79K5dXvF9jrP28h
gU7ma8+/XjchhRXT6z+HlWizuqXPv+SVkv6nzus/m4LHNA==
          "]], 
         {RGBColor[
          0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAh5Vos7qlz7/klZL+p87rP8faOow4
4M+/3AAqXM/K6z+Y+Hvsrw3Qv0Z4552Lx+s/YezPTJgr0L8k/MrD3MTrP79I
GWfVSdC/c4zUzcLC6z+xDVg7Z2jQvzUpBLw9wes/ODuMyU2H0L9o0lmOTcDr
P1PRtRGJptC/D4jVRPK/6z8D0NQTGcbQvyhKd98rwOs/SDfpz/3l0L+zGD9e
+sDrPyEH80U3BtG/sPMswV3C6z+OP/J1xSbRvyDbQAhWxOs/keDmX6hH0b8C
z3oz48brPyjq0APgaNG/V8/aQgXK6z9TXLBhbIrRvx3cYDa8zes/EjeFeU2s
0b9W9QwOCNLrP2d6T0uDztG/AhvfyejW6z9QJg/XDfHRvyBN12le3Os/zjrE
HO0T0r+wi/XtaOLrP9+3bhwhN9K/stY5Vgjp6z+GnQ7WqVrSvygupKI88Os/
wuujSYd+0r8QkjTTBfjrP5KiLne5otK/aQLr52MA7D/2wa5eQMfSvzR/x+BW
Cew/70kkABzs0r90CMq93hLsP3w6j1tMEdO/JJ7yfvsc7D+ek+9w0TbTv0dA
QSStJ+w/VFVFQKtc07/c7rWt8zLsP6B/kMnZgtO/5KlQG88+7D+AEtEMXanT
v2BxEW0/S+w/9A0HCjXQ079LRfiiRFjsP/1xMsFh99O/qiUFvd5l7D+ZPlMy
4x7Uv3oSOLsNdOw/zHNpXblG1L+/C5Gd0YLsP5IRdULkbtS/dBEQZCqS7D/t
F3bhY5fUv50jtQ4Youw/3YZsOjjA1L83QoCdmrLsP2JeWE1h6dS/RW1xELLD
7D96njka3xLVv8SkiGde1ew/J0cQobE81b+26MWin+fsP2pY3OHYZtW/Gjkp
wnX67D9A0p3cVJHVv/CVssXgDe0/q7RUkSW81b85/2Gt4CHtP6r/AABL59W/
9XQ3eXU27T8+s6IoxRLWvyL3MimfS+0/Z885C5Q+1r/ChVS9XWHtPyRUxqe3
ata/1CCcNbF37T91QUj+L5fWv1jICZKZju0/XJe/Dv3D1r9PfJ3SFqbtP9ZV
LNke8da/uTxX9yi+7T/mfI5dlR7Xv5QJNwDQ1u0/UvW88w==
           "]]}}, 
        {RGBColor[0.5819508181818183, 0.7399549090909091, 0.3809772727272727],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA5nyOXZUe17+UCTcA0NbtP3F8hwsE
E9e/3IxrkEiU7T8enVxNtwjXv5AhmzvHUu0/6t4NI6//1r+xx8UBTBLtP9lB
m4zr99a/QX/r4tbS7D/nxQSKbPHWvz5IDN9nlOw/FWtKGzLs1r+nIij2/lbs
P2QxbEA86Na/fw4/KJwa7D/VGGr5iuXWv8QLUXU/3+s/ZSFERh7k1r92Gl7d
6KTrPxZL+ib249a/lTpmYJhr6z/nlYybEuXWvyFsaf5NM+s/2QH7o3Pn1r8a
r2e3CfzqP+yORUAZ69a/gQNhi8vF6j8fPWxwA/DWv1RpVXqTkOo/cQxvNDL2
1r+W4ESEYVzqP+b8TYyl/da/RGkvqTUp6j98Dgl4XQbXv2EDFekP9+k/MUGg
91kQ17/rrvVD8MXpPweVEwubG9e/4mvRudaV6T/+CWOyICjXv0U6qErDZuk/
FaCO7eo1178WGnr2tTjpP01Xlrz5RNe/VQtHva4L6T+lL3ofTVXXvwAOD5+t
3+g/Hik6FuVm178YItKbsrToP7dD1qDBede/n0eQs72K6D9xf06/4o3Xv5J+
SebOYeg/TNyicUij17/yxv0z5jnoP0da07fyude/wSCtnAMT6D9i+d+R4dHX
v/uLVyAn7ec/n7nI/xTr17+kCP2+UMjnP/uajQGNBdi/upadeICk5z95nS6X
SSHYvz02OU22gec/F8GrwEo+2L8u58888l/nP9YFBX6QXNi/i6lhRzQ/5z+1
azrPGnzYv1d97mx8H+c/tPJLtOmc2L+PYnatygDnP9WaOS39vti/NVn5CB/j
5j8WZAM6VeLYv0hhd395xuY/eE6p2vEG2b/IevAQ2qrmP/pZKw/TLNm/taVk
vUCQ5j+ehonX+FPZvxDi04StduY/YNTDM2N82b/YLz5nIF7mP0RD2iMSptm/
Do+jZJlG5j9I08ynBdHZv7D/A30YMOY/boSbvz392b/AgV+wnRrmP7NWRmu6
Ktq/PBW2/igG5j8YSs2qe1navye6B2i68uU/n14wfoGJ2r9+cFTsUeDlP0aU
b+XLutq/Qzici+/O5T8O64rgWu3av3UR30WTvuU/xHu5yQ==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADuuK4Frt2r91Ed9Fk77lP/Zigm8u
Idu/FfwcGz2v5T8A/FWSRlbbvyL4VQvtoOU/KrYFSaOM27+cBYoWo5PlP3KR
kZNExNu/giS5PF+H5T/ejflxKv3bv9hU430hfOU/aas95FQ33L+algja6XHl
PxTqXerDcty/yekoUbho5T/iSVqEd6/cv2VOROOMYOU/zsoysm/t3L9wxFqQ
Z1nlP9xs53OsLN2/5ktsWEhT5T8JMHjJLW3dv8rkeDsvTuU/WBTlsvOu3b8c
j4A5HErlP8gZLjD+8d2/2kqDUg9H5T9YQFNBTTbevwcYgYYIReU/CIhU5uB7
3r+g9nnVB0TlP9rwMR+5wt6/p+ZtPw1E5T/Leuvr1QrfvxvoXMQYReU/3CWB
TDdU37/8+kZkKkflPw7y8kDdnt+/Sh8sH0JK5T9i30DJx+rfvwZVDPVfTuU/
63a1cvsb4L8wnOflg1PlP7WOuEo1Q+C/xvS98a1Z5T8Qt6lsEWvgv8lejxje
YOU/+u+I2I+T4L862ltaFGnlP3Y5Vo6wvOC/GWcjt1By5T+BkxGOc+bgv2QF
5i6TfOU/HP6619gQ4b8dtaPB24flP0h5UmvgO+G/RHZcbyqU5T8FBdhIimfh
v9dIEDh/oeU/UqFLcNaT4b/YLL8b2q/lPy5OreHEwOG/RSJpGju/5T+aC/2c
Ve7hvyApDjSiz+U/mNk6oogc4r9qQa5oD+HlPyW4ZvFdS+K/HmtJuILz5T9E
p4CK1Xriv0Gm3yL8BuY/8qaIbe+q4r/S8nCoexvmPzC3fpqr2+K/0FD9SAEx
5j//12IRCg3jvzrAhASNR+Y/Xgk10go/478SQQfbHl/mP05L9dytceO/WNOE
zLZ35j/NnaMx86Tjvwt3/dhUkeY/3QBA0NrY478rLHEA+avmP350yrhkDeS/
uPLfQqPH5j+u+ELrkELkv7PKSaBT5OY/b42pZ1945L8btK4YCgLnP8Ay/i3Q
ruS/8K4OrMYg5z+h6EA+4+XkvzK7aVqJQOc/E69xmJgd5b/h2L8jUmHnPxWG
kDzwVeW//wcRCCGD5z+nbZ0q6o7lv4lIXQf2pec/Qy26qQ==
           "]]}}, 
        {RGBColor[0.5819508181818183, 0.7399549090909091, 0.3809772727272727],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA5nyOXZUe17+UCTcA0NbtP04peOb2
Hte/hCNJrke17T9cB61v4h/Xv+PVvu5JlO0/Dhct+Vch17+yIJjB1nPtP2VY
+IJXI9e/8APVJu5T7T9gyw4N4SXXv55/dR6QNO0//29wl/Qo17+5k3movBXt
P0RGHSKSLNe/RUDhxHP37D8uThWtuTDXv0KFrHO12ew/vIdYOGs117+sYtu0
gbzsP+7y5sOmOte/hthtiNif7D/Fj8BPbEDXv8/mY+65g+w/QV7l27tG17+H
jb3mJWjsP2FeVWiVTde/sMx6cRxN7D8mkBD1+FTXv0Wkm46dMuw/j/MWguZc
179NFCA+qRjsP52IaA9eZde/wRwIgD//6z9PTwWdX27Xv6e9U1Rg5us/qEft
Kut317/89gK7C87rP6RxILkAgte/wcgVtEG26z9FzZ5HoIzXv/QyjD8Cn+s/
ilpo1smX17+XNWZdTYjrP3MZfWV9o9e/p9CjDSNy6z8CCt30uq/XvygERVCD
XOs/NSyIhIK8178Y0EklbkfrPw2AfhTUyde/eDSyjOMy6z+JBcCkr9fXv0Yx
fobjHus/qbxMNRXm17+Fxq0SbgvrP3ClJMYE9de/M/RAMYP46j/av0dXfgTY
v0+6N+Ii5uo/6Au26IEU2L/aGJIlTdTqP5yJb3oPJdi/1g9Q+wHD6j/1OHQM
JzbYv0GfcWNBsuo/8hnEnshH2L8cx/ZdC6LqP5MsXzH0Wdi/ZYff6l+S6j/Z
cEXEqWzYvx7gKwo/g+o/xeZ2V+l/2L9G0du7qHTqP1SO8+qyk9i/3lrv/5xm
6j+HZ7t+BqjYv+V8ZtYbWeo/YHLOEuS82L9bN0E/JUzqP96uLKdL0ti/P4p/
Ork/6j8AHdY7PejYv5V1IcjXM+o/xrzK0Lj+2L9Z+SbogCjqPzKOCma+Fdm/
jBWQmrQd6j9BkZX7TS3ZvzDKXN9yE+o/9sVrkWdF2b9CF422uwnqP04sjScL
Xtm/wvwgII8A6j9MxPm9OHfZv7J6GBzt9+k/7o2xVPCQ2b8SkXOq1e/pPzSJ
tOsxq9m/4T8yy0jo6T8gtgKD/cXZvx+HVH5G4ek/ei26dA==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAILYCg/3F2b8fh1R+RuHpP7EUnBpT
4dm/zmbaw87a6T/mpICyMv3Zv+rew5vh1Ok/vmawSpwZ2r937xAGf8/pPzxa
K+OPNtq/cpjBAqfK6T9gf/F7DVTav97Z1ZFZxuk/JtYCFRVy2r+4s02zlsLp
P5JeX66mkNq/AiYpZ16/6T+iGAdIwq/av7swaK2wvOk/WAT64WfP2r/k0wqG
jbrpP7EhOHyX79q/eg8R8fS46T+wcMEWURDbv4Ljeu7mt+k/U/GVsZQx27/5
T0h+Y7fpP5ujtUxiU9u/3lR5oGq36T+HhyDouXXbvzTyDVX8t+k/GJ3Wg5uY
27/4JwacGLnpP07k1x8HvNu/K/Zhdb+66T8oXSS8/N/bv85cIeHwvOk/pge8
WHwE3L/gW0TfrL/pP8njnvWFKdy/YfPKb/PC6T+R8cySGU/cv1IjtZLExuk/
/jBGMDd13L+06wJIIMvpPw+iCs7em9y/gky0jwbQ6T/FRBpsEMPcv8BFyWl3
1ek/IBl1Cszq3L9u10HWctvpPyAfG6kRE92/jAEe1fjh6T/CVgxI4TvdvxnE
XWYJ6ek/C8BI5zpl3b8UHwGKpPDpP/ha0IYej92/gBIIQMr46T+KJ6MmjLnd
v1uecoh6Aeo/wSXBxoPk3b+mwkBjtQrqP5xVKmcFEN6/Xn9y0HoU6j8at94H
ETzev4fUB9DKHuo/P0reqKZo3r8fwgBipSnqPwcPKUrGld6/Jkhdhgo16j90
Bb/rb8Pev5xmHT36QOo/hi2gjaPx3r+CHUGGdE3qPz6HzC9hIN+/2GzIYXla
6j+ZEkTSqE/fv5xUs88IaOo/mc8GdXp/37/Q1AHQInbqPz6+FBjWr9+/c+2z
YseE6j+H3m27u+Dfv4aeyYf2k+o/OhiJrxUJ4L8H6EI/sKPqPwTagIESIuC/
+ckfifSz6j+fNJ5TVDvgv1lEYGXDxOo/DSjhJdtU4L8pVwTUHNbqP020Sfim
buC/aAIM1QDo6j9g2dfKt4jgvxZGd2hv+uo/RJeLnQ2j4L8zIkaOaA3rP/zt
ZHCoveC/wZZ4Ruwg6z+F3WNDiNjgv72jDpH6NOs/gHK94g==
           "]]}}, 
        {RGBColor[0.4151288484848485, 0.6920723333333333, 0.5626724242424243],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+QWabFuJ6b/C8dVuyEjjP0BwkXUN
aem/GwnFIMo/4z+1OrDkMUnpv1p3jxw0N+M/XWX2ucgp6b9+PDViBi/jPzTw
Y/XRCum/iFi28UAn4z872/iWTezov3fLEsvjH+M/cia1njvO6L9MlUru7hjj
P9rRmAycsOi/BrZdW2IS4z9y3aPgbpPov6UtTBI+DOM/PEnWGrR26L8r/BUT
ggbjPzMVMLtrWui/lSG7XS4B4z9cQbHBlT7ov+OdO/JC/OI/tM1ZLjIj6L8Z
cZfQv/fiPz26KQFBCOi/M5vO+KTz4j/2BiE6wu3nvzMc4Wry7+I/37M/2bXT
578Y9M4mqOziP/jAhd4buue/4iKYLMbp4j9ELvNJ9KDnv5KoPHxM5+I/vvuH
Gz+I578phbwVO+XiP2kpRFP8b+e/o7gX+ZHj4j9DtyfxK1jnvwRDTiZR4uI/
TaUy9c1A579JJGCdeOHiP4jzZF/iKee/dFxNXgjh4j/yob4vaRPnv4TrFWkA
4eI/jrA/ZmL95r960bm9YOHiP1kf6ALO5+a/VQ45XCni4j9W7rcFrNLmvxei
k0Ra4+I/gB2vbvy95r+7jMl28+TiP92szT2/qea/SM7a8vTm4j9pnBNz9JXm
v7hmx7he6eI/JeyADpyC5r8OVo/IMOziPxKcFRC2b+a/SpwyImvv4j8vrNF3
Ql3mv2s5scUN8+I/fBy1RUFL5r9yLQuzGPfiP/nsv3myOea/XXhA6ov74j+o
HfITlijmvzAaUWtnAOM/ha5LFOwX5r/mEj02qwXjP5SfzHq0B+a/gmIES1cL
4z/S8HRH7/flvwQJp6lrEeM/QKJEepzo5b9qBiVS6BfjP96zOxO82eW/t1p+
RM0e4z+uJVoSTsvlv+kFs4AaJuM/rfefd1K95b8BCMMG0C3jP90pDUPJr+W/
/mCu1u014z88vKF0sqLlv+AQdfBzPuM/y65dDA6W5b+nFxdUYkfjP4oBQQrc
ieW/VHWUAblQ4z97tEtuHH7lv+Yp7fh3WuM/nMd9OM9y5b9eNSE6n2TjP+w6
12j0Z+W/upcwxS5v4z9sDlj/i13lv/1QG5omeuM/LX+46g==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAbA5Y/4td5b/9UBuaJnrjPx1CAPyV
U+W/JWHhuIaF4z/+1c9eEkrlvzLIgiFPkeM/D8rGJwFB5b8lhv/Tf53jP1Ee
5VZiOOW//JpX0Biq4z/C0irsNTDlv7oGixYat+M/ZOeX53so5b9dyZmmg8Tj
PzdcLEk0IeW/5uKDgFXS4z85MegQXxrlv1RTSaSP4OM/bGbLPvwT5b+mGuoR
Mu/jP8771dILDuW/3zhmyTz+4z9h8QfNjQjlv/2tvcqvDeQ/JEdhLYID5b8A
evAVix3kPxj94fPo/uS/6pz+qs4t5D87E4ogwvrkv7gW6Il6PuQ/j4lZsw33
5L9r56yyjk/kPxRgUKzL8+S/BA9NJQth5D/Ilm4L/PDkv4ONyOHvcuQ/rC20
0J7u5L/mYh/oPIXkP8AkIfyz7OS/L49ROPKX5D8GfLWNO+vkv14SX9IPq+Q/
ejNxhTXq5L9y7Ee2lb7kPx9LVOOh6eS/bB0M5IPS5D/0wl6ngOnkv0qlq1va
5uQ/+pqQ0dHp5L8PhCYdmfvkPzDT6WGV6uS/uLl8KMAQ5T+Wa2pYy+vkv0hG
rn1PJuU/LGQStXPt5L+8KbscRzzlP/S84XeO7+S/FmSjBadS5T/qddigG/Lk
v1b1ZjhvaeU/EY/2Lxv15L973QW1n4DlP2gIPCWN+OS/hByAeziY5T/v4aiA
cfzkv3Sy1Ys5sOU/pxs9QsgA5b9KnwbmosjlP461+GmRBeW/A+MSinTh5T+m
r9v3zArlv6J9+neu+uU/7gnm63oQ5b8ob72vUBTmP2fEF0abFuW/k7dbMVsu
5j8Q33AGLh3lv+JW1fzNSOY/6FnxLDMk5b8YTSoSqWPmP/I0mbmqK+W/M5pa
cex+5j8qcGislDPlvzQ+ZhqYmuY/lAtfBfE75b8aOU0NrLbmPy4HfcS/ROW/
5IoPSijT5j/4YsLpAE7lv5UzrdAM8OY/8h4vdbRX5b8rMyahWQ3nPx07w2ba
YeW/pol6uw4r5z92t36+cmzlvwc3qh8sSec/AZRhfH135b9MO7XNsWfnP7zQ
a6D6guW/eJabxZ+G5z+nbZ0q6o7lv4lIXQf2pec/q6G+kQ==
           "]]}}, 
        {RGBColor[0.4151288484848485, 0.6920723333333333, 0.5626724242424243],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+QWabFuJ6b/C8dVuyEjjP+IT9rGj
COm/yksZOW3m4j+inc0Oy4rovz6M82ybhOI/PaMgg9EP6L8cs2QKUyPiP7Ik
7w63l+e/Z8BsEZTC4T8AIjmyeyLnvxy0C4JeYuE/KJv+bB+w5r88jkFcsgLh
PymQPz+iQOa/yE4OoI+j4D8FAfwoBNTlv7/1cU32ROA/uu0zKkVq5b9DBtnI
zM3fP0dW50JlA+W/3e37yb8S3z+vOhZzZJ/kv06iTJ7FWN4/75rAukI+5L+U
I8tF3p/dPwl35hkA4OO/snF3wAno3D/9zoeQnITjv6WMUQ5IMdw/yqKkHhgs
479vdFkvmXvbP3HyPMRy1uK/ECmPI/3G2j/yvVCBrIPiv4aq8upzE9o/TAXg
VcUz4r/V+IOF/WDZP4DI6kG95uG/+RND85mv2D+OB3FFlJzhv/L7LzRJ/9c/
dMJyYEpV4b/DsEpIC1DXPzT575LfEOG/aTKTL+Ch1j/Nq+jcU8/gv+WACerH
9NU/QNpcPqeQ4L85nK13wkjVP42ETLfZVOC/Y4R/2M+d1D+zqrdH6xvgv2M5
fwzw89M/Y5k837fL3784u6wTI0vTPxfVAF5XZd+/5gkI7mij0j98CLwLtQTf
v2klkZvB/NE/lDNu6NCp3r/CDUgcLVfRP2BWF/SqVN6/8cIscKuy0D/ecLcu
QwXev/hEP5c8D9A/EINOmJm73b+pJ/8iwdnOP/SM3DCud92/Dl/bvS6XzT+N
jmH4gDndvyYwE//BVsw/2Ifd7hEB3b/kmqbmehjLP9d4UBRhzty/UJ+VdFnc
yT+GYbpobqHcv2k94Khdosg/6kEb7Dl63L8tdYaDh2rHPwIac57DWNy/n0aI
BNc0xj/M6cF/Cz3cv8Gx5StMAcU/SLEHkBEn3L+Otp755s/DP3hwRM/VFty/
BVWzbaegwj9cJ3g9WAzcvymNI4iNc8E/8tWi2pgH3L/6Xu9ImUjAPzt8xKaX
CNy/85QtYJU/vj84Gt2hVA/cv0yfM3tD8rs/5q/sy88b3L/73PDiPKm5P0g9
8yQJLty/A05ll4Fktz9ewvCsAEbcv2fykJgRJLU/XgG6hQ==
          "]], 
         {RGBColor[
          0.6283088484848486, 0.7434789393939394, 0.34598354545454546`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAXsLwrABG3L9n8pCYESS1PyY/5WO2
Y9y/Icpz5uznsj+is9BJKofcvznVDYETsLA/0B+zXlyw3L9OJ77QCvmsP7GD
jKJM39y/3ArPOIWaqD9G31wV+xPdvyJVTjqWRKQ/jjIkt2dO3b80DHiqe+6f
P4h94oeSjt2/mDswE/hklz81wJeHe9Tdv6Bwil1D2Y0/lvpDtiIg3r/QCdz0
4RV6P6os5xOIcd6/gGCmFzgIXb9xVoGgq8jev0ACnpqkKoS/6ncSXI0l37/U
zkbm80iSvxeRmkYtiN+/HM9hTGhrmr/4oRlgi/DfvwAB0L9XPqG/RdVH1FMv
4L/AswDAZD6lv2hV/g9BaeC/zP/CJts1qb9lUTBjDabgvyjlFvS6JK2/O8nd
zbjl4L/oMf4TgoWwv+m8BlBDKOG/2r05YVt0sr9zLKvprG3hv3oWvmHpXrS/
1hfLmvW14b/CO4sVLEW2vxJ/ZmMdAeK/sC2hfCMnuL8mYn1DJE/iv0Ps/5bP
BLq/F8EPOwqg4r9+d6dkMN67v9+bHUrP8+K/X8+X5UWzvb+B8qZwc0rjv+bz
0BkQhL+//cSrrvaj47+KcqmAR6jAv1MTLARZAOS/ddEOTmGMwb+C3Sdxml/k
v7OWGHVVbsK/iyOf9brB5L9Ewsb1I07Dv2zlkZG6JuW/KFQZ0MwrxL8lIwBF
mY7lv1xMEARQB8W/u9zpD1f55b/oqquRreDFvykST/LzZua/xm/reOW3xr9x
wy/sb9fmv/aaz7n3jMe/kvCL/cpK5797LFhU5F/Iv46ZYyYFwee/VCSFSKsw
yb9ivrZmHjrov36CVpZM/8m/EF+Fvha26L/9Rsw9yMvKv5h7zy3uNOm/z3Hm
Ph6Wy7/5E5W0pLbpv/QCpZlOXsy/NCjWUjo76r9s+gdOWSTNv0i4kgivwuq/
OFgPXD7ozb80xMrVAk3rv1Qcu8P9qc6/+0t+ujXa67/HRguFl2nPv5xPrbZH
auy/xuv/z4UT0L8Xz1fKOP3sv1JnTAotcdC/asp99QiT7b8IFmtxwc3Qv5dB
Hzi4K+6/5/dbBUMp0b+eNDySRsfuv/EMH8axg9G/SbPE6A==
           "]]}}, 
        {RGBColor[0.4151288484848485, 0.6920723333333333, 0.5626724242424243],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+QWabFuJ6b/C8dVuyEjjP+xs7ffW
KOm/c8znVsnv4j9sCIlwmcrovxngXRpwl+I/eNhs1qJu6L+2LDi5vD/iPxHd
mCnzFOi/TLJ2M6/o4T81Fg1qir3nv9VwGYlHkuE/5YPJl2ho579VaCC6hTzh
PyImzrKNFee/y5iLxmnn4D/s/Bq7+cTmvzgCW67zkuA/QgiwsKx25r+cpI5x
Iz/gPyNIjZOmKua/7P9MIPLX3z+QvLJj5+Dlv4ooRRTpMt8/iWUgIW+Z5b8W
wwW/K4/ePw9D1ss9VOW/j8+OILrs3T8gVdRjUxHlv/NN4DiUS90/vZsa6a/Q
5L9FPvoHuqvcP+cWqVtTkuS/g6DcjSsN3D+fxn+7PVbkv690h8rob9s/4qqe
CG8c5L/Huvq98dPaP7DDBUPn5OO/zHI2aEY52j8LEbVqpq/jv7ycOsnmn9k/
8ZKsf6x847+ZOAfh0gfZP2VJ7IH5S+O/Y0acrwpx2D9jNHRxjR3jvxnG+TSO
29c/71NETmjx4r+8tx9xXUfXPwaoXBiKx+K/SxsOZHi01j+qML3P8p/iv8jw
xA3fItY/2e1ldKJ64r8wOERukZLVP5XfVgaZV+K/h/GLhY8D1T/dBZCF1jbi
v8gcnFPZddQ/sWAR8loY4r/2uXTYbunTPxHw2ksm/OG/EckVFFBe0z/+s+yS
OOLhvxlKfwZ91NI/dqxGx5HK4b8NPbGv9UvSP3vZ6OgxteG/7aGrD7rE0T8M
O9P3GKLhv714bibKPtE/KdEF9EaR4b93wfnzJbrQP9ObgN27guG/HXxNeM02
0D8Im0O0d3bhv2JR02aBac8/ys5OeHps4b9gjpxK/2fOPxg3oinEZOG/Oa/2
mxRpzT/y0z3IVF/hv+2z4VrBbMw/V6UhVCxc4b94nF2HBXPLP0mrTc1KW+G/
3GhqIeF7yj/I5cEzsFzhvxkZCClUh8k/0lR+h1xg4b8wrTaeXpXIP2j4gshP
ZuG/HyX2gACmxz+L0M/2iW7hv+iARtE5ucY/Ot1kEgt54b+KwCePCs/FP3Qe
QhvTheG/BeSZunLnxD88lGcR4pThv1rrnFNyAsQ/d7HDRg==
          "]], 
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAPJRnEeKU4b9a65xTcgLEP44+1fQ3
puG/htYwWgkgwz9uHYvF1Lnhv46lVc43QMI/2jCJg7jP4b9tWAuw/WLBP9J4
zy7j5+G/Ju9R/1qIwD9W9V3HVALiv3HTUnifYL8/ZqY0TQ0f4r9IkCPNt7W9
PwKMU8AMPuK/0xQW/f4PvD8qprogU1/ivw9hKgh1b7o/3vRpbuCC4r/8dGDu
GdS4Px94Yam0qOK/nVC4r+09tz/sL6HRz9Div+7zMUzwrLU/Rhwp5zH74r/z
Xs3DISG0Pyo9+enaJ+O/qpGKFoKasj+ckhHaylbjvxSMaUQRGbE/mBxytwGI
479dnNSanjmvPyLbGoJ/u+O/+K8ZY3hLrD84zgs6RPHjv/hSouGvZ6k/2vVE
308p5L9fhW4WRY6mPwdSxnGiY+S/M0d+ATi/oz/B4o/xO6Dkv2CY0aKI+qA/
CKihXhzf5L/k8dD0bYCcP9qh+7hDIOW/1tGFEIYglz840J0AsmPlv47QwZhZ
1ZE/JDOINWep5b8k3Akb0T2JP5rKuldj8eW/cKk8u8v0fT+dljVnpjvmv5Ar
BOXFgWM/LJf4YzCI5r9wBThIMEBkv0nMA04B1+a/GKCdiCWufb/wNVclGSjn
vzBhgZ2idIi/JNTy6Xd7579e2tLOXfSQv+Sm1psd0ee/WuVd4q6Zlb8urgI7
Cinov3zRYYlEKpq/B+p2xz2D6L/ont7DHqaev2paM0G43+i/xCbqyJ6Gob9b
/zeoeT7pv7BuoXnQr6O/19iE/IGf6b82JxV0pM6lv+HmGT7RAuq/WVBFuBrj
p791KfdsZ2jqvxXqMUYz7am/l6AciUTQ6r9v9Nod7uyrv0NMipJoOuu/Y29A
P0virb99LECJ06brv/JaYqpKza+/QkE+bYUV7L+OW6Av9tawv5SKhD5+huy/
8sHtLhjCsb9wCBP9vfnsv59gGVMLqLK/27rpqERv7b+eNyOcz4izv9GhCEIS
5+2/6UYLCmVktL9TvW/IJmHuv4OO0ZzLOrW/YA0fPILd7r9qDnZUAwy2v/uR
Fp0kXO+/n8b4MAzYtr8iS1brDd3vvyK3WTLmnre/rwi+jA==
           "]]}}, 
        {RGBColor[0.4151288484848485, 0.6920723333333333, 0.5626724242424243],
          Thickness[Large], LineBox[CompressedData["
1:eJwVkWtMkwcYhb8JBZ0VwQok4OYASaBzOFcrsWt9B4xJEC8U42KpFpgwi4gB
wQvqhHVUmDoMKCoIqWMRULFEqz+G4QVUwNCAdNSsRqvf+/XGFLHghWZR1/04
OTnJ8+MkT0TObnnuLIZhRN783x5eQ0Fm9Tj2uc2FgykcxO/XKKZTx/GEOaDA
ZzkHOX3KGcW8cZRW//l1ZBgHh23R39Xed+EI3/J4iS8Hv1itSedOuTA5K18+
d5LgYOdR9+4tLmzSFJ4zPyRQKT7bELLYhZa99muaAYKvHrUpj9ud6Fk10hx8
g+CVOCLMdMWJ74yfbz3WQtDyY/VRZ4kTbcv+nbDVEnxTxP5hlDmxI0eWHqkh
MMpjiyv8najIndImlRAk87MneSYHPosPq0nJI+hoqlqkaHKg6qFBvXwLgY+/
znNY7cAbaX0h79MI1qS0aotWOtD9W2L91QSCA9nNt1f4OjDggtiVGE/QKK/s
HDDZMVDTyO/6guBSuHKd8Hc7vl5R4hMaTdB6K7JBWWzH7pto3PwJQZ3YUr8t
yY75s3/aURZCsFN7JOnLYDt6YvUPKgIJRPpg3ajThvnhGaG75hK49I1XErts
2PNILZT6ExyrClJramzo2TU9f9KH4NNV+8x1220YMjI5UPkRQXOv0b1H4t2M
Ss4wBPzIBd1RQV6eSdBv+8CCWrFG0uLisGf0tFXn3Yb8grypHg7VxVuf9nv5
5/KKxKAGDt/QGcP9WQQCgXb4wx4O86KSM7t5BLGXyz7uXs9hlyh3rGYOwdJw
1Zu1Qg6nBTOLkwO8f34Q1bb7cTjvzjuZVUDw/ue3jx9whPxv98Zlhnl9lF22
/NVL+KIu290VQVCduqFSpyO8dh21jNDre4qeSssJM1tOvogREQwV5T1vyyJ0
5ozFiGUE8nuWVlsC4eapX8XRKQSDM1LByyjCtnTDQk8GgZA5GTfkR2gt39jf
mUVw6InJU/oPizNHVKlphQS36nmlL4dZfLWe1Q0dIhiPjtFJDCyOTZjvxR0n
4J2QHNzUwOJZpexu6XmCAKPUb3UFi6sbQ+t0HQT+XFzC2x0sDrZvF+mRYGI0
cGl5OoviqiUXL5gIes9S/98SFrUrv3+2z0HwHxN/uss=
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwZjixtg64b+GNlfrd+biP4Q3pBEB
JeG/urT8AjL74j81rlUM+Q/hv9ICFe3PEOM/1Pz2tsD74L/NIKCpUSfjP2Ej
iBFY6OC/qw6eOLc+4z/dIQkcv9Xgv23MDpoAV+M/Rvh51vXD4L8SWvLNLXDj
P5+m2kD8suC/mrdI1D6K4z/kLCtb0qLgvwblEa0zpeM/GItrJXiT4L9V4k1Y
DMHjPzrBm5/thOC/iK/81cjd4z9Mz7vJMnfgv55MHiZp++M/SrXLo0dq4L+X
ubJI7RnkPzhzyy0sXuC/dPa5PVU55D8SCbtn4FLgvzQDNAWhWeQ/23aaUWRI
4L/X3yCf0HrkP5O8aeu3PuC/XoyAC+Sc5D842ig12zXgv8kIU0rbv+Q/zM/X
Ls4t4L8WVZhbtuPkP06ddtiQJuC/RnFQP3UI5T++QgUyIyDgv1tde/UXLuU/
HcCDO4Ua4L9TGRl+nlTlP2kV8vS2FeC/LqUp2Qh85T+kQlBeuBHgv+wArQZX
pOU/zUeed4kO4L+OLKMGic3lP+Qk3EAqDOC/FCgM2Z735T/p2Qm6mgrgv3zz
532YIuY/3GYn49oJ4L/Hjjb1dU7mP77LNLzqCeC/+Pn3Pjd75j+OCDJFygrg
vwo1LFvcqOY/TB0ffnkM4L8AQNNJZdfmP/gJ/Gb4DuC/2RrtCtIG5z+Szsj/
RhLgv5bFeZ4iN+c/G2uFSGUW4L82QHkEV2jnP5HfMUFTG+C/uYrrPG+a5z/2
K87pECHgvyCl0Edrzec/SVBaQp4n4L9qjyglSwHoP4tM1kr7LuC/mEnz1A42
6D+6IEIDKDfgv6rTMFe2a+g/2MydayRA4L+eLeGrQaLoP+RQ6YPwSeC/dVcE
07DZ6D/erCRMjFTgvzFRmswDEuk/xeBPxPdf4L/PGqOYOkvpP5zsauwybOC/
UrQeN1WF6T9h0HXEPXngv7YdDahTwOk/E4xwTBiH4L8AV27rNfzpP7QfW4TC
leC/K2BCAfw46j9DizVsPKXgvzo5iemlduo/v87/A4a14L8t4kKkM7XqPyzq
uUufxuC/A1tvMaX06j+F3WNDiNjgv72jDpH6NOs//HCxUg==
           "]]}}, 
        {RGBColor[0.4151288484848485, 0.6920723333333333, 0.5626724242424243],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+QWabFuJ6b/C8dVuyEjjP1XBL9Pd
d+m/jepmOSws4z8fu/3W42bpv3897YHhD+M/WfMDeG1W6b+X6mhI6PPiPwFq
QrZ6Rum/1vHZjEDY4j8XH7mRCzfpvzpTQE/qvOI/nBJoCiAo6b/FDpyP5aHi
P5BETyC4Gem/diTtTTKH4j/ztG7T0wvpv06UM4rQbOI/xGPGI3P+6L9MXm9E
wFLiPwNRVhGW8ei/cYKgfAE54j+xfB6cPOXov7sAxzKUH+I/zOYexGbZ6L8s
2eJmeAbiP1iPV4kUzui/wwv0GK7t4T9RdsjrRcPov4CY+kg11eE/uZtx6/q4
6L9kf/b2Db3hP5D/Uogzr+i/bsDnIjil4T/XoWzC76Xov55bzsyzjeE/i4K+
mS+d6L/1UKr0gHbhP66hSA7zlOi/c6B7mp9f4T8//wogOo3ovxZKQr4PSeE/
PpsFzwSG6L/fTf5f0TLhP611OBtTf+i/z6uvf+Qc4T+JjqMEJXnov+VjVh1J
B+E/1OVGi3pz6L8hdvI4//HgP457Iq9Tbui/hOKD0gbd4D+3TzZwsGnovw2p
CupfyOA/TWKCzpBl6L+8yYZ/CrTgP1OzBsr0Yei/kkT4kgag4D/HQsNi3F7o
v44ZXyRUjOA/qhC4mEdc6L+wSLsz83jgP/sc5Ws2Wui/+dEMweNl4D+7Z0rc
qFjov2i1U8wlU+A/6vDn6Z5X6L/98o9VuUDgP4a4vZQYV+i/uIrBXJ4u4D+U
vsvcFVfov5x86OHUHOA/DgMSwpZX6L+jyATlXAvgP/eFkESbWOi/pN0szGz0
3z9PR0dkI1rov07eOsrC0t8/FEc2IS9c6L9EkzPEu7HfP0iFXXu+Xui/hfwW
uleR3z/tAb1y0WHovxYa5auWcd8//7xUB2hl6L/y652ZeFLfP3+2JDmCaei/
GnJBg/0z3z9u7iwIIG7ov5Csz2glFt8/zGRtdEFz6L9Sm0hK8PjeP5gZ5n3m
eOi/YD6sJ17c3j/RDJckD3/ov7qV+gBvwN4/ez6AaLuF6L9joTPWIqXeP5Ku
oUnrjOi/V2FXp3mK3j8YXfvHnpTov5jVZXRzcN4/kSnEhw==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAGF37x56U6L+Y1WV0c3DePw5KjePV
nOi/Jf5ePRBX3j9xdVeckKXovwDbQgJQPt4/RN9Z8s6u6L8nbBHDMibeP4SH
lOWQuOi/mbHKf7gO3j8ybgd21sLov1qrbjjh990/UJOyo5/N6L9mWf3srOHd
P972lW7s2Oi/wLt2nRvM3T/YmLHWvOTov2XS2kktt90/QXkF3BDx6L9YnSny
4aLdPxqYkX7o/ei/lxxjljmP3T9g9VW+QwvpvyNQhzY0fN0/FpFSmyIZ6b/7
N5bS0WndPzprhxWFJ+m/INSPahJY3T/Mg/Qsazbpv5EkdP71Rt0/zdqZ4dRF
6b9PKUOOfDbdPzxwdzPCVem/WuL8GaYm3T8bRI0iM2bpv7FPoaFyF90/aFbb
rid36b9WcTAl4gjdPyKnYdifiOm/RkeqpPT63D9MNiCfm5rpv4PRDiCq7dw/
5QMXAxut6b8NEF6XAuHcP+wPRgQewOm/4wKYCv7U3D9gWq2ipNPpvwaqvHmc
ydw/RuNM3q7n6b92Bczk3b7cP5iqJLc8/Om/MhXGS8K03D9asDQtThHqvzrZ
qq5Jq9w/iPR8QOMm6r+QUXoNdKLcPyh3/fD7POq/Mn40aEGa3D82OLY+mFPq
vyFf2b6xktw/sDenKbhq6r9d9GgRxYvcP5t10LFbguq/5D3jX3uF3D/y8THX
gprqv7g7SKrUf9w/uqzLmS2z6r/a7Zfw0HrcP/ClnflbzOq/R1TSMnB23D+V
3af2DebqvwFv93Cyctw/qFPqkEMA678IPgerl2/cPyoIZcj8Guu/XMEB4R9t
3D8a+xedOTbrv/345hJLa9w/eSwDD/pR67/p5LZAGWrcP0acJh4+buu/JIVx
aopp3D+CSoLKBYvrv6rZFpCeadw/LDcWFFGo67974qaxVWrcP0Zi4vofxuu/
nJ8hz69r3D/Ny+Z+cuTrvwcRh+isbdw/w3MjoEgD7L/ANtf9THDcPyhamF6i
Iuy/xRASD5Bz3D/7fkW6f0LsvxefNxx2d9w/PeIqs+Bi7L+04Ucl/3vcP+6D
SEnFg+y/n9hCKiuB3D8NZJ58LaXsv9eDKCv6htw/xk6+jQ==
           "]]}}, 
        {RGBColor[0.4526351818181818, 0.7095047272727273, 0.5131467272727274],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADWSefC2l7L/Xgygr+obcPzXuP1J3
Y+y/Ugchji5v3D/6FkErtyLsv+TsuoDWWNw/X96hB+3i67+PNPYC8kPcP2NE
YucYpOu/Ud7SFIEw3D8FSYLKOmbrvynqULaDHtw/RuwBsVIp678ZWHDn+Q3c
PyYu4Zpg7eq/ISgxqOP+2z+mDiCIZLLqv0Jak/hA8ds/xI2+eF546r957pbY
EeXbP4GrvGxOP+q/x+Q7SFba2z/cZxpkNAfqvyw9gkcO0ds/1sLXXhDQ6b+q
92nWOcnbP2689Fzimem/PhTz9NjC2z+lVHFeqmTpv+mSHaPrvds/e4tNY2gw
6b+sc+ngcbrbP/BgiWsc/ei/iLZWrmu42z8F1SR3xsrov3pbZQvZt9s/uecf
hmaZ6L+FYhX4ubjbPwuZepj8aOi/pstmdA672z/76DSuiDnov+CWWYDWvts/
itdOxwoL6L8uxO0bEsTbP7hkyOOC3ee/lVMjR8HK2z+DkKED8bDnvxRF+gHk
0ts/7lraJlWF57+qmHJMetzbP/jDck2vWue/WE6MJoTn2z+iy2p3/zDnvx1m
R5AB9Ns/6nHCpEUI57/536OJ8gHcP9C2edWB4Oa/7ruhElcR3D9VmpAJtLnm
v/j5QCsvItw/eRwHQdyT5r8bmoHTejTcPzw93Xv6bua/VZxjCzpI3D+e/BK6
Dkvmv6cA59JsXdw/nlqo+xgo5r8QxwsqE3TcPz1XnUAZBua/ke/REC2M3D98
8vGID+Xlvyp6OYe6pdw/WCym1PvE5b/aZkKNu8DcP9UEuiPepeW/oLXsIjDd
3D/vey12toflv35mOEgY+9w/qJEAzIRq5b90eSX9cxrdPwBGMyVJTuW/ge6z
QUM73T/3mMWBAzPlv6bF4xWGXd0/jYq34bMY5b/i/rR5PIHdP8EaCUVa/+S/
NponbWam3T+USbqr9ubkv6GXO/ADzd0/BhfLFYnP5L8k9/ACFfXdPxaDO4MR
ueS/vbhHpZke3j/FjQv0j6Pkv2zcP9eRSd4/FDc7aASP5L81YtmY/XXePwB/
yt9ue+S/FUoU6tyj3j+MZblaz2jkvwyU8Mov094/aATCSg==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAjGW5Ws9o5L8MlPDKL9PeP7bqB9kl
V+S/HEBuO/YD3z+ADrZackbkv0JOjTswNt8/6NDD37Q25L+Avk3L3WnfP+8x
MWjtJ+S/1JCv6v6e3z+UMf7zGxrkv0LFspmT1d8/2M8qg0AN5L/jrSvszQbg
P7wMtxVbAeS/MKpO04sj4D8+6KKra/bjv4pXQoIDQeA/X2LuRHLs47/vtQb5
NF/gPx97meFu4+O/YMWbNyB+4D99MqSBYdvjv92FAT7FneA/eogOJUrU479l
9zcMJL7gPxZ92MsozuO/+Rk/ojzf4D9REAJ2/cjjv5ntFgAPAeE/KkKLI8jE
479Ecr8lmyPhP6ISdNSIweO/+6c4E+FG4T+6gbyIP7/jv76OgsjgauE/b49k
QOy947+NJp1Fmo/hP8Q7bPuOveO/Zm+Iig214T+4htO5J77jv01pRJc62+E/
SnCae7a/478/FNFrIQLiP3r4wEA7wuO/PHAuCMIp4j9KH0cJtsXjv0R9XGwc
UuI/ueQs1SbK479aO1uYMHviP8ZIcqSNz+O/e6oqjP6k4j9ySxd36tXjv6fK
ykeGz+I/vewbTT3d47/fmzvLx/riP6YsgCaG5eO/Ix59FsMm4z8wC0QDxe7j
v3NRjyl4U+M/Vohn4/n447/ONXIE54DjPxyk6sYkBOS/NMslpw+v4z+AXs2t
RRDkv6YRqhHy3eM/hbcPmFwd5L8mCf9Djg3kPyavsYVpK+S/r7EkPuQ95D9o
RbN2bDrkv0QLGwD0buQ/SHoUa2VK5L/mFeKJvaDkP8ZN1WJUW+S/lNF520DT
5D/kv/VdOW3kv0w+4vR9BuU/oNB1XBSA5L8RXBvWdDrlP/x/VV7lk+S/4Sol
fyVv5T/1zZRjrKjkv76q/++PpOU/jrozbGm+5L+m26ootNrlP8ZFMngc1eS/
mb0mKZIR5j+bb5CHxezkv5hQc/EpSeY/EThOmmQF5b+jlJCBe4HmPyWfa7D5
HuW/uYl+2Ya65j/XpOjJhDnlv9wvPflL9OY/KEnF5gVV5b8Jh8zgyi7nPxiM
AQd9ceW/Q48skANq5z+nbZ0q6o7lv4lIXQf2pec/UD26VA==
           "]]}}, 
        {RGBColor[0.4526351818181818, 0.7095047272727273, 0.5131467272727274],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADWSefC2l7L/Xgygr+obcP6QPXKEm
Vuy/oUcqZjQO3D9asSkW4wjsvwzJCVwXlts/LEkH22K9678XCMcMox7bPx3X
9O+lc+u/wQRieNen2j8qW/JUrCvrvwy/2p60Mdo/VtX/CXbl6r/2NjGAOrzZ
P59FHQ8Doeq/gWxlHGlH2T8HrEpkU17qv61fd3NA09g/iwiICWcd6r94EGeF
wF/YPy1b1f493um/4340Uuns1z/tozJE2KDpv+yq39m6etc/yeKf2TVl6b+W
lGgcNQnXP8QXHb9WK+m/4DvPGViY1j/bQqr0OvPov8qgE9IjKNY/EWRHeuK8
6L9UwzVFmLjVP2N79E9NiOi/f6M1c7VJ1T/ViLF1e1Xov0pBE1x729Q/ZYx+
62wk6L+0nM7/6W3UPxGGW7Eh9ee/wLVnXgEB1D/bdUjHmcfnv2qM3nfBlNM/
wVtFLdWb57+zIDNMKinTP8Y3UuPTcee/nnJl2zu+0j/mCW/plUnnvyiCdSX2
U9I/KNKbPxsj579RT2MqWerRP4SQ2OVj/ua/G9ou6mSB0T8ARSXcb9vmv4Ui
2GQZGdE/mO+BIj+65r+PKF+adrHQP06Q7rjRmua/OezDinxK0D8iJ2ufJ33m
vwbbDGxWyM8/E7T31UBh5r/ZWE04Bf3OPyI3lFwdR+a/7VFJegUzzj9OsEAz
vS7mvz/GADJXas0/mB/9WSAY5r/UtXNf+qLMPwCFydBGA+a/pyCiAu/cyz+G
4KWXMPDlv70GjBs1GMs/KDKSrt3e5b8QaDGqzFTKP+l5jhVOz+W/pESSrrWS
yT/Ht5rMgcHlv3acrijw0cg/w+u203i15b+Jb4YYfBLIP9wV4yozq+W/3b0Z
fllUxz8SNh/SsKLlv3KHaFmIl8Y/Z0xryfGb5b9FzHKqCNzFP9lYxxD2luW/
V4w4cdohxT9oWzOovZPlv6vHua39aMQ/FVSvj0iS5b8+fvZfcrHDP99CO8eW
kuW/D7Duhzj7wj/GJ9dOqJTlvyNdoiVQRsI/zAKDJn2Y5b91hRE5uZLBP+/T
Pk4VnuW/Byk8wnPgwD8wmwrGcKXlv9pHIsF/L8A/yBGw4w==
          "]], 
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAMJsKxnCl5b/aRyLBfy/AP45Y5o2P
ruW/18OHa7r/vj8KDNKlcbnlv33uQUAYo70/pLXNDRfG5b+iD3MAGUm8P1tV
2cV/1OW/RicbrLzxuj8w6/TNq+Tlv2s1OkMDnbk/IncgJpv25b8OOtDF7Eq4
PzL5W85NCua/NTXdM3n7tj9gcafGwx/mv9omYY2orrU/qt8CD/025r/8DlzS
emS0PxJEbqf5T+a/ou3NAvAcsz+ZnumPuWrmv8TCth4I2LE/Pe90yDyH5r9o
jhYmw5WwP/41EFGDpea/F6HaMUKsrj/ccrspjcXmv10Sdu5DMqw/2KV2Ulrn
5r+jcP+Bi72pP/POQcvqCue/6Lt27BhOpz8r7hyUPjDnvzD02y3s46Q/gAMI
rVVX579zGS9GBX+iP/IOAxYwgOe/wStwNWQfoD+CEA7PzarnvwxWPvcRips/
MAgp2C7X57+ULngx59+WP/z1UzFTBei/HuGNGUhAkj/k2Y7aOjXov1Tb/l5p
Vos/7LPZ0+Vm6L9kqJnmWUGCPw+ENB1Umui/4FLYk8OCcj9RSp+2hc/ovwCg
lz1CoCU/sAYaoHoG6b/gcI+4kP5wvy65pNkyP+m/ZBvOZfo/gb/IYT9jrnnp
v1zKnBOV64m/gADqPO216b+q4tkyDEGRv1aVpGbv8+m/JoYJLsKBlb9HIG/g
tDPqv5BPXXvst5m/WaFJqj116r8OP9Uai+Odv4cYNMSJuOq/Rao4Bk8Cob/T
hS4umf3qvwTIGKiSDaO/POk46GtE67/D+ApzkBOlv8RCU/IBjeu/gzwPZ0gU
p79okn1MW9frv0CTJYS6D6m/K9i39ncj7L8B/U3K5gWrvwoUAvFXcey/wXmI
Oc32rL8IRlw7+8Dsv4AJ1dFt4q6/I27G1WES7b8g1plJZGSwv1yMQMCLZe2/
ATHSvu5Usb+woMr6eLrtv16Vk0jWQrK/JatkhSkR7r8+A97mGi6zv7arDmCd
ae6/n3qxmbwWtL9kosiK1MPuv3/7DWG7/LS/MI+SBc8f77/ghfM8F+C1vxty
bNCMfe+/wRliLdDAtr8iS1brDd3vvyK3WTLmnre/wze4Wg==
           "]]}}, 
        {RGBColor[0.4526351818181818, 0.7095047272727273, 0.5131467272727274],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADWSefC2l7L/Xgygr+obcPyv2MTdd
Rey/NqC0JKFR3D+mnu0+4Obrv6gQEb+yHtw/f13Rk7aJ678v1T36Lu7bP7My
3TXgLeu/ye061hXA2z9FHhElXdPqv3VaCFNnlNs/MyBtYS166r81G6ZwI2vb
P3848epQIuq/CTAUL0pE2z8oZ53Bx8vpv/CYUo7bH9s/LKxx5ZF26b/rVWGO
1/3aP44HblavIum/+WZALz7e2j9MeZIUINDovxrM73APwdo/ZgHfH+R+6L9O
hW9TS6baP96fU3j7Lui/lZK/1vGN2j+yVPAdZuDnv/Dz3/oCeNo/5B+1ECST
579eqdC/fmTaP3EBolA1R+e/4LKRJWVT2j9c+bbdmfzmv3UQIyy2RNo/pQf0
t1Gz5r8fwoTTcTjaP0ksWd9ca+a/28e2G5gu2j9KZ+ZTuyTmv6whuQQpJ9o/
qLibFW3f5b+Nz4uOJCLaP2IgeSRym+W/hNEuuYof2j93nn6Ayljlv4wnooRb
H9o/7DKsKXYX5b+o0eXwliHaP7zdASB11+S/2c/5/Twm2j/qnn9jx5jkvxwi
3qtNLdo/dXYl9Gxb5L9zyJL6yDbaP1xk89FlH+S/3cIX6q5C2j+gaOn8seTj
v1oRbXr/UNo/QIMHdVGr47/rs5KrumHaPz20TTpEc+O/j6qIfeB02j+X+7tM
ijzjv0f1TvBwito/TllSrCMH478SlOUDbKLaP2HNEFkQ0+K/8IZMuNG82j/T
V/dSUKDiv+LNgw2i2do/n/gFmuNu4r/oaIsD3fjaP8mvPC7KPuK/AFhjmoIa
2z9QfZsPBBDivyubC9KSPts/M2EiPpHi4b9sMoSqDWXbP3Nb0blxtuG/vh3N
I/ON2z8QbKiCpYvhvyRd5j1Duds/CpOnmCxi4b+c8M/4/ebbP2DQzvsGOuG/
KdiJVCMX3D8TJB6sNBPhv8oTFFGzSdw/I46VqbXt4L99o27urX7cP5AONfSJ
yeC/RIeZLBO23D9ZpfyLsabgvx2/lAvj79w/f1LscCyF4L8KS2CLHSzdPwIW
BKP6ZOC/Civ8q8Jq3T/h70MiHEbgvyBfaG3Sq90//iq4LA==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA4e9DIhxG4L8gX2ht0qvdPx7gq+6Q
KOC/R+ekz0zv3T+35jsIWQzgv4LDsdIxNd4/WAfo3eji37/Q8452gX3eP/5t
qEXGr9+/Mng8uzvI3j9eAblHSn/fv6dQuqBgFd8/dcEZ5HRR378vfQgn8GTf
P0iuyhpGJt+/yv0mTuq23z/Tx8vrvf3evzzpCounBeA/GA4dV9zX3r+efWo/
DzHgPxaBvlyhtN6/CDwyRKxd4D/OILD8DJTev30kYpl+i+A/QO3xNh923r/8
Nvo+hrrgP2rmgwvYWt6/hHP6NMPq4D9ODGZ6N0LevxXaYns1HOE/7F6Ygz0s
3r+wajMS3U7hP0TeGifqGN6/VSVs+bmC4T9Viu1kPQjevwQKDTHMt+E/H2MQ
PTf63b+8GBa5E+7hP6Nog6/X7t2/fVGHkZAl4j/gmka8Hubdv0q0YLpCXuI/
2PlZYwzg3b8gQaIzKpjiP4iFvaSg3N2//vdL/UbT4j/yPXGA29vdv+bYXReZ
D+M/FiN19rzd3b/Z49eBIE3jP/I0yQZF4t2/1Ri6PN2L4z+Ic22xc+ndv9t3
BEjPy+M/2N5h9kjz3b/qALej9gzkP+J2ptXE/92/BLTRT1NP5D+mOztP5w7e
vyeRVEzlkuQ/Iy0gY7Ag3r9TmD+ZrNfkP1lLVREgNd6/icmSNqkd5T9HltpZ
Nkzev8gkTiTbZOU/8A2wPPNl3r8SqnFiQq3lP1Ky1blWgt6/ZVn98N725T9v
g0vRYKHev8Iy8c+wQeY/RIERgxHD3r8oNk3/t43mP9SrJ89o596/mWMRf/Ta
5j8cA461Zg7fvxO7PU9mKec/HodENgs437+XPNJvDXnnP9s3S1FWZN+/JOjO
4OnJ5z9QFaIGSJPfv7u9M6L7G+g/fh9JVuDE379cvQC0Qm/oP2ZWQEAf+d+/
Buc1Fr/D6D8E3UNiAhjgv7k608hwGek/MqWPccg04L94uNjLV3DpP7yDA87h
UuC/PmBGH3TI6T+jeJ93TnLgvxAyHMPFIeo/5oNjbg6T4L/qLVq3THzqP4il
T7IhteC/z1MA/AjY6j+F3WNDiNjgv72jDpH6NOs/J423/Q==
           "]]}}, 
        {RGBColor[0.4526351818181818, 0.7095047272727273, 0.5131467272727274],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADWSefC2l7L/Xgygr+obcP2fiz0IV
dOy/884YbnAs3D/F7RuMJUTsv67X5muP0ts/JYaCWF4V7L8KnpIkV3nbP4er
A6i/5+u/BiIcmMcg2z/sXZ96Sbvrv6Jjg8bgyNo/Up1V0PuP67/dYsivonHa
P7tpJqnWZeu/uh/rUw0b2j8pwxEF2jzrvzaa67Igxdk/l6kX5AUV679S0snM
3G/ZPwcdOEZa7uq/DsiFoUEb2T96HXMr18jqv2l7HzFPx9g/7qrIk3yk6r9k
7JZ7BXTYP2bFOH9Kgeq//xrsgGQh2D/fbMPtQF/qvzoHH0Fsz9c/W6Fo318+
6r8WsS+8HH7XP9hiKFSnHuq/khge8nUt1z9asQJMFwDqv6096uJ33dY/34z3
xq/i6b9pIJSOIo7WP2T1BsVwxum/xcAb9XU/1j/s6jBGWqvpv8EegRZy8dU/
dm11SmyR6b9cOsTyFqTVPwN91NGmeOm/lxPliWRX1T+QGU7cCWHpv3Kq49ta
C9U/IkPiaZVK6b/t/r/o+b/UP7X5kHpJNem/CBF6sEF11D9MPVoOJiHpv8Pg
ETMyK9Q/5A0+JSsO6b8dbodwy+HTP35rPL9Y/Oi/GbnaaA2Z0z8bVlXcruvo
v7TBCxz4UNM/us2IfC3c6L/uhxqKiwnTP1zS1p/Uzei/yQsHs8fC0j8BZD9G
pMDov0RN0ZasfNI/p4LCb5y06L9gTHk1OjfSP08uYBy9qei/Ggn/jnDy0T/6
ZhhMBqDov3aDYqNPrtE/qCzr/neX6L9xu6Ny12rRP1l/2DQSkOi/DLHC/Aco
0T8LX+Dt1Inov0Zkv0Hh5dA/wMsCKsCE6L8h1ZlBY6TQP3bFP+nTgOi/nANS
/I1j0D8wTJcrEH7ov7fv53FhI9A/618J8XR86L/kMrdEu8fPP6oAljkCfOi/
mAFaGwVKzz9qLj0FuHzov45LuGegzc4/LOn+U5Z+6L/DENIpjVLOP/Iw2yWd
gei/N1GnYcvYzT+4BdJ6zIXov+0MOA9bYM0/gWfjUiSL6L/gQ4QyPOnMP01W
D66kkei/FPaLy25zzD8c0lWMTZnov4ojT9ry/ss/AuG2ZA==
          "]], 
         {RGBColor[
          0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAHNJVjE2Z6L+KI0/a8v7LP+3atu0e
oui/PszNXsiLyz/AcDLSGKzovzTwB1nvGcs/lpPIOTu36L9nj/3IZ6nKP21D
eSSGw+i/3KmurjE6yj9IgESS+dDov5A/GwpNzMk/JEoqg5Xf6L+FUEPbuV/J
PwOhKvdZ7+i/utwmInj0yD/khEXuRgDpvy/kxd6Hisg/yPV6aFwS6b/iZiAR
6SHIP67zymWaJem/2GQ2uZu6xz+WfjXmADrpvwveB9efVMc/gJa66Y9P6b9+
0pRq9e/GP247WnBHZum/MkLdc5yMxj9cbRR6J37pvyYt4fKUKsY/TizpBjCX
6b9Zk6Dn3snFP0J42BZhsem/znQbUnpqxT86UeKpuszpv4LRUTJnDMU/MrcG
wDzp6b91qUOIpa/EPyyqRVnnBuq/qfzwUzVUxD8qKp91uiXqvx3LWZUW+sM/
KjcTFbZF6r/RFH5MSaHDPyzRoTfaZuq/xNldec1Jwz8w+ErdJonqv/YZ+Ruj
88I/N6wOBpys6r9q1U80yp7CP0Ht7LE50eq/HQxiwkJLwj9Mu+Xg//bqvxC+
L8YM+cE/Whb5ku4d679D67g/KKjBP2r+JsgFRuu/tpP9LpVYwT99c2+ARW/r
v2q3/ZNTCsE/k3XSu62Z679cVrluY73AP6kEUHo+xeu/j3Awv8RxwD/CIOi7
9/HrvwIGY4V3J8A/3smagNkf7L9qLaKC97y/P/z/Z8jjTuy/UEX15aItvz8d
w0+TFn/sv7RTvzTxoL4/QBNS4XGw7L+ZWABv4ha+P2bwbrL14uy//lO4lHaP
vT+OWqYGohbtv+NF56WtCr0/uFH43XZL7b9HLo2ih4i8P+XVZDh0ge2/LA2q
igQJvD8U5+sVmrjtv5DiPV4kjLs/RYWNdujw7b90rkgd5xG7P3iwSVpfKu6/
2HDKx0yauj+uaCDB/mTuv74pw11VJbo/560Rq8ag7r8i2TLfALO5PyKAHRi3
3e6/BX8ZTE9DuT9e30MI0Bvvv2kbd6RA1rg/nMuEexFb779Mrkvo1Gu4P99E
4HF7m++/sDeXFwwEuD8jS1brDd3vv5O3WTLmnrc/4iS74g==
           "]]}}, 
        {RGBColor[0.4526351818181818, 0.7095047272727273, 0.5131467272727274],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADWSefC2l7L/Xgygr+obcP0gcrU66
juy/26eDrihV3D84GqN513jsv2nkIQnHI9w/3V2A/YRj7L+COQM71fLbPzfn
RNrCTuy/JKcnRFPC2z9GtvAPkTrsv08tjyRBkts/C8uDnu8m7L8FzDncnmLb
P4Ql/oXeE+y/Q4Mna2wz2z+zxV/GXQHsvw5TWNGpBNs/l6uoX23v679hO8wO
V9baPy/X2FEN3uu/PTyDI3So2j98SPCcPc3rv6NVfQ8Be9o/ff/uQP6867+S
h7rS/U3aPzX81D1Preu/DNI6bWoh2j+gPqKTMJ7rvw81/t5G9dk/wcZWQqKP
67+csAQok8nZP5aU8kmkgeu/skROSE+e2T8iqHWqNnTrv1Tx2j97c9k/ZAHg
Y1ln679/tqoOF0nZP1igMXYMW+u/M5S9tCIf2T8DhWrhT0/rv3GKEzKe9dg/
Ya+KpSNE6784mayGiczYP3QfksKHOeu/isCIsuSj2D891YA4fC/rv2QAqLWv
e9g/u9BWBwEm67/IWAqQ6lPYP+0RFC8WHeu/t8mvQZUs2D/WmLivuxTrvy9T
mMqvBdg/cmVEifEM678y9cMqOt/XP8R3t7u3Beu/va8yYjS51z/KzxFHDv/q
v9OC5HCek9c/hW1TK/X46r9ybtlWeG7XP/dQfGhs8+q/m3IRFMJJ1z8ceoz+
c+7qv02PjKh7Jdc/9+iD7Qvq6r+KxEoUpQHXP4edYjU05uq/UBJMVz7e1j/M
lyjW7OLqv6F4kHFHu9Y/xdfVzzXg6r979xdjwJjWP3RdaiIP3uq/3o7iK6l2
1j/YKObNeNzqv8s+8MsBVdY/8TlJ0nLb6r9CB0FDyjPWP72Qky/92uq/Q+jU
kQIT1j9ALcXlF9vqv87hq7eq8tU/eA/e9MLb6r/i88W0wtLVP2U33lz+3Oq/
gB4jiUqz1T8GpcUdyt7qv6hhwzRClNU/XViUNybh6r9avaa3qXXVP2hRSqoS
5Oq/lDHNEYFX1T8okOd1j+fqv1i+NkPIOdU/nRRsmpzr6r+nY+NLfxzVP8fe
1xc68Oq/fyHTK6b/1D+m7iruZ/Xqv+L3BeM849Q/OunChg==
          "]], 
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApu4q7mf16r/i9wXjPOPUPztEZR0m
++q/zuZ7cUPH1D+E34aldAHrv0PuNNe5q9Q/gsCPhlMI679CDjEUoJDUPzbn
f8DCD+u/zEZwKPZ11D+eU1dTwhfrv9+X8hO8W9Q/vAUWP1Ig6797AbjW8UHU
P479u4NyKeu/ooPAcJco1D8UO0khIzPrv1IeDOKsD9Q/UL69F2Q967+M0Zoq
MvfTP0KHGWc1SOu/UJ1sSiff0z/olVwPl1Prv52BgUGMx9M/Q+qGEIlf6790
ftkPYbDTP1SEmGoLbOu/1ZN0taWZ0z8YZJEdHnnrv7/BUjJag9M/kolxKcGG
678zCHSGfm3TP8D0OI70lOu/MGfYsRJY0z+lpedLuKPrv7nef7QWQ9M/Ppx9
Ygyz67/KbmqOii7TP4rY+tHwwuu/ZheYP24a0z+OWl+aZdPrv4vYCMjBBtM/
RiKru2rk6786srwnhfPSP7Mv3jUA9uu/cqSzXrjg0j/UgvgIJgjsvzSv7Wxb
ztI/rBv6NNwa7L+A0mpSbrzSPzj64rkiLuy/Vg4rD/Gq0j94HrOX+UHsv7Zi
LqPjmdI/bohqzmBW7L+ez3QORonSPxk4CV5Ya+y/ElX+UBh50j95LY9G4IDs
vw7zympaadI/jmj8h/iW7L+VqdpbDFrSP1fpUCKhrey/pXgtJC5L0j/Vr4wV
2sTsvz9gw8O/PNI/CryvYaPc7L9jYJw6wS7SP/ENugb99Oy/EHm4iDIh0j+P
pasE5w3tv0eqF64TFNI/4YKEW2En7b8I9LmqZAfSP+qlRAtsQe2/U1affiX7
0T+mDuwTB1ztvyfRxylW79E/F716dTJ37b+GZDOs9uPRPz6x8C/uku2/bRDi
BQfZ0T8Z601DOq/tv9/U0zaHztE/qmqSrxbM7b/asQg/d8TRP/AvvnSD6e2/
X6eAHte60T/rOtGSgAfuv261O9WmsdE/movLCQ4m7r8H3Dlj5qjRP/4hrdkr
Re6/KRt7yJWg0T8X/nUC2mTuv9Vy/wS1mNE/5R8mhBiF7r8L48YYRJHRP2mH
vV7npe6/y2vRA0OK0T+hNDySRsfuvxQNH8axg9E/iD21tA==
           "]]}}, 
        {RGBColor[
         0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAACGSefC2l7L/Egygr+obcv25mcKHM
E+y/ORgr62/027+fcTTN/YTrvw4OzqfvYNu/noXq/8D46r9FZRFheczav2ii
kjkWb+q/3R31Fg032r/+xyx6/efpv9Y3ecmqoNm/YPa4wXZj6b8ws514UgnZ
v44tNxCC4ei/7I9iJARx2L+JbadlH2LovwnOx8y/19e/ULYJwk7l57+Ibc1x
hT3Xv+IHXiUQa+e/Z25zE1Wi1r9BYqSPY/Pmv6fQubEuBta/a8XcAEl+5r9I
lKBMEmnVv2ExB3nAC+a/TLkn5P/K1L8jpiP4yZvlv68/T3j3K9S/siMyfmUu
5b91JxcJ+YvTvw6qMguTw+S/mnB/lgTr0r81OSWfUlvkvyMbiCAaSdK/KdEJ
OqT1478NJzGnOabRv+lx4NuHkuO/WJR6KmMC0b9zG6mE/THjvwNjZKqWXdC/
ys1jNAXU4r8eJt1NqG/Pv+6IEOueeOK/+kgyQDcizr/cTK+oyh/iv5YuyCva
0sy/lxlAbYjJ4b/21p4QkYHLvx7vwjjYdeG/GkK27lsuyr9yzTcLuiThv/9v
DsY62ci/kbSe5C3W4L+mYKeWLYLHv32k98QziuC/ERSBYDQpxr81nUKsy0Dg
vz6KmyNPzsS/cj3/NOvz378tw/bffXHDvxFSXR9ja9+/3r6SlcASwr9JeJ8X
/+fev1J9b0QXssC/GbDFHb9p3r8Q/RnZA5++v4H5zzGj8N2//4TWGwHWu7+D
VL5Tq3zdv32SFFEmCbm/HMGQg9cN3b92JdR4czi2v0w/R8EnpNy/9z0Vk+hj
s78Vz+EMnD/cv/zb15+Fi7C/dnBgZjTg278I/zc+lV6rv28jw83whdu/IlHD
IW+epb8B6AlD0TDbv6xco9QxrZ+/Kr40xtXg2r8QLcYvJQ6Uv+ulQ1f+ldq/
ACfeqXC/gL9Enzb2SlDav8B/D9+l8Go/NqoNo7sP2r/AulkFhFaOP7/GyF1Q
1Nm/uLRxf88Hmz/i9GcmCZ7Zv/g6GJneeaM/nDTr/OVs2b+MkHSNhXepP+2F
UuHmQNm/GNvNnNx8rz/Y6J3TCxrZv04NkuPxxLI/vXrH+Q==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA2Oid0wsa2b9ODZLj8cSyP1pdzdNU
+Ni/i6c7hk3PtT914+DhwdvYv0O8YzaB3bg/KHvY/VLE2L93Swr0jO+7P3Ik
tCcIsti/I1Uvv3AFvz9V33Nf4aTYv6ds6UuWD8E/0KsXpd6c2L/4a/o+YJ7C
P+SJn/j/mdi/hKjKOBYvxD+PeQtaRZzYv1IiWjm4wcU/0npbya6j2L9d2ahA
RlbHP66Nj0Y8sNi/pM22TsDsyD8isqfR7cHYvyv/g2Mmhco/LuijasPY2L/u
bRB/eB/MP9IvhBG99Ni/8Blcoba7zT8OiUjG2hXZvy8DZ8rgWc8/4/PwiBw8
2b/VlBh9+3zQP09wfVmCZ9m/skZdmPxN0T9U/u03DJjZvy+XAbfzH9I/8J1C
JLrN2b9IhgXZ4PLSPyRPex6MCNq//xNp/sPG0z/yEZgmgkjav1hALCedm9Q/
V+aYPJyN2r9PC09TbHHVP1TMfWDa19q/5XTRgjFI1j/pw0aSPCfbvxh9s7Xs
H9c/F83z0cJ727/sI/XrnfjXP93nhB9t1du/XmmWJUXS2D87FPp6OzTcv29N
l2LirNk/MFJT5C2Y3L8e0PeidYjaP7+hkFtEAd2/bfG35v5k2z/mArLgfm/d
v1qx1y1+Qtw/pHW3c93i3b/nD1d48yDdP/v5oBRgW96/EQ02xl4A3j/nj27D
Btnev9eodBfA4N4/bzcggNFb379B4xJsF8LfP4zwtUrA49+/I14IYjJS4D+i
3ZeRaTjgv/YZtw/Uw+A/ysvGBIWB4L8ZpRW/8DXhP73C534yzeC/i/8jcIio
4T99wvr/cRvhv0sp4iKbG+I/Ccv/h0Ns4b9cIlDXKI/iP2Hc9hanv+G/vOpt
jTED4z+F9t+snBXiv2yCO0W1d+M/dRm7SSRu4r9r6bj+s+zjPzJFiO09yeK/
uB/muS1i5D+4eUeY6Sbjv1Ulw3Yi2OQ/Dbf4SSeH479C+k81kk7lPy79mwL3
6eO/fp6M9XzF5T8ZTDHCWE/kvwoSebfiPOY/0qO4iEy35L/kVBV7w7TmP1YE
MlbSIeW/D2dhQB8t5z+nbZ0q6o7lv4lIXQf2pec/oxnFpQ==
           "]]}}, 
        {RGBColor[
         0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwVjntMU2cAxRkdEV2ghQwI84UoVVQSFFIwCqugCGgUUOZ8YcSxCMxaASFq
UxRSa3xRn1QsdKCAK1hXNUg2w9nYRFR8MUDA71ZbEO9379WAgjhervvj5OQk
J+d3ZqXuSUpzdnJyCnHof3f9oUwVVCng78J5C0aOENDC2Li7hQJOdEbNX3CY
INw+/+arVAHltlUBnw8SDKtX/pYfJUBkDJuWm0cwe7M+pcJfgEXiKdZlEyB7
9s+xIgG1sufja5QEzQ/71Fm9PD5ItGztbgJ5qn1kZhMPrXHWk+uZBPPCvL9O
vMoj3V5lSc4gUMcXPHA5zqO4y1tXlk4QZZDOiFTw8NDszTjmyDkLReKRRB4d
vXVyX0ffa9SndImMB/3U57nasRfgmtY89g2PuD+/sM108C6v53TRTjyGIibV
FO8hKGKqP7r1cXinGFbeyCIQKkv/3dLCIWRD62JlLkFd7cOLQTc5NL0t7n96
gKB/YNHzghIOVUtjTW35BPp9Ty1bCji0RvRsP6ghMIdVB9ZncIgf3OVx9zjB
ovC6SP16Dm7buxosZxx/8sb7R5dx8FOH7lpeQqAZVMl7pBxUiQfccioIkn8N
DVrrwUHaZTLH1RCcNc25vWyMYrpX0+rGWwTLe9ZYzW8odri09DINBNs2X6u4
8g/FwC939hvuE7wRx3w54w+KJ876KRNtBK9EPqKp1yg+iVOKnW0EsTI/46US
CsUzdz/TW4Lp1Ts6jUcpgleZrgyOEKR+98I8N49Cvjc4wO7KwHvFSf+QHykM
68rLs3wYhCvzQhqTKVbYx3yrpAzud1+0ta2kWBoYfUolY9BcOLgwU0ahmpMz
MRTDQJap9dLMpZjSVpTh+T0Dz9NJl/x9KfrCLrQ+S2ewdSi5IforCvcErSxU
5eDpT6vZcRaHp+28sKSIwbf7XYhkgEV0aeB7WwWDdr2l404vi4TW7rig2wy6
P55XCJ0sTL/nlk5tYbD27I3LxkcskjaNC7U2BsGKSbkdjSxiahThtmEGh7Tn
XuvqWWgsD/Lr3a2Qv9z0/rGZheQnj78WS61Q7Nto0FWyoN1RzgmRVkyOP9nT
bmAhnkiJkGy0wmvb6L2ycywK2tNyspVW/AcxBdko
          "]], 
         {RGBColor[
          0.5362616060606061, 0.7332649696969697, 0.42078042424242423`], 
          ArrowBox[CompressedData["
1:eJwVkX9QjHsYxReJ2ZDbYOxIkprrjx3NtCPVXM1qot3mNmva1B1SlM0aKZWb
pcyyqUuW6koi0g5dvyKkLGlPpdGiiUpGpnbf911b37dmUduYJinf+8czz5x/
nuecz1mdlB6tmi0QCCR0/t9Ld/5orywl0PWqDmUdtODcfYN8RE8g3R1380ih
Bdmhx9WN+QR/GiQffKot6Fxw0dddS3DjwqQgvdmC86LBY4MaAnloze8J/Ra0
7zlwaFMWQUiFLPLbhAXqL+L53mkEmpq3ar9lVuQ0+Abr9hHMztyU91NixeTz
mHlqFcGnkauXNNFWkFlNmV27CaZF9rtlGVZszt+ZY0ogSJ9a9iyuxIrFEYGr
/eMJxOclbY0PrYiMiNizZjtBoCXkdWu3Fc784vCKvwj0A+KO1HErhHM8Wsvi
CMrNLvZ4NwbFpjf9S6kuyiXse08GJ41NpcupvlfYEl+5jsHQtyG+kuqxsaJt
T6UMjHsj+2/Re/H1yg4/JYMJT/v+QPrP0bWgxaZi8N9iY3kE9XND1ihxahi0
hb1I6qd+daJE3xg9A0Wd6+txmqcgfOJf1yoG8iRdZzHN++BVgVb4mMEjReDB
B5SH4LZwONHMoDDHp1ZJeR3m8rpdBxi8s285c5TyXJI9FjQzSv2eu+7id4Tg
Y3LsSvk8Fjf/DlqhpH203q3VfvZkKfe5b10KCLqjphO7AqieEXqHnCWYHxlm
cpezuGWQLXLSvlVVOZevJbIo0Jku+V8lGNp6Z/x4NosuQ2rr12qCkh2dHXVn
Wehnok9Jagl2NQ/5BFWzqK/IGJk0EsRqv39f2MQiKts8svkFQWb5pGx9L4uY
orjTSzoJ6t3Gl993sDAPerWl9BF49XEpGlcONbleV/6wU96C9oDSVRymt8b+
VjZKkKSryp0VzMGU/HJN1jRBaEJ6eHM0B8fjtJ4eNx7SUknhu1QOZ8IV3kYR
D7WvIyrgHw7lHmqh91oeTxZdKbIbOHiselritoGHWClVDD/nMLUvrOHoFh7t
o3166UcOSucczYFYHqeG1TLi5CBq/PnBlsIjY6PjBOtug6LFv2fgMA/tcEqw
WGyDc+7l1B2nedSN9qaZZTb8Alc03Oo=
           "]]}}, 
        {RGBColor[
         0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
         Thickness[Large], LineBox[CompressedData["
1:eJwdkw0s1GEcx4/ayUpo0pvqTLXCesHQjaVFjlFDKxHjpEnJekPNumZ2jUod
i+uFUdfbxHLyD9V9T1O7dEj8787f4d7Pyxgmq1iq59l+e/bb73l+v+/38+xx
52fHptuyWCzff/F/r86q9BwrMeM6L8lu7qkVDppg0xN3M5IFRdB7W4EZq7yU
MiGYasrtbLSg5cNDORVtgtuEflcL14KfgceNjlYj5j1WjkjazLh2krOjqsAI
JoFbfZdnRkTItCiVY0Sz6FR8frcJicqvGxPkBpQrSp0yjprQuOy18gbfgJxF
mSJu0IjYH5VVY2wDjviPX9930oiA0ntlBXV6+Gat2es1bgB/uLz28FE9VkkO
TLteMKBXW2OJsdFjisl+aftLj6JiKrSoXodu50epkwI9hCN9n34k6VDHU6xj
2Hp0zC2crnDU4ZZgtufTbR1eZCbxtcJhnKE4xQ0uOvB4ff6zM0MoY+4XcgOG
kStMjslJG0Icb2bWOWwIu7cuNPA1g3CmItNHYwdxeUtdfEvMILo8ntDyFC0O
Fp4Pu9qtxU3RfJj43AAkoRF5T2O04C3GUdn5DErS/aa5mgEszXq1Lby4H2yr
z2tu2gDamKUVm8Qa2H8JbZLMMBCQ91BDvDyTdUXIIIjwV+FN/WPR200MfhHe
NJKlkxkp7/pBEb59KHM9JLx4oh+XCM9eHBmQj07Z9GMP4fcdNazwMk2tBpOE
Vw/yhboCzwQNagmfHhjP3m62rNAgg/D4BlVjtJ9DuxqRxH8XjiW6z1UK1Ogg
fpXgpy37I96nxgHirwPzX22j/ixRQ0b8KMC556TrVKoQSPR/xnfZnla7BypI
id52OEacYmrPqOBN9H0E41sf0rpfhVdETxt2C+wnfNxUiCLzZXDxyhtePU8j
hMxrRUHA7zVpQzR8SH8K1yR3ytd/prGd9JOCfSEwMUhKw4/cr8eG6tl0xWMa
HHL+Gd7vbKdkFTTWknoVxjY+j94sovEt/H9eAgn5HzRYZEmD/gIIUdjC
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwtkw8s1GEYxw8NrYSmrIZYaUutFiZd6tFirkZGza5D4/xNydImNXVmt2ss
6ph/FRUnNX/GlV8547kMu0Iiv7vzc8f948K0mLRiVO+827N3z573fZ7v9/Pu
9eBnRCZZslgsn3/xf5ekV3nNFtHIIksaMOtaH7ZHTOMPzuKSY3ARdB7uobrK
aXxF8mpweb6UpKih8RrVdmvwzUuwyfSPDpDSKCT1ZsiVPCzb3Ufj+XTn4wfn
pCA89sc5YYJGLjlPwY6D2ZM7VmjkrV+gMnJk4C3YPO/tosRUcr8LND7NgbLT
SpRxFLsY6w+w/Wwy03BViadIv24Y7Toqs3msxD5xMjdnqAf2ljroBgeUGEr6
98F6v2XompUKR5hN5W4VCkhJsF2rABVyybxPEB3tsVwlUKF2by0tjxsAzZsw
X7seFfLJ/M8wc63w/fRWNWZR7gWtTl8gT6TL8+Kp8T3RMwz1rJASdYMafzEZ
ry1/DwNvXD7zw2IMTxB9I1C587zoZswY3lvvUlzQfoVE6ffUuI4x7CZ6R6Gj
uUb8zo1Bq33bvkk+0PBsSxrrtojBEKJfCQ4fg9okiwwWcGJtlutUYGf2bmEn
jOMg8aOGsiTfBbZ6HB3SG/eHFIxBY9DZ7LoIDV4k/hgIF94IvjOkwXLxSnDF
9XG4u6+J2x6hRYb41YC/52orX61FV+pc0kykFu6KLkdkJUxgDPE/AZGcUb+l
xQl8wVQK2ccmoTUtlq8RTeINwkMHQ8urV8rtdVgiWBruLdTBg2+jvT9jdfiW
8NFDUQEVlN+sQ6Xj0/jvAj2oNC+mIyz0G7z0kDJZ1hAepcddkjMLOzMNEFBc
WpLXpEc24WcA7s+q6llrA8b4zeVCohHabVsG7vMNGzyNwB/od+XJDfhMUeyQ
GmWC8MAFcby7EeWErwmEie4HqvOMaOCxnz/iTMG6/yWjvdm4wXsKsPOJnAoz
oee8/kg7exr6Fs3yYsqEwYT/NDipT5pqPaYwRZCP+kNmqCf/YwrzyXuY4S8Z
08J+
           "]]}}, 
        {RGBColor[
         0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
         Thickness[Large], LineBox[CompressedData["
1:eJwVjm1MU2cAhQtoEStWWMXGAQ5dhqIDlegkyEcgIiA0WElEUbbx4UcGYeJU
LG4yGEMX0OA6kFgCLKAulqiQqMzC6SoyEZSqgCiJcN97+75QNcqAFhpwu/tx
cvL8OE+OX3quOstZIpEEi/m/63JqAqznLCiM3e9qa2SoOnZebv7WgnHFFXVQ
FUPCVFz4R7ssSN975jPhDIPxTc+tlk0WmJVOxYoChvepypM3lRZsTfI4ZMxh
GIlaV7JoVkCjpLWffcVQVr9gqGNYgHvAdPcvyQz2E02al/cEHO15HP9HLINf
5/LMxKsCnrOt6ugwBteypCqfcgEhp6JIykaGpi6VYkeegOqzw44xf4Ylp5cO
9e8WYJcrdDYfhg36htdtYQLU8pH7PygY5Dtnt7l8KuBaaXR+kYxBn+NtbVwo
wPlkeIuTC4PUef5g4ziPFN58fNZBsWLxLbnLCx76Tocpb4JiqiKoos3IY26l
oSrzDUVZ+ZF9/Vd5qKYVU08sFMOSU0fiK3joYuYP/TlM8e61yuyt4cHcy+NW
vKRoV1nzEzJ4BKn0kf/2UcStUX3zIoHHCdcM414zhbZAc+XeZh6GkJsPNvRQ
1GzL/Vzmx+ODULnnpwcUmaXr5q7LeES4KY6q71OMRjZ7NdsITl9evVRnogjI
k2g8CIHB0BfxtVHkj5f5P35EYN+hnKhvpxgLtfmMthKsT54ITGsTfX01aV9e
JjjQnzXxm4GiVnAfC/6VQNebGxkn8sXsmLasQoLeKA+vfJFV2duHJnMIPgTG
f7dS3Jv4JdFcKkGgdnlqrOifevr7ZEA8wb68oodjoLCEzL17soWgtOtHk1T8
p1V+smnAn+BGtTK6toNCkivr+GIZwQCJSWj5W/wbBp1NSuBoWPQqqpvCszgU
nnYOviOHpxN7Ke5EFq4tYxzCtWmX+p5ReB8v59IHOaT9Ze0cGKSIWJXBVXZx
0BxcXJD8isI31mnt6rsctD933U4UKAzCwXavJg56X+/vTVYK5UzlpfRaDh1B
0u7mcYqNJedMsgscBltL631nKBaeVQV7lnCwGuokUieGunnP3x7L5+DYsnP0
kBvDpN3/n83ZHNwCq1O2ezL8Bx8S2ww=
          "]], 
         {RGBColor[0.3814987878787879, 0.6697256666666667, 0.613761393939394],
           ArrowBox[CompressedData["
1:eJwVUntMk3cULcbKNKO+iM4HQVCCNlqcFI2As2pwCDItQ2VgHVi3iGmsggqy
RueTqgwUDT7iHxSfhWGljQjMetIpgbGtvBxS0PL7gvj7vg+rDY9gBNHf/ri5
Ocm595x7coN26hN/GieRSMJZ/d8Hh0P7l+s4TFRcTf52GoVUu0a1JY2D//Uc
tWkORXvM/I7mJA6BJ961Hgqh0Jb8W2PewGFhz8cX9WEU9zJVvd3fcFjy6Ib+
UiRF9aNfUrKUHJbJuLMvYih+PXJ01i45B6XrgaJETTGhOj7YOo/hgODUbg1F
XAY5oJnJ+J0hU67toYgvWjX1ZxkHxRRHQnM2xaRw7fDfUqaHgenHT1EY49Wh
hR8J5lH7TstFiqddvibLEMEMY2BkcimFvef0riVvCSaVfnXNUElxQOvc/wUl
GFWaj891UIgp7gYVIRBVLQMrWigCGqsy2l0ErrrzHidHMblyW9JfbQRPn1A9
10+ByQ7jLCfBvcj2XP14Hotf90+obyAolm+XHZ7BY6vS42x5QmC4eFg+tpCH
6oOFrARB2kFF01gUD35FVPSnWgJVc+5o7iYeGz0FXNBD5v/mDmumlse+2eXN
JhvBmNfl7c3mkYjCiUfvMz9Vbx4+y+fh7YrOr6kgsA0V+64u5ZGwz5qsLic4
W9HRvaCax26Dd+96M8GP7krVaSePtZJh55U7BEpjsFzby8M1UpcTe5tAWi6/
/scoD4Veo9tyi+DZ+sbiQn8BqhS7GTcJSlJ9ZncvFjDN3rs0j2Gd0BRSFiOg
5HK7z+8MR3gjar07BHiEwrkKNj+iD39uzRHw3jb1mB/b79jdYPAWCXAMpYbF
Mf1TnYNl5goBsZa9oa/uEsTUVae7GwT8RjZkdJURjF/kbyp4JeD8Gc9gGLvP
IfXNqJWI2Fz2QyNnYXmmXqhJDxDRtLZA8FqZvtxWdDJSxJffn0vUVBG82a8b
DE4W4du1WRrK8jUts7ujD4lAp9vnu8cESbpb6tZLIpYnRsS2/sn0AkMSemwi
9qxJ6rDVszzjolv0bSI0d6Os/f+w/N6JL7MHRMjy+v4raGX/4/d11sj0Phhe
atcZOxj/huzCB2UfPgOcbed5
           "]]}}, 
        {RGBColor[0.8893551818181819, 0.3662789090909091, 0.1748141818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwVin1Qy3EAh6cLx3GhLpmKqKGw8jLpiHDtilIrL3UoKXXqJC5vZSm9uxtX
Vl5qnRLFekFixT4prot891trk1prrWk/sV4kTvKSP5577rl77MJieREmDAZj
7ST/LUsUHBTavodgxgYGpTKiOD/chy5XISwzpNPF3YjcKQFRRa4q8M2SPuhL
v+BuXVBl3Rsl9CLhb3r2F6gazy5yC1XiKqfE0/30Z7CY1fU2P9uRprpXo9cM
4FrD35QIYTsa+SVcNXcAS2oj4+eubweXnffX/uEnUOOGHLsOBSzpJLWU+QmF
gotdQr4CTuWhmvJUGplxLruPL1cg66Tr1P5BA3JKxo33lW1g75jufyrIgHp7
9dOd6W2wtn330v9VP0zHlGI/tzYEMLL3JbP7EWNBt0pG5KAGNs8zufURoynz
rDLEcuR10yOKaR9xfesewbNjcpR2ZH//flKPQz7VbN+Vckx0LV0c3dOH7eVL
J7gjFAoMj4877+oDN7BqtFRCIfWXm85TosMx3wDLqDQKj+dLzleydHiQbxYu
CKTguGm1a+S1Xsxy1qutllGgo24y40x6YcUunmI2LsNQ4W+71hNa7C0QF9WI
ZeDXVhUMS3uguGfIXXJUhioP3pbPBRoI/AM0+1kyxHbrnDITupF+Y4i/z0gg
zToc1hyshjTpebxtPUGRJ9GVuXVhnWldY8UVgjkWKypWLuwEzaIjpkZP9te4
l7yJDnQaPEMcfAhua8sWLdS8x0yuqnI2h6Cp511zWoMK53bkBUodCOKHtJKc
EiVY2nS/DdYEtWa6MY+Mdpgzy4rPLiC4vFWekButwKavP71TbAgGkyt3Zvi1
4U5UolfgcoJexbkIG44c3hfYosGNBOGctS17rCmwnc29/HmTP++JMXQaAS95
mXdiHAEnWKsOVr5FzYmY27H5BHdSDCE3SlvA+9Pr6/SKYFXrm9PWZ5rh7JjJ
q/pBoORk2+m9XmPXt0PiXy4yiBodQodtmnD3wNEDc07JkBVbuMZjtAHuR0Rh
xjoZ7BN0LhW5LzAz9VJIiykFftA21uHtEggdKNeLbApW54O3icZq4G65fvOt
gxSG1Y7p4ferMX3voxjmFQoWppF9kU1l+AcTUdFM
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAB1aybBqP0L8UBGfjZ8Oov+/kR8f9
w9C/yNLoCRk3oL/2wvVMRfzQvwCYbP9xv46/HPC7/fA30b+ASEBYt0laP2Js
mtkAd9G/CEzdS8uekj/GN5HgdLnRv0jFqkFrx6E/SlKgEk3/0b8EYPaNXjqq
P+y7x2+JSNK/FLtoxR9UsT+udAf4KZXSv/IDHhyHiLU/j3xfqy7l0r+OChtL
Zbq5P4/Tz4mXONO/5M5fUrrpvT+ueViTZI/Tv4Eo9hhDC8E/7W75x5Xp079t
SOB0ZCDDP0uzsicrR9S/OEfuPEE0xT/HRoSyJKjUv+QkIHHZRsc/YyluaIIM
1b9u4XURLVjJPx5bcElEdNW/1nzvHTxoyz/424pVat/VvyL3jJYGd80/8au9
jPRN1r9KUE57jITPPwjLCO/iv9a/JcQZ5mbI0D9AOWx8NTXXv5pPnkTlzdE/
l/bnNOyt1799yjRZwdLSPwwDfBgHKti/0TTdI/vW0z+hXignhqnYv5KOl6SS
2tQ/VgntYGks2b/G12Pbh93VPykDysWwstm/aBBCyNrf1j8bTL9VXDzav3s4
MmuL4dc/LOTMEGzJ2r/8TzTEmeLYP17L8vbfWdu/7lZI0wXj2T+uATEIuO3b
v1BNbpjP4to/HYeHRPSE3L8hM6YT9+HbP6tb9quUH92/YQjwRHzg3D9Vf30+
mb3dvw3NSyxf3t0/I/Ic/AFf3r8wgbnJn9vePwy01OTOA9+/viQ5HT7Y3z8Y
xaT4/6vfv95bZRMdauA/oZLGm8or4L8WHTfzyefgP0XqxlBHg+C/BtYRriVl
4T95aVMbdtzgv62G9UMw4uE/PRBs+1Y34b8ML+K06V7iP5DeEPHpk+G/I8/X
AFLb4j9z1EH8LvLhv/Nm1idpV+M/5fH+HCZS4r969t0pL9PjP+c2SFPPs+K/
uH3uBqRO5D93ox2fKhfjv678B7/HyeQ/mTd/ADh8479ccypSmkTlP0rzbHf3
4uO/wuFVwBu/5T+J1uYDaUvkv+BHiglMOeY/WeHspYy15L+1pcctK7PmP7gT
f11iIeW/Q/sNLbks5z+nbZ0q6o7lv4lIXQf2pec/7je9pQ==
           "]]}}, 
        {RGBColor[0.8893551818181819, 0.3662789090909091, 0.1748141818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwVjn9MlHUAxt+ZJD884s5V8mMYhSTqdJ7KcYgcMBDwvGmIRMGdXYRA00uW
iIrTRpmkjAJFzDpdl6EoFGLkSOgREBA2eH/cve+h3eDM6qTv96WEOZiBdv3x
7NmzZ3s+T8S7H2QWzGMYZq1X/zt7uNpYF+5EtZ+G4SQZ2LHybvgjCa3xb04v
+0VGSj0C53okpB+2Ci81yNiZlP50db2EzDt+tV9Wy1Bk9V268b6EoVe+Xn+t
TMZWVhtwOkHCzWNZnUazjKjrtmW9Kgmh0+roC3oZp54xjN4jYmKf5mBpjIzT
P2bVLO0Qse6ZudkdISNasLqyakSQutZet0JGZo7r/sguES9qo7tLn1AEpQV9
cy1eRMvDXtsFD0X+eW3ImEpE58XKQpNIsdmUYzCPO6DbUxLU2kPR9+nuuNhb
DqxJ/sh6rpXC+fL++/n1Dpx5rS1wsY2iXFma/LvFAYsy6L3ltRRtHxYb2zc5
0B5QY+UrKD5J2K5+EO7AflXsTcU+Ck+Juss8bUfDUp/O0QKKUcUC//WcHWmp
M7aUHIpiFb/Q2GhHbolyj05PceLoFwN3K+wYa9wWyiZQ6HakJl7Ns8M50dY8
paaoPPX3Xj7GjqTEpMjm1yl2xX2eu0Vpx5Lzk0f+DaMYyYhkwqgAi+9g56jK
y+v63pTYL2D10X53tp/3v21VWbtNQP484slnKK6SbzOOHxHgX7vO7jNDsNca
KDW+LSBi1UVb/D8Ed25YwiI0ApokbbbvOMFPcbfD5EUCrpx8LBf9RqCNesGp
eMQjxOAsNrkIth3aqv94mMdsyNjAQ4lgNubYQUMTj8zHCwN9BYKNeS3m3Sd4
BLveiekYIlD9xT3nLuLxBnsv2WeQoNz9587LaTzmhg+tfdBHcEA3WdobxSP0
10Tf7NsE/gumUjXP82iaWtll7CZQa8bZuT84tCzWmZ7cIphgHYuC+zhEbi4b
W+HNCXyb8rMGDgGVYsokCF7dUDVgOM6hQHir2uDtv1LkbCgs4rAmen7Hxi6C
xvTgQjGDg6XKMdTt3ddTdsvZFRyWzA72uLz8iply+oOCQ/IBj/VkP8G5e3FV
sW4WI8zyPNb7P7eu6PrP37Fw19U+vTRM8B+l8NSy
          "]], 
         {RGBColor[0.8862404848484848, 0.617471, 0.22442945454545454`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAW5Vos7qlz7/glZL+p87rv0IhgU7m
a8+/WjchhRXT679VfoRduzLPv0bl1e8X2Ou/kaxy4Dn6zr+mn7A+r93rv/Wr
S9dhws6/dmaxcdvj67+CfA9CM4vOv7o52Iic6uu/OR6+IK5Uzr9wGSWE8vHr
vxmRV3PSHs6/mAWYY935678i1ds5oOnNvzP+MCddAuy/U+pKdBe1zb9AA/DO
cQvsv67QpCI4gc2/wBTVWhsV7L8yiOlEAk7Nv7Ey4MpZH+y/4BAZ23Ubzb8V
XREfLSrsv7dqM+WS6cy/7JNoV5U17L+2lThjWbjMvzTX5XOSQey/3pEoVcmH
zL/wJol0JE7svzBfA7viV8y/HYNSWUtb7L+r/ciUpSjMv77rQSIHaey/T215
4hH6y7/QYFfPV3fsvxyuFKQnzMu/VOKSYD2G7L8SwJrZ5p7Lv0pw9NW3ley/
MqMLg09yy7+0Cnwvx6Xsv3pXZ6BhRsu/kLEpbWu27L/s3K0xHRvLv91k/Y6k
x+y/hjPfNoLwyr+eJPeUctnsv0pb+6+Qxsq/0PAWf9Xr7L83VAKdSJ3Kv3bJ
XE3N/uy/TB70/al0yr+Nrsj/WRLtv4y50NK0TMq/F6Balnsm7b/0JZgbaSXK
vxSeEhEyO+2/hmNK2Mb+yb+CqPBvfVDtv0By5wjO2Mm/Yr/0sl1m7b8kUm+t
frPJv7biHtrSfO2/MAPixdiOyb98Em/l3JPtv2aFP1Lcasm/s07l1Hur7b/E
2IdSiUfJv12Xgaivw+2/Tf26xt8kyb967ENgeNztv//y2K7fAsm/CU4s/NX1
7b/YueEKieHIvwq8OnzID+6/3FHV2tvAyL9+Nm/gTyruvwi7sx7YoMi/ZL3J
KGxF7r9e9XzWfYHIv7xQSlUdYe6/3AAxAs1iyL+H8PBlY33uv4Xdz6HFRMi/
xZy9Wj6a7r9Wi1m1ZyfIv3RVsDOut+6/UArOPLMKyL+WGsnwstXuv3RaLTio
7se/KuwHkkz07r+/e3enRtPHvzHKbBd7E++/NG6sio64x7+otPeAPjPvv9Qx
zOF/nse/lKuozpZT77+bxtasGoXHv/KufwCEdO+/bUjhAQ==
           "]]}}, 
        {RGBColor[
         0.675526787878788, 0.7429325151515151, 0.31717336363636367`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAf3SdOTvLxTwAAAAAAADwvybu7AX6
lFg/wRYO+szg77/JZ6uFQqNoP+m/BBg0wu+/yWsPRCiFcj94++NZNaTvvzpj
KIXTv3g/bcmrv9CG7781miAGowF/P8opXEkGau+/XAh8Y0ulgj+MHPX21U3v
v2dj12NXzYU/tKF2yD8y778zXiKE9fiIP0W54L1DF++/x/hcxCUojD88YzPX
4fzuvyAzhyToWo8/mZ9uFBrj7r+ehlBSnkiRP1xuknXsye6/kENVopHlkj+F
z576WLHuv2TQUQJOhJQ/F8OTo1+Z7r8bLUZy0ySWPwxJcXAAgu6/tVky8iHH
lz9qYTdhO2vuvzBWFoI5a5k/LgzmdRBV7r+QIvIhGhGbP1lJfa5/P+6/0r7F
0cO4nD/sGP0KiSruv/YqkZE2Yp4/5XpliywW7r+AM6owuQagP0Nvti9qAu6/
c7mHoDvdoD8H9u/3Qe/tv1onYZiitKE/Mw8S5LPc7b8yfTYY7oyiP8S6HPS/
yu2/+roHIB5moz+9+A8oZrntv7Tg1K8yQKQ/HMnrf6ao7b9g7p3HKxulP+Ir
sPuAmO2//eNiZwn3pT8OIV2b9Yjtv4vBI4/L06Y/oqjyXgR67b8Kh+A+crGn
P5vCcEata+2/fDSZdv2PqD/8btdR8F3tv97JTTZtb6k/wq0mgc1Q7b8xR/59
wU+qP+9+XtRERO2/d6yqTfowqz+E4n5LVjjtv635UqUXE6w/ftiH5gEt7b/U
LveEGfasP+BgeaVHIu2/7kuX7P/ZrT+oe1OIJxjtv/hQM9zKvq4/1igWj6EO
7b/0PctTeqSvP2powbm1Be2/cImvKYdFsD9mOlUIZP3sv+Bnd21DubA/yJ7R
eqz17L9IOj31cS2xP5GVNhGP7uy/qAABwRKisT+/HoTLC+jsvwC7wtAlF7I/
VTq6qSLi7L9TaYIkq4yyP1Lo2KvT3Oy/ngtAvKICsz+1KODRHtjsv+Kh+5cM
ebM/fvvPGwTU7L8cLLW36O+zP61gqImD0Oy/UapsGzdntD9EWGkbnc3sv34c
IsP33rQ/QOIS0VDL7L+kgtWuKle1P6T+pKqeyey/wcyzMA==
          "]], 
         {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697],
           ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApILVripXtT+k/qSqnsnsv8Tcht7P
z7U/bq0fqIbI7L/aKjZS50i2P6DugskIyOy/6mzjCXHCtj83ws4OJcjsv/Oi
jgVtPLc/NCgDeNvI7L/0zDdF27a3P5kgIAUsyuy/7ureyLsxuD9kqyW2Fszs
v+D8g5AOrbg/lsgTi5vO7L/MAiec0yi5Py546oO60ey/sPzH6wqluT8tuqmg
c9Xsv4zqZn+0Ibo/ko5R4cbZ7L9izANX0J66P1714UW03uy/MKKecl4cuz+Q
7lrOO+Tsv/ZrN9Jemrs/Knq8el3q7L+2Kc510Ri8PyqYBksZ8ey/bttiXbaX
vD+QSDk/b/jsvx6B9YgNF70/XItUV18A7b/IGob41pa9P5BgWJPpCO2/aqgU
rBIXvj8qyETzDRLtvwMqoaPAl74/KcIZd8wb7b+Wnyvf4Bi/P5BO1x4lJu2/
JAm0XnOavz9fbX3qFzHtv1QzHRE8DsA/kh4M2qQ87b8SXN+Ud0/APyxig+3L
SO2/zn6gOuyQwD8uOOMkjVXtv4WbYAKa0sA/lqArgOhi7b85sh/sgBTBP2Wb
XP/dcO2/6MLd96BWwT+aKHaibX/tv5bNmiX6mME/Nkh4aZeO7b8+0lZ1jNvB
Pzj6YlRbnu2/5NAR51cewj+iPjZjua7tv4XJy3pcYcI/cBXylbG/7b8ivIQw
mqTCP6Z+luxD0e2/vKg8CBHowj9CeiNncOPtv1KP8wHBK8M/RQiZBTf27b/k
b6kdqm/DP64o98eXCe6/c0peW8yzwz9+2z2ukh3uvwAfErsn+MM/tiBtuCcy
7r+H7cQ8vDzEP1P4hOZWR+6/C7Z24ImBxD9XYoU4IF3uv4x4J6aQxsQ/wl5u
roNz7r8JNdeN0AvFP5PtP0iBiu6/guuFl0lRxT/KDvoFGaLuv/ebM8P7lsU/
acKc50q67r9oRuAQ59zFP20IKO0W0+6/1+qLgAsjxj/a4JsWfezuv0GJNhJp
acY/q0v4Y30G77+oIeDF/6/GP+RIPdUXIe+/CrSIm8/2xj+B2GpqTDzvv2pA
MJPYPcc/h/qAIxtY77/GxtasGoXHP/SufwCEdO+/rwy9bw==
           "]]}}, 
        {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAxsbWrBqFxz/0rn8AhHTvv8RIA6AT
C8c/WKTvSKrT7r8Bj+2U1o3GPyr80+Q2M+6/gZmVi2MNxj9rtizUKZPtv0Fo
+4O6icU/F9P5FoPz7L9C+x5+2wLFPzJSO61CVOy/glIAesZ4xD+4M/GWaLXr
vwVun3d768M/rHcb1PQW67/ITfx2+lrDPxAeumTneOq/zPEWeEPHwj/fJs1I
QNvpvxBa73pWMMI/HJJUgP896b+UhoV/M5bBP8VfUAsloei/WnfZhdr4wD/c
j8DpsATov2As641LWMA/YSKlG6No579NS3UvDWm/P1EX/qD7zOa/XcaPRhcb
vj+wbst5ujHmv+7JJWG1xrw/fCgNpt+W5b8CVjd/52u7P7ZEwyVr/OS/mGrE
oK0Kuj9ew+34XGLkv64HzcUHo7g/c6SMH7XI479ELVHu9TS3P/Tnn5lzL+O/
XNtQGnjAtT/ijSdnmJbiv/YRzEmORbQ/PZYjiCP+4b8Q0cJ8OMSyPwYBlPwU
ZuG/rRg1s3Y8sT89znjEbM7gv5fRRdqRXK8/4P3R3yo34L/VghhVXjOsP+Mf
P52eQN+/FUXi1lL9qD/eCMMhtBPev1wYo19vuqU/trYvTZbn3L+l/Frvs2qi
P2kphR9FvNu/2uMTDEEcnj/0YMOYwJHav3jwX0dqSZc/Wl3quAho2b8YH5qQ
41yQP5we+n8dP9i/eN+Ez1mtgj+4pPLt/hbXv0ATx2YytmE/ru/TAq3v1b9g
I4oAQQt0v4L/nb4nydS/QKRffi2siL8u1FAhb6PTv2T5TjANw5O/s23sKoN+
0r+g/n+Ts0mbvxTMcNtjWtG/7nBh9AR1ob9P790yETfQv4jRCxgIUqW/yK5n
YhYpzr8UIb804zupv7AI5ayj5cu/pl97SpYyrb9F7DNFyqPJv5xGoKwQm7C/
j1lUK4pjx7/jVIcwQqOyv5BQRl/jJMW/qNrysN+xtL9F0Qnh1efCv+zX4i3p
xra/rtuesGGswL+sTFenXuK4v57fCpwN5by/7jhQHUAEu79IG3tyinS4v62c
zY+NLL2/WGqO5DkHtL/rd8/+Rlu/v6yZieQ3Oq+/SYq9/w==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA63fP/kZbv7+smYnkNzqvv1TlKjU2
yMC/eIU8N2Fspr9ySjDp/uXBvzgwa4LfSZu/Tut3m/0Gw79QRtMJjo+Dv+rH
AUwyK8S/4HAuKBy2fj9G4M36nFLFv/iNdKoKFpk/YDTcpz19xr8EmSju4Til
PzjELFMUq8e/JMTQT1ngrT/Rj7/8INzIv0RkGb21QLM/KZeUpGMQyr8KU6c2
DI63P0Haq0rcR8u/Yi6SFDDYuz8YWQXvioLMvyz7bKuQD8A/rhOhkW/Azb9v
Vb/+bzHCPwUKfzKKAc+//iVABLZRxD8Mns9o7SLQv9hs77ticMY/99SAt7DG
0L/8Kc0ldo3IP8EpUwUPbNG/al3ZQfCoyj9qnEZSCBPSvyYHFBDRwsw/8yxb
npy70r8qJ32QGNvOP1nbkOnLZdO/uV6KYeN40D+ip+czlhHUvwhl7dNtg9E/
ypFfffu+1L96pmefK43SP9GZ+MX7bdW/EyP5wxyW0z+4v7INlx7Wv8/aoUFB
ntQ/fwOOVM3Q1r+zzWEYmaXVPyZlipqehNe/vPs4SCSs1j+s5KffCjrYv+pk
J9Hisdc/EYLmIxLx2L89CS2z1LbYP1c9Rme0qdm/tuhJ7vm62T99Fsep8WPa
v1UDfoJSvto/gQ1p68kf278ZWclv3sDbP2YiLCw93du/Aeortp3C3D8mVRBs
S5zcvwy2pVWQw90/y6UVq/Rc3b9CvTZOtsPeP00UPOk4H96/mv/enw/D3z+w
oIMmGOPev4w+TyXOYOA/80rsYpKo37/fmjonrt/gP4oJO8/TN+C/w5Sx1Sde
4T+LfJDsK5zgvzsstDA73OE/fH52iVEB4b9FYUI46FniP10P7aVEZ+G/4jNc
7C7X4j8tL/RBBc7hvxKkAU0PVOM/7d2LXZM14r/VsTJaidDjP50btPjuneK/
Kl3vE51M5D886GwTGAfjvxGmN3pKyOQ/zEO2rQ5x47+MjAuNkUPlP0wukMfS
2+O/mRBrTHK+5T+6p/pgZEfkvzkyVrjsOOY/GbD1ecOz5L9r8czQALPmP2hH
gRLwIOW/MU7Pla4s5z+nbZ0q6o7lv4lIXQf2pec/2pW0qQ==
           "]]}}, 
        {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAxsbWrBqFxz/0rn8AhHTvv7iXMthZ
Csc/AIzHyefT7r/Syqp174rGP8maM+gsNO6/GGA/hdsGxj9Q28NbU5Xtv4VX
8AYefsU/kk14JFv37L8dsb36tvDEP5LxUEJEWuy/3WynYKZexD9Nx021Dr7r
v8eKrTjsx8M/xc5ufboi67/bCtCCiCzDP/0HtJpHiOq/F+0OP3uMwj/vch0N
tu7pv3wxam3E58E/ng+r1AVW6b8L2OENZD7BPwjeXPE2vui/w+B1IFqQwD8w
3jJjSSfov0mXTEpNu78/FRAtKj2R579dMeY3k0y+P7ZzS0YS/Oa/xo+4CYbU
vD8UCY63yGfmv4Cyw78lU7s/LtD0fWDU5b+PmQdacsi5PwbJf5nZQeW/8kSE
2Gs0uD+c8y4KNLDkv6S0OTsSl7Y/7U8C0G8f5L+o6CeCZfC0P/rd+eqMj+O/
AOFOrWVAsz/EnRVbiwDjv6qdrrwSh7E/So9VIGty4r9MPY5g2YivP42yuTos
5eG/7ccwEOfwqz+OB0KqzljhvzHbRIhORqg/So7ublLN4L8Zd8rID4mkP8RG
v4i3QuC/ppvB0Sq5oD/yYWjv+3Hfv7iRVEY/rZk/2Zmad0tg3r9s/Qh63MKR
Pzk1FapdUN2/yPRAfVpmgz8QNNiGMkLcv4CKsEEZ41c/YZbjDco1278QXx0W
WnB7vy1cNz8kK9q/2E2NHFa3jr9xhdMaQSLZv8jkIgaMAJi/LhK4oCAb2L+k
CI62XGWgv2kC5dDCFde/SBaZoRndpL8ZVlqrJxLWv0abMsR8Z6m/Qg0YME8Q
1b+el1oehgSuv+YnHl85ENS/q4UI2Bpasb8Cpmw45hHTvzL7qrxFu7O/l4cD
vFUV0r9hrBS9wyW2v6nM4umHGtG/Q5lF2ZSZuL8xdQrCfCHQv9PBPRG5Fru/
ZQL1iGhUzr8RJv1kMJ29v1zhZeJcacy//uJBan0WwL9Eh2eQ1oHKv8rQ6C8M
Y8G/IPT5ktWdyL9rXHODRLTCv+8nHepZvca/5IXhZCYKxL+wItGVY+DEvzRN
M9SxZMW/YuQVlvIGw79csmjR5sPGvwht6+oGMcG/tsSxxQ==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAXLJo0ebDxr8IbevqBjHBv1i1gVzF
J8i/QnmjKEG9vr8uVn51TZDJv1qmkSR/H7u/2pReHH/9yr9WYaHJx4i3v1lx
IlFab8y/OKrSFxv5s7+z68kT3+XNvwCBJQ95cLC/4ANVZA1hz79cyzNfw92p
v/LcYaFycNC/kLBf8qnoor/gBotXszLRvwBjna9LA5i/uf+l1Ej30b/wOAM+
3KKEv37HshgzvtK/wJOfaCYiaj8vXrEjcofTv+BJoxTNvZA/y8Oh9QVT1L+o
aay3KhueP1L4g47uINW/8KgX2y6upT/D+1fuK/HVv0ABFgizQKw/Is4dFb7D
1r/jnmjxkGKxP2tv1QKlmNe/Pq+ktb2dtD+f33634G/Yv7kxv9Df0bc/vx4a
M3FJ2b9KJrhC9/66P8csp3VWJdq/7YyPCwQlvj++CSZ/kAPbv9qyohUDosA/
oLWWTx/k279M2OzQ/i3CP20w+eYCx9y/yjamN3W2wz8lek1FO6zdv1XOzklm
O8U/yZKTasiT3r/unmYH0rzGP1h6y1aqfd+/lahtcLg6yD9pmPqE8DTgv0jr
44QZtck/HFsIQjas4L8KZ8lE9SvLP0YFj2KmJOG/2BsesEufzD/klo7mQJ7h
v7MJ4sYcD84/+A8HzgUZ4r+dMBWJaHvPP4Jw+Bj1lOK/Schbexdy0D9/uGLH
DhLjv8iU5Ae4JNE/9OdF2VKQ47/R/STqldXRP97+oU7BD+S/YAMdIrGE0j8/
/XYnWpDkv3WlzK8JMtM/FePEYx0S5b8R5DOTn93TP2GwiwMLleW/Nb9SzHKH
1D8iZcsGIxnmv942KVuDL9U/WgGEbWWe5r8PS7c/0dXVPweFtTfSJOe/xvv8
eVx61j8p8F9laaznvwRJ+gklHdc/wUKD9io16L/HMq/vKr7XP898H+sWv+i/
E7kbK25d2D9RnjRDLUrpv+LbP7zu+tg/SqfC/m3W6b86mxujrJbZP7mXyR3Z
Y+q/Gfeu36cw2j+db0mgbvLqv3/v+XHgyNo/9y5Chi6C679qhPxZVl/bP8fV
s88YE+y/3bW2lwn02z8NZJ58LaXsv9eDKCv6htw/V9y7GQ==
           "]]}}, 
        {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAxsbWrBqFxz/0rn8AhHTvv9CKn/NC
n8c/hsW6fA4y779Lg+muKLvHP/qAf2+48O6/OrC03svYxz9R4c3YgbDuv5sR
AYMs+Mc/h+aluGpx7r9vp86bShnIP6KQBw9zM+6/tHEdKSY8yD+a3/Lbmvbt
v2xw7Sq/YMg/d9NnH+K67b+Yoz6hFYfIPzdsZtlIgO2/NAsRjCmvyD/Xqe4J
z0btv0SnZOv62Mg/WYwAsXQO7b/Edzm/iQTJP7sTnM451+y/t3yPB9YxyT8A
QMFiHqHsvx+2ZsTfYMk/JxFwbSJs7L/2I7/1ppHJPy2HqO5FOOy/QcaYmyvE
yT8YomrmiAXsv/6c87Vt+Mk/4mG2VOvT678vqM9EbS7KP5HGizlto+u/0ucs
SCpmyj8g0OqUDnTrv+dbC8Ckn8o/kn7TZs9F679vBGus3NrKP+TRRa+vGOu/
ZuFLDdIXyz8XykFur+zqv9LyreKEVss/LGfHo87B6r+wOJEs9ZbLPySp1k8N
mOq/ALP16iLZyz/8j29ya2/qv8Nh2x0OHcw/txuSC+lH6r/5RELFtmLMP1NM
PhuGIeq/n1wq4RyqzD/RIXShQvzpv7qok3FA88w/MZwznh7Y6b9FKX52IT7N
P3K7fBEatem/RN7p77+KzT+Uf0/7NJPpv7XH1t0b2c0/meirW29y6b+Y5URA
NSnOP3/2kTLJUum/7jc0Fwx7zj9IqQGAQjTpv7a+pGKgzs4/8QD7Q9sW6b/y
eZYi8iPPP339fX6T+ui/nmkJVwF7zz/qnoova9/ov72N/f/N088/OOUgV2LF
6L8oc7kOLBfQP2nQQPV4rOi/qrm0109F0D97YOoJr5Tov2Sa8FpSdNA/bpUd
lQR+6L9ZFW2YM6TQP0Rv2pZ5aOi/hioqkPPU0D/87SAPDlTov+7ZJ0KSBtE/
lBHx/cFA6L+OI2auDznRPw7aSmOVLui/Zgfl1Gts0T9rRy4/iB3ov3mFpLWm
oNE/qFmbkZoN6L/EnaRQwNXRP8gQklrM/ue/SVDlpbgL0j/IbBKaHfHnvwad
ZrWPQtI/qm0cUI7k57/+gyh/RXrSP3ATsHwe2ee/iwzByA==
          "]], 
         {RGBColor[
          0.8674186363636364, 0.2097009090909091, 0.14587490909090908`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA/oMof0V60j9wE7B8Htnnvy4FKwPa
stI/FV7NH87O57+YIG5BTezSP5xNdDmdxee/OtbxOZ8m0z8G4qTJi73nvxYm
tuzPYdM/URtf0Jm2578rELtZ353TP375ok3HsOe/epQAgc3a0z+MfHBBFKzn
vwCzhmKaGNQ/fKTHq4Co57/Aa03+RVfUP05xqIwMpue/ur5UVNCW1D8C4xLk
t6Tnv+6rnGQ519Q/l/kGsoKk579aMyUvgRjVPw61hPZspee/AFXus6da1T9m
FYyxdqfnv94Q+PKsndU/oBod45+q57/2ZkLskOHVP7zEN4vorue/RlfNn1Mm
1j+6E9ypULTnv9DhmA31a9Y/mAcKP9i657+UBqU1dbLWP1qgwUp/wue/kMXx
F9T51j/83QLNRcvnv8Uef7QRQtc/gMDNxSvV5780Ek0LLovXP+ZHIjUx4Oe/
3J9bHCnV1z8udAAbVuznv7zHqucCINg/VkVod5r557/XiTptu2vYP2G7WUr+
B+i/K+YKrVK42D9O1tSTgRfov7jcG6fIBdk/HJbZUyQo6L9+bW1bHVTZP8z6
Z4rmOei/fJj/yVCj2T9eBIA3yEzov7Zd0vJi89k/0LIhW8lg6L8oveXVU0Ta
PyYGTfXpdei/0rY5cyOW2j9d/gEGKozov7ZKzsrR6No/dJtAjYmj6L/ReKPc
XjzbP23dCIsIvOi/KEG5qMqQ2z9KxFr/ptXov7ejDy8V5ts/B1A26mTw6L9/
oKZvPjzcP6WAm0tCDOm/gTd+akaT3D8mVoojPynpv75olh8t69w/idACcltH
6b8xNO+O8kPdP8zvBDeXZum/35mIuJad3T/ys5By8obpv8WZYpwZ+N0/+Rym
JG2o6b/mM306e1PeP+IqRU0Hy+m/PmjYkruv3j+t3W3swO7pv9E2dKXaDN8/
WjUgApoT6r+bn1By2GrfP+cxXI6SOeq/oKJt+bTJ3z9X0yGRqmDqv++fZR24
FOA/qBlxCuKI6r+quzQbBUXgP9sESvo4suq/giQkdsF14D/vlKxgr9zqv3fa
My7tpuA/5smYPUUI67+I3WNDiNjgP76jDpH6NOu/nCDBuQ==
           "]]}}, 
        {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAxsbWrBqFxz/0rn8AhHTvv/4xzOF/
nsc/lquozpZT779fbqyKjrjHP6q094A+M++/6nt3p0bTxz8zymwXexPvv51a
LTio7sc/K+wHkkz07r96Cs48swrIP5gayfCy1e6/f4tZtWcnyD91VbAzrrfu
v7Ddz6HFRMg/xZy9Wj6a7r8HATECzWLIP4vw8GVjfe6/ifV81n2ByD+/UEpV
HWHuvzO7sx7YoMg/aL3JKGxF7r8GUtXa28DIP4E2b+BPKu6/A7rhConhyD8N
vDp8yA/uvynz2K7fAsk/DE4s/NX17b92/brG3yTJP3zsQ2B43O2/79iHUolH
yT9gl4Gor8Ptv4+FP1Lcask/tE7l1Hur7b9aA+LF2I7JP34Sb+Xck+2/T1Jv
rX6zyT+64h7a0nztv2ty5wjO2Mk/Z7/0sl1m7b+xY0rYxv7JP4eo8G99UO2/
HiaYG2klyj8XnhIRMjvtv7a50NK0TMo/GqBalnsm7b92HvT9qXTKP5CuyP9Z
Eu2/YVQCnUidyj95yVxNzf7sv3Rb+6+Qxso/0/AWf9Xr7L+wM982gvDKP6Ek
95Ry2ey/FN2tMR0byz/gZP2OpMfsv6NXZ6BhRss/k7EpbWu27L9bowuDT3LL
P7cKfC/Hpey/O8Ca2eaeyz9NcPTVt5Xsv0WuFKQnzMs/VuKSYD2G7L93bXni
EfrLP9JgV89Xd+y/1P3IlKUozD/A60EiB2nsv1hfA7viV8w/IINSWUtb7L8I
kihVyYfMP/QmiXQkTuy/4JU4Y1m4zD841+VzkkHsv+BqM+WS6cw/8JNoV5U1
7L8JERnbdRvNPxpdER8tKuy/XIjpRAJOzT+2MuDKWR/sv9jQpCI4gc0/xBTV
WhsV7L996kp0F7XNP0YD8M5xC+y/S9XbOaDpzT84/jAnXQLsv0KRV3PSHs4/
nQWYY935679iHr4grlTOP3UZJYTy8eu/rHwPQjOLzj/AOdiInOrrvx6sS9dh
ws4/fGaxcdvj67+6rHLgOfrOP6mfsD6v3eu/fn6EXbsyzz9K5dXvF9jrv2wh
gU7ma88/XjchhRXT67+DlWizuqXPP+SVkv6nzuu/vXLHgg==
          "]], 
         {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAg5Vos7qlzz/klZL+p87rv8PaOow4
4M8/3AAqXM/K67+W+Hvsrw3QP0Z4552Lx+u/YOzPTJgr0D8k/MrD3MTrv71I
GWfVSdA/c4zUzcLC67+wDVg7Z2jQPzUpBLw9weu/NjuMyU2H0D9o0lmOTcDr
v1LRtRGJptA/EIjVRPK/678C0NQTGcbQPyhKd98rwOu/Rjfpz/3l0D+0GD9e
+sDrvyAH80U3BtE/sfMswV3C67+NP/J1xSbRPyHbQAhWxOu/kODmX6hH0T8C
z3oz48brvybq0APgaNE/WM/aQgXK679SXLBhbIrRPx7cYDa8zeu/ETeFeU2s
0T9W9QwOCNLrv2V6T0uDztE/AhvfyejW679OJg/XDfHRPyFN12le3Ou/zDrE
HO0T0j+xi/XtaOLrv963bhwhN9I/s9Y5Vgjp67+EnQ7WqVrSPygupKI88Ou/
wOujSYd+0j8QkjTTBfjrv5CiLne5otI/agLr52MA7L/0wa5eQMfSPzV/x+BW
Cey/7UkkABzs0j90CMq93hLsv3o6j1tMEdM/JZ7yfvsc7L+ck+9w0TbTP0dA
QSStJ+y/UlVFQKtc0z/c7rWt8zLsv55/kMnZgtM/5qlQG88+7L9+EtEMXanT
P2BxEW0/S+y/8g0HCjXQ0z9MRfiiRFjsv/xxMsFh99M/qiUFvd5l7L+YPlMy
4x7UP3wSOLsNdOy/ynNpXblG1D/AC5Gd0YLsv5ARdULkbtQ/dREQZCqS7L/r
F3bhY5fUP50jtQ4Youy/2oZsOjjA1D84QoCdmrLsv19eWE1h6dQ/RW1xELLD
7L94njka3xLVP8WkiGde1ey/JkcQobE81T+26MWin+fsv2dY3OHYZtU/Gzkp
wnX67L8+0p3cVJHVP/GVssXgDe2/qLRUkSW81T86/2Gt4CHtv6j/AABL59U/
9nQ3eXU27b88s6IoxRLWPyL3MimfS+2/Zc85C5Q+1j/DhVS9XWHtvyJUxqe3
atY/1SCcNbF37b9zQUj+L5fWP1nICZKZju2/Wpe/Dv3D1j9QfJ3SFqbtv9RV
LNke8dY/ujxX9yi+7b/kfI5dlR7XP5UJNwDQ1u2/Fb68sQ==
           "]]}}, 
        {RGBColor[
         0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAI0tW6w3d77+Tt1ky5p63P95E4HF7
m++/sDeXFwwEuD+cy4R7EVvvv0yuS+jUa7g/Xt9DCNAb779oG3ekQNa4PyGA
HRi33e6/BH8ZTE9DuT/nrRGrxqDuvyHZMt8As7k/rWggwf5k7r+9KcNdVSW6
P3ewSVpfKu6/2XDKx0yauj9GhY126PDtv3auSB3nEbs/FOfrFZq47b+Q4j1e
JIy7P+XVZDh0ge2/LQ2qigQJvD+4Ufjddkvtv0gujaKHiLw/jVqmBqIW7b/j
ReelrQq9P2bwbrL14uy//1O4lHaPvT9AE1LhcbDsv5lYAG/iFr4/HMNPkxZ/
7L+zU7808aC+P/v/Z8jjTuy/T0X15aItvz/eyZqA2R/sv2otooL3vL8/xCDo
u/fx678CBmOFdyfAP6oEUHo+xeu/kHAwv8RxwD+UddK7rZnrv15WuW5jvcA/
fXNvgEVv679qt/2TUwrBP2v+JsgFRuu/t5P9LpVYwT9bFvmS7h3rv0PruD8o
qME/TLvl4P/26r8Qvi/GDPnBP0Ht7LE50eq/HQxiwkJLwj83rA4GnKzqv2rV
TzTKnsI/MPhK3SaJ6r/2Gfkbo/PCPyvRoTfaZuq/w9ldec1Jwz8qNxMVtkXq
v9AUfkxJocM/KSqfdbol6r8cy1mVFvrDPyyqRVnnBuq/qPzwUzVUxD8xtwbA
POnpv3apQ4ilr8Q/OFHiqbrM6b+B0VEyZwzFP0B42BZhsem/znQbUnpqxT9O
LOkGMJfpv1mToOfeycU/XW0Ueid+6b8mLeHylCrGP247WnBHZum/MkLdc5yM
xj+Blrrpj0/pv37SlGr178Y/ln415gA66b8L3gfXn1THP63zymWaJem/12Q2
uZu6xz/J9XpoXBLpv+JmIBHpIcg/5YRF7kYA6b8u5MXeh4rIPwShKvdZ7+i/
utwmInj0yD8kSiqDld/ov4ZQQ9u5X8k/SIBEkvnQ6L+SPxsKTczJP25DeSSG
w+i/3KmurjE6yj+Vk8g5O7fov2iP/chnqco/wHAy0his6L8z8AdZ7xnLP+7a
tu0eoui/PszNXsiLyz8c0lWMTZnov4ojT9ry/ss/a5i74Q==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAHNJVjE2Z6L+KI0/a8v7LP05WD66k
kei/FfaLy25zzD+CZ+NSJIvov+BDhDI86cw/uAXSesyF6L/sDDgPW2DNP/Aw
2yWdgei/N1GnYcvYzT8s6f5Tln7ov8IQ0imNUs4/aC49Bbh86L+NS7hnoM3O
P6kAljkCfOi/lwFaGwVKzz/rXwnxdHzov+Iyt0S7x88/L0yXKxB+6L+27+dx
YSPQP3bFP+nTgOi/nANS/I1j0D+/ywIqwITovyHVmUFjpNA/C1/g7dSJ6L9G
ZL9B4eXQP1h/2DQSkOi/C7HC/Aco0T+oLOv+d5fov3G7o3LXatE/+2YYTAag
6L92g2KjT67RP1AuYBy9qei/Gwn/jnDy0T+ngsJvnLTov2FMeTU6N9I/AWQ/
RqTA6L9GTdGWrHzSP1zS1p/Uzei/ygsHs8fC0j+7zYh8Ldzov++HGoqLCdM/
HFZV3K7r6L+0wQsc+FDTP35rPL9Y/Oi/GLnaaA2Z0z/kDT4lKw7pvx5uh3DL
4dM/TD1aDiYh6b/D4BEzMivUP7X5kHpJNem/CBF6sEF11D8iQ+JplUrpv+z+
v+j5v9Q/kBlO3Alh6b9yquPbWgvVPwJ91NGmeOm/lxPliWRX1T92bXVKbJHp
v1s6xPIWpNU/6+owRlqr6b/AHoEWcvHVP2T1BsVwxum/xcAb9XU/1j/djPfG
r+Lpv2gglI4ijtY/WrECTBcA6r+tPerid93WP9liKFSnHuq/khge8nUt1z9b
oWjfXz7qvxaxL7wcftc/3mzD7UBf6r86Bx9BbM/XP2bFOH9Kgeq/ABvsgGQh
2D/uqsiTfKTqv2TslnsFdNg/eh1zK9fI6r9oex8xT8fYPwcdOEZa7uq/DsiF
oUEb2T+WqRfkBRXrv1LSyczcb9k/KMMRBdo86781muuyIMXZP71pJqnWZeu/
ux/rUw0b2j9TnVXQ+4/rv95iyK+icdo/7F2fekm767+iY4PG4MjaP4erA6i/
5+u/BiIcmMcg2z8lhoJYXhXsvwuekiRXeds/xe0bjCVE7L+u1+Zrj9LbP2ji
z0IVdOy/884YbnAs3D8NZJ58LaXsv9eDKCv6htw/cXK1Xg==
           "]]}}, 
        {RGBColor[
         0.24790763636363636`, 0.28302187878787877`, 0.7890625454545455], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApm2dKuqO5T+ISF0H9qXnv0vEd9nK
IOU/QvsNLbks57+mo8+VLrPkP7Slxy0rs+a/uAulXxVG5D/fR4oJTDnmv4H8
9zZ/2eM/weFVwBu/5b8AdsgbbG3jP1tzKlKaROW/NngWDtwB4z+t/Ae/x8nk
vyMD4g3PluI/tn3uBqRO5L/GFisbRSziP3j23Skv0+O/ILPxNT7C4T/yZtYn
aVfjvzHYNV66WOE/I8/XAFLb4r/4hfeTue/gPwsv4rTpXuK/drw21zuH4D+t
hvVDMOLhv6t78ydBH+A/BtYRriVl4b8qh1sMk2/fPxUdN/PJ5+C/bSjL46mh
3j/dW2UTHWrgvx7bNdbG1N0/vCQ5HT7Y3789n5vj6QjdPy2Bucmf296/ynT8
CxM+3D8PzUssX97dv8NbWE9CdNs/XwjwRHzg3L8pVK+td6vaPx8zphP34du/
/F0BJ7Pj2T9OTW6Yz+Lavzx5Trv0HNk/7FZI0wXj2b/ppZZqPFfYP/pPNMSZ
4ti/BOTZNIqS1z95ODJri+HXv40zGBreztY/ZhBCyNrf1r+ClFEaOAzWP8TX
Y9uH3dW/5AaGNZhK1T+QjpekktrUv7WKtWv+idQ/zzTdI/vW07/yH+C8asrT
P3zKNFnB0tK/ncYFKd0L0z+YT55E5c3Rv7R+JrBVTtI/JMQZ5mbI0L86SEJS
1JHRP0BQTnuMhM+/LCNZD1nW0D8W94yWBnfNv4wPa+fjG9A/zHzvHTxoy7+2
GvC06cTOP2jhdREtWMm/KjkA0RdUzT/eJCBx2UbHv3p6BiNS5cs/M0fuPEE0
xb+k3gKrmHjKP2dI4HRkIMO/pmX1aOsNyT97KPYYQwvBv4YP3lxKpcc/3s5f
Urrpvb9C3LyGtT7GP4oKG0tlurm/18uR5izaxD/wAx4ch4i1v0XeXHywd8M/
FLtoxR9Usb+OEx5IQBfCP+Rf9o1eOqq/smvVSdy4wD8kxapBa8ehv1/NBQMJ
ub4/yEvdS8uekr8TCU3ecQS8PwBFQFi3SVq/eoqAJfNTuT9wmGz/cb+OP5RR
oNiMp7Y/5NLoCRk3oD9mXqz3Pv+zPzAEZ+Nnw6g/KEuwFA==
          "]], 
         {RGBColor[
          0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAZl6s9z7/sz8wBGfjZ8OoP+ywpIIJ
W7E//twqhmSqsD9QkhLz2HWtPyZ6WkKe9bQ/Lk60uM89qD+QWUImYUO5P3iV
Llb3DaM/OnviMa2TvT9c0AKXn8ybP5NvnTJB88A/pIxZMbKNkT+nwiVg8B3D
PzB/he2ZfH0/2DaKIeRJxT9gsi1XHPhlvzDMynYcd8c/GGv3wpeZib+mgudf
maXJP/ydYIgyypa/P1rg3FrVyz/KN8q/m1ugv/hSte1gBs4/MJWLY+1Jpb9p
NjPJVRzQPyhndC8OMKq/5tN5ZR020T+2rYQj/g2vv/OBrkuHUNI/bTTen97x
sb+SQNF7k2vTP0rMDcKlWLS/vg/i9UGH1D9zHlF4VLu2v37v4LmSo9U/5yqo
wuoZub/M383HhcDWP5zxEqFodLu/p+CoHxve1z+kcpETzsq9vxbyccFS/Ng/
/NYRjY0OwL8WFCmtLBvaP8zRZNqnNcG/pUbO4qg62z/AqcHxtVrCv8SJYWLH
Wtw/2l4o07d9w7913eIriHvdPxrxmH6tnsS/tUFSP+uc3j9+YBP0lr3Fv4a2
r5zwvt8/CK2XM3Taxr/0nf0hzHDgP7jWJT1F9ce/7GiaGnEC4T+O3b0QCg7J
vy48LjhnlOE/iMFfrsIkyr+2F7l6ribiP6iCCxZvOcu/iPs64ka54j/pIMFH
D0zMv57ns24wTOM/VpyAQ6Nczb8A3CMga9/jP+b0SQkra86/qdiK9vZy5D+a
Kh2ZpnfPv5vd6PHTBuU/ux59+QpB0L/U6j0SApvlP7yWcIs8xdC/WACKV4Ev
5j9P/WgCaEjRvyEezcFRxOY/dFJmXo3K0b80RAdRc1nnPy6WaJ+sS9K/jnI4
Bebu5z95yG/FxcvSvzCpYN6phOg/Vul70NhK078b6H/cvhrpP8f4jMDlyNO/
Ti+W/ySx6T/J9qKV7EXUv8d+o0fcR+o/X+O9T+3B1L+L1qe05N7qP4i+3e7n
PNW/ljajRj526z9DiAJz3LbVv+melf3oDew/kkAs3Mov1r+ED3/Z5KXsP3Ln
Wiqzp9a/aIhf2jE+7T/mfI5dlR7Xv5QJNwDQ1u0/2rq/ew==
           "]]}}, 
        {RGBColor[0.3505598181818182, 0.6429982727272727, 0.6627781818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+wWabFuJ6T/C8dVuyEjjvy91VTq2
Buk//hkpge/l4r/Wj/4sRYToPyOSaGDdguK/8FWVRAgC6D8wWpQMkh/iv3zH
GYH/f+c/JXKshQ284b975IviKv7mPwHasMtPWOG/7azraIp85j/FkaHeWPTg
v9EgORQe++U/cZl+viiQ4L8qQHTk5XnlPwbxR2u/K+C/9Aqd2eH45D8FMfvJ
OY7fvzGBs/MReOQ/zR8/V4LE3r/forcydvfjP2SuW35Y+t2/AXCplg534z/L
3FA/vC/dv5foiB/b9uI/A6semq1k3L+eDFbN23biPwkZxY4smdu/GNwQoBD3
4T/gJkQdOc3avwRXuZd5d+E/htSbRdMA2r9kfU+0FvjgP/0hzAf7M9m/OE/T
9ed44D9FD9VjsGbYv/mYibja898/W5y2WfOY179q6kfPTfbeP0DJcOnDyta/
vpLhLyn53T/2lQMTIvzVv/eRVtps/Nw/ewJv1g0t1b8V6KbOGADcP88OszOH
XdS/G5XSDC0E2z/0us8qjo3TvwWZ2ZSpCNo/6QbFuyK90r/V87tmjg3ZP67y
kuZE7NG/iqV5gtsS2D9Bfjmr9BrRvyWuEuiQGNc/pqm4CTJJ0L+lDYeXrh7W
P7TpIAT67c6/CsTWkDQl1T+6v4Eoq0jNv1XRAdQiLNQ/YNWTgHeiy7+FNQhh
eTPTP6YqVwxf+8m/m/DpNzg70j+Ov8vLYVPIv5UCp1hfQ9E/EpTxvn+qxr95
az/D7kvQPzyoyOW4AMW/fVZm78ypzj8A/FBADVbDv9SDBOyMvMw/ZI+Kznyq
wb/2Xll8HdDKP9DE6iAP/L+/4edkoH7kyD8W6iIMW6G8v5geJ1iw+cY/m469
Xt1Eub8cA6Cjsg/FP2myuhiW5rW/a5XPgoUmwz9uVRo6hYayv4DVtfUoPsE/
YO+4hVVJrr/EhqX4Oa2+P2QyAmYNgqe/IL5MLcPfuj/ocxAVMregvxBRYYnt
E7c/0GfHJYfRk7+YP+MMuUmzP2CT3/sOtni/YBOlb0sCrz+ghDYpmPZ9P8Re
XhRndKc/KCoJNvYvlT+gwuQPitOfPxxbHWK2dKE/J8+3Lw==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAoMLkD4rTnz8cWx1itnShPxA2wpTK
xJA/pCJx2gRVqD8AfVF1+8hbP6zr/4PmOK8/IDDFEE2Kir8c22SvLRCzP6DZ
ZCpYQJy/IEFntbGFtj9s1liXgpqlv+gnB1T//Lk/2IikypYRrb9uj0SLFna9
PwbCile0QrK/17uPrXt4wD8U5FUi/Pq1v1zwy+HQNsI/iKqzxaKxub9B5Vbi
CvbDP2oVpEGoZr2/hZowrym2xT9bkhNLBo3AvywQWUgtd8c/Nmye4edlwr8y
RtCtFTnJP0iYcuT4PcS/mDyW3+L7yj+MFpBTORXGv2Dzqt2Uv8w/COf2Lqnr
x7+Hag6oK4TOP7gJp3ZIwcm/B1Fgn9Mk0D+cfqAqF5bLv/zM4NADCNE/tkXj
ShVqzb8gqYhopuvRPwBfb9dCPc+/ceVXZrvP0j9CZSLoz4fQv/eBTspCtNM/
H8SxGpZw0b+sfmyUPJnUPxfMZQP0WNK/ktuxxKh+1T8ofT6i6UDTv6aYHluH
ZNY/Vdc793Yo1L/stbJX2ErXP53aXQKcD9W/YjNuupsx2D/+hqTDWPbVvwgR
UYPRGNk/e9wPO63c1r/eTluyeQDaPxLbn2iZwte/5eyMR5To2j/EglRMHajY
vxzr5UIh0ds/kNMt5jiN2b+DSWakILrcP3fNKzbscdq/GQgObJKj3T90cE48
N1bbv90m3Zl2jd4/kryV+Bk63L/XpdMtzXffP8axAWuUHd2/fsL4E0sx4D8Z
UJKTpgDevypiG8TopuA/hJdHclDj3r/usVGnvxzhPwqIIQeSxd+/y7Gbvc+S
4T/WEBCptVPgv75h+QYZCeI/NLKhKW7E4L/LwWqDm3/iPx+oRYXyNOG/79Hv
Mlf24j+X8vu7QqXhvy2SiBVMbeM/nJHEzV4V4r+BAjUreuTjPzCFn7pGheK/
7iL1c+Fb5D9OzYyC+vTiv3LzyO+B0+Q//GmMJXpk478PdLCeW0vlPzdbnqPF
0+O/xKSrgG7D5T//oML83ELkv5GFupW6O+Y/VDv5MMCx5L91Ft3dP7TmPzcq
QkBvIOW/c1cTWf4s5z+nbZ0q6o7lv4lIXQf2pec/ap25uw==
           "]]}}, 
        {RGBColor[0.3505598181818182, 0.6429982727272727, 0.6627781818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+wWabFuJ6T/C8dVuyEjjvzmRBbFy
Buk/Lf8E1p3m4r/6/74HN4PoP+Am2LOWheK/QlLGcKj/5z/YaE8IsyXivw2I
G+zGe+c/FsVq0/LG4b9eob55kvfmP5o7KhVWaeG/NJ6vGQtz5j9kzI3N3Azh
v45+7ssw7uU/dXeV/Iax4L9uQnuQA2nlP8w8QaJUV+C/0+lVZ4Pj5D/ROCJ9
i/zfv7x0flCwXeQ/liwKo7RM378p4/RLitfjP+dUOrYkn96/HDW5WRFR4z/F
sbK22/Pdv5Rqy3lFyuI/L0NzpNlK3b+QgyusJkPiPyQJfH8epNy/EoDZ8LS7
4T+mA81Hqv/bvxhg1UfwM+E/tDJm/Xxd27+jIx+x2KvgP06WR6CWvdq/tMq2
LG4j4D93LnEw9x/av5KqOHVhNd8/KfvirZ6E2b/Ghp+1QCPeP2j8nBiN69i/
AiqiGnoQ3T8zMp9wwlTYv0iUQKQN/ds/iZzptT7A17+XxXpS++jaP2s7fOgB
Lte/8r1QJUPU2T/bDlcIDJ7Wv1Z9whzlvtg/1xZ6FV0Q1r/DA9A44ajXP19T
5Q/1hNW/OlF5eTeS1j9xxJj30/vUv7xlvt7netU/EmqUzPl01L9HQZ9o8mLU
Pz5E2I5m8NO/2uMbF1dK0z/2UmQ+Gm7Tv3hNNOoVMdI/OpY42xTu0r8gfujh
LhfRPwoOVWVWcNK/pOtw/EP5zz9ournc3vTRvxhpSH7ews0/UJtmQa570b+q
dFdJLYvLP8ewW5PEBNG/RQ6eXTBSyT/I+pjSIZDQv/Y1HLvnF8c/VXke/8Ud
0L+769FhU9zEP9xY2DFiW8+/kS+/UXOfwj8nKARAxn/Ov3wB5IpHYcA/imDA
KLiozb/8woAaoEO8PwgCDew31sy/Ip+osRnCtz+dDOqJRQjMv2qXP9v7PbM/
SIBXAuE+y7+wV4sujW6tPwxdVVUKesq/5Lh1y/NbpD/qouOCwbnJv8CkfBpX
iJY/31ECiwb+yL+gISmfozlxP+xpsW3ZRsi/4EZXAsbri78S6/AqOpTHv0yP
MlBGIqC/UNXAwijmxr+cFPH6yU6pv6YoITWlPMa/iVW6CQ==
          "]], 
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAnBTx+slOqb+mKCE1pTzGv8ywaEA+
QLG/FeURgq+Xxb8mu+nwrtu1v5wKk6lH98S/Vqn7Drd5ur87maSrbVvEv2J7
nppWGr+/8pBGiCHEw7+kGOnJxt7Bv8PxeD9jMcO/gmVL/a0xxL+ruzvRMqPC
v0ckdufghca/re6OPZAZwr//VGmIX9vIv8aKcoR7lMG/ofck4Ckyy7/3j+al
9BPBvzIMqe4/is2/QP7qofuXwL+xkvWzoePPv6LVf3iQIMC/jkUFmCcf0b83
LEpTZlu/v7n6czEkTdK/XH+1asd+vr/a6EamxnvTv7KkQTdEq72/8g9+9g6r
1L82nO643OC8vwBwGSL92tW/7WW875AfvL8FCRkpkQvXv9QBq9tgZ7u/ANt8
C8s82L/sb7p8TLi6v+zlRMmqbtm/NrDq0lMSur/UKXFiMKHav6/CO952dbm/
saYB11vU279Zp62eteG4v4dc9iYtCN2/Ml5AFBBXuL9OS09SpDzevzzn8z6G
1be/EHMMWcFx3794QsgeGF23v+Pplh3CU+C/5G+9s8Xttr+6tll89u7gv4Fv
0/2Oh7a/C6DOyH2K4b9NQQr9cyq2v9ml9QJYJuK/TOVhsXTWtb8hyM4qhcLi
v3pb2hqRi7W/5AZaQAVf47/Zo3M5yUm1vyJil0PY++O/ab4tDR0Rtb/Z2YY0
/pjkvymrCJaM4bS/Dm4oE3c25b8aagTUF7u0v70efN9C1OW/O/sgx76dtL/o
64GZYXLmv41eXm+BibS/jtU5QdMQ578PlLzMX360v7Dbo9aXr+e/w5s731l8
tL9M/r9Zr07ov6Z126Zvg7S/ZD2Oyhnu6L+7IZwjoZO0v/aYDinXjem/AKB9
Ve6stL8EEUF15y3qv3bwfzxXz7S/jKUlr0rO6r8bE6PY2/q0v5FWvNYAb+u/
8wfnKXwvtb8NJAXsCRDsv/nOSzA4bbW/CA4A72Wx7L8xaNHrD7S1v30Urd8U
U+2/mdN3XAMEtr9uNwy+FvXtvzMRP4ISXba/2HYdimuX7r/8ICddPb+2v8DS
4EMTOu+/9wIw7YMqt78iS1brDd3vvyK3WTLmnre/EYrOvQ==
           "]]}}, 
        {RGBColor[0.3505598181818182, 0.6429982727272727, 0.6627781818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+wWabFuJ6T/C8dVuyEjjv29TexzV
Buk/D/y2Ltjl4r/UCJa1wIToP2UaoBaAguK/KybqNx4D6D/ETJEmwB7iv3Sr
d6Ptgec/LZOKXpi64b+umD74LgHnP53ti74IVuG/2+0+NuKA5j8YXJVGEfHg
v/iqeF0HAeY/mt6m9rGL4L8J0OttnoHlPyZ1wM7qJeC/C12YZ6cC5T93P8Sd
d3/fv/5RfkoihOQ/srwX7kmy3r/irp0WDwbkP/5he45M5N2/uHP2y22I4z9d
L+9+fxXdv4GgiGo+C+M/ziRzv+JF3L86NVTygI7iP09CB1B2ddu/5TFZYzUS
4j/kh6swOqTav4KWl71bluE/ivVfYS7S2b8RYw8B9BrhP0KLJOJS/9i/k5fA
Lf6f4D8NSfmypyvYvwU0q0N6JeA/6S7e0yxX17/TcJ6F0FbfP9Y800Tigda/
fUlZVpBj3j/VctgFyKvVvwvyhvkzcd0/5dDtFt7U1L97aidvu3/cPwdXE3gk
/dO/0bI6tyaP2z88BUkpmyTTvwnLwNF1n9o/gtuOKkJL0r8ls7m+qLDZP9vZ
5HsZcdG/JWslfr/C2D9EAEsdIZbQvwjzAxC61dc/gp2CHbJ0z7/OSlV0mOnW
P52Kj6CCu82/d3IZq1r+1T/ax7zDswDMvwNqULQAFNU/PFUKh0VEyr9zMfqP
iirUP8IyeOo3hsi/x8gWPvhB0z9uYAbuisbGv/0vpr5JWtI/ON60kT4Fxb8b
Z6gRf3PRPzCsg9VSQsO/GG4dN5iN0D9EynK5x33Bv/KJCl4qUc8/+HAEezpv
v79817/y64jNP6/tY8Om37u/y8RaLHXCyz+sCgRM1Ey4v+FR2wrG/ck/8sfk
FMO2tL/AfkGO3jrIP4glBh5zHbG/ZkuNtr55xj+8RtDOyAGrv8+3voNmusQ/
9IIV4i3Co78AxNX11fzCP2j/t+sq+Ji/+G/SDA1BwT8w9I4o/r2Ev253aZEX
Dr8/gCiaCJ8ccT97TvlSpJ27PzANkpdJ+pI/EmVUXsAwuD+Yh/01M92gPzq7
erNrx7Q/CMiwH79DqD/sUGxSpmGxP+zH4ojIsK8/P2y0ww==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA7FBsUqZhsT/sx+KIyLCvP1hMUnbg
/qs/oMPJuCeSsz/0dWLbkkGlPwKD4ewpT7c/YD0SqMcWnT8eorjgag+7PwAa
GYFNcY8/8iBPlOrSvj/A1p4BGEZjP8B/0oPUTME/ILLvMcexhb/iHl0d0zHD
P6iO9gpNDJi/3G3HFnEYxT8UI+SqvJiiv7hsEXCuAMc/uH+2PDQkqb9vGzsp
i+rIP0Bd8jqNqK+/A3pEQgfWyj/a3cvS4xKzv3SILbsiw8w/hk1TvvFNtr/C
RvaT3bHOP6R9D2Bwhbm/dVpP5htR0D8ybgC4X7m8v3hpk7IYStE/NR8mxr/p
v79qUMcu5UPSP1RIQEVIi8G/SA/rWoE+0z9I4YcC6R/Dvxam/jbtOdQ/ddrp
GsKyxL/SFALDKDbVP9YzZo7TQ8a/d1v1/jMz1j917fxcHdPHvxB62OoOMdc/
Tgeuhp9gyb+XcKuGuS/YP2CBeQta7Mq/Cz9u0jMv2T+qW1/rTHbMv2zlIM59
L9o/LpZfJnj+zb+9Y8N5lzDbP+0werzbhM+//blV1YAy3D/xldfWu4TQvyno
1+A5Nd0/ikP//CVG0b9E7kmcwjjePz4htFCsBtK/T8yrBxs93z8QL/bRTsbS
vyPBfpEhIeA//mzFgA2F078WiB93HaTgPwnbIV3oQtS/ADu4NIEn4T8seQtn
3//Uv9/ZSMpMq+E/cUeCnvK71b+3ZNE3gC/iP9BFhgMid9a/httRfRu04j9O
dBeWbTHXv00+ypoeOeM/59I1VtXq178JjTqQib7jP55h4UNZo9i/v8eiXVxE
5D9wIBpf+VrZv2ruAgOXyuQ/YA/gp7UR2r8NAVuAOVHlP20uMx6Ox9q/pv+q
1UPY5T+VfRPCgnzbvzjq8gK2X+Y/2vyAk5Mw3L+/wDIIkOfmPzyse5LA49y/
P4Nq5dFv5z+6iwO/CZbdv7Mxmpp7+Oc/VZsYGW9H3r8hzMEnjYHoPw3buqDw
996/hVLhjAYL6T/hSupVjqffv+DE+MnnlOk/aHVTHCQr4L8yIwjfMB/qP3Bd
eCQPguC/fG0PzOGp6j+F3WNDiNjgv72jDpH6NOs/aYSsFA==
           "]]}}, 
        {RGBColor[0.3505598181818182, 0.6429982727272727, 0.6627781818181818],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA+wWabFuJ6T/C8dVuyEjjv+1IYciH
Buk/pgEBAi3m4r/K3i1li4PoP8IwyGPTg+K/lsf/QmYA6D8VfyuUuyHiv00D
12EYfec/oOwqk+W/4b/ykbPBofnmP2F5xmBRXuG/hHOVYgJ25j9aJf78/vzg
vwGofEQ68uU/ivDRZ+6b4L9uL2lnSW7lP/PaQaEfO+C/xwlbyy/q5D8jyZtS
JbXfvww3UnDtZeQ/0Brs/4703r89t05WguHjP+qqdEp8NN6/XIpQfe5c4z9z
eTUy7XTdv2iwV+Ux2OI/bIYut+G13L9gKWSOTFPiP9HRX9lZ99u/RfV1eD7O
4T+nW8mYVTnbvxcUjaMHSeE/6iNr9dR72r/WhakPqMPgP50qRe/Xvtm/g0rL
vB8+4D/Ab1eGXgLZvzbE5FXdcN8/T/OhumhG2L9DmT20KWXeP021JIz2ite/
JxShlCRZ3T+6td/6B9DWv+Q0D/fNTNw/lPTSBp0V1r97+4fbJUDbP91x/q+1
W9W/7mcLQiwz2j+WLWL2UaLUvzh6mSrhJdk/vSf+2XHp079dMjKVRBjYP1Jg
0loVMdO/XJDVgVYK1z9V1954PHnSvzWUg/AW/NU/yYwjNOfB0b/oPTzhhe3U
P6qAoIwVC9G/c43/U6Pe0z/5slWCx1TQv9iCzUhvz9I/bkeGKvo9z78XHqa/
6b/RP8il0Yps082/MF+JuBKw0D8BgY0l5mnMv0SM7mbUP88/E9m5+mYBy7/k
pd9g4B7NPwquVgrvmcm/LwvmXkn9yj/X/2NUfjPIvy68AWEP28g/gs7h2BTO
xr/iuDJnMrjGPwsa0JeyacW/RwF5cbKUxD9w4i6RVwbEv2GV1H+PcMI/sif+
xAOkwr8xdUWSyUvAP9bpPTO3QsG/ZkGXUcFMvD+oUdy348S/v8ovzoapALg/
XMkdfmcGvb+WtS/ES7OzP8k6QLn5Sbq/mKV3E1DJrj/ypUNpmo+3v9AO5a58
KaY/1woojknXtL+4TU+1Og6bP3Zp7ScHIbK/sLb9WsiIgz+cgydtptmuv6Dl
nOYoKn6/wic2dFt1qb+Q8CKAkN6Yv1q/BmUtFaS/n6+9/g==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAkPAigJDemL9avwZlLRWkvwwl+lLX
G6W/0JQyfzhynb8Io41V8sqtv9iR2wdQwpK/Gvnlo0w+s7+A6xDIQjWAv0aJ
2hRmmLe/QPs1YpsmZD8QgqR9xfO7v1AbJNIcOIo/tvEhbzUowL/4dFmSD6uX
P69WXBsrV8K/qHoOdOsYoT/5b4HDw4bEv2hHLjUyWKY/jT2RZ/+2xr+0IIwM
XJOrP3C/iwfe58i/RgMUfTRlsD+h9XCjXxnLv3j8AH+s/rI/HuBAO4RLzb/w
+wwMFpa1P+Z++85Lfs+/rQE4JHEruD/9aFAv29jQv7ANgse9vro/r2wY9eHy
0b/6H+v1+0+9P4bK1Tg6DdO/hzhzryvfvz+Dgoj64yfUv68rDXomNsE/p5Qw
Ot9C1b87PvDhr3vCP+4AzvcrXta/59NiDzLAwz9ex2AzynnXv7nsZAKtA8U/
9efo7LmV2L+viPa6IEbGP7NiZiT7sdm/x6cXOY2Hxz+VN9nZjc7avwJKyHzy
x8g/n2ZBDXLr279hbwiGUAfKP8/vnr6nCN2/4hfYVKdFyz8l0/HtLibev4RD
N+n2gsw/oRA6mwdE379M8iVDP7/NPyPUO+MYMeC/NiSkYoD6zj8ITdW3VsDg
v6Hs2CNdGtA//3JpS71P4b+5iCd59rbQPwpG+J1M3+G/YeY9MQxT0T8mxoGv
BG/iv5kFHEye7tE/V/MFgOX+4r9m5sHJrInSP5vNhA/vjuO/w4gvqjck0z/z
VP5dIR/kv7HsZO0+vtM/Xolya3yv5L8xEmKTwlfUP9xq4TcAQOW/Q/kmnMLw
1D9t+UrDrNDlv+ahswc/idU/EjWvDYJh5r8aDAjWNyHWP8kdDheA8ua/4Tck
B6241j+Ts2ffpoPnvzglCJueT9c/cPa7ZvYU6L8g1LORDObXP2LmCq1upui/
m0Qn6/Z72D9jg1SyDzjpv6R2YqddEdk/es2YdtnJ6b9BamXGQKbZP6TE1/nL
W+q/cB8wSKA62j/iaBE85+3qvzCWwix8zto/MrpFPSuA67+Azhx01GHbP5a4
dP2XEuy/Y8g+Hqn02z8NZJ58LaXsv9eDKCv6htw/pVm1Uw==
           "]]}}, 
        {RGBColor[
         0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADGSefC2l7D/Zgygr+obcv45sEfLQ
Euw/btxGRkH0278VirgPD4HrP6YePRQ1YNu/oLyT1efv6j+CSguV1cravzIE
o0NbX+o/AGCxyCI02r/HYOZZac/pPyJfL68cnNm/YdJdGBJA6T/nR4VIwwLZ
vwBZCX9Vseg/TxqzlBZo2L+l9OiNMyPoP1zWuJMWzNe/TqX8RKyV5z8LfJZF
wy7Xv/xqRKS/COc/XQtMqhyQ1r+vRcCrbXzmP1KE2cEi8NW/ZTVwW7bw5T/q
5j6M1U7VvyI6VLOZZeU/JzN8CTWs1L/iU2yzF9vkPwVpkTlBCNS/qIK4WzBR
5D+IiH4c+mLTv3LGOKzjx+M/rZFDsl+80r9DH+2kMT/jP3eE4PpxFNK/GI3V
RRq34j/kYFX2MGvRv/IP8o6dL+I/8yaipJzA0L/Qp0KAu6jhP6bWxgW1FNC/
s1THGXQi4T/434Yz9M7Ov5oWgFvHnOA/6OUvwddxzb+H7WxFtRfgPyC/iLQU
Esy/77Ibr3sm3z+ga5ENq6/Kv920xSPCHt4/ZetJzJpKyb/T4NfoPRjdP3E+
svDj4se/0jZS/u4S3D/CZMp6hnjGv922NGTVDts/XF6SaoILxb/wYH8a8Qva
Pz0rCsDXm8O/DTUyIUIK2T9iyzF7hinCvzMzTXjICdg/zj4JnI60wL9jW9Af
hArXPwELIUXgeb6/na27F3UM1j/1Po8dVoW7v+ApD2CbD9U/cxldwX6LuL8x
0Mr49hPUP4iaijBajLW/h6Du4YcZ0z8hwhdr6Ieyv+iaehtOINI/kCAJ4lL8
rr9Tv26lSSjRP/YJooQ63qi/xg3Lf3ox0D9wQPq9h7Wiv4cMH1XBd84/IIgj
HHUEmb+aUXhL+I7MP0BTotNLEYm/vuqh4pmoyj8AgDUFNrwAP/PXmxqmxMg/
0Imv5C1diT88GWbzHOPGP/BULpwEapk/l64Abf4DxT9YJUOMUx2jPweYa4dK
J8M/JNOvMz+QqT+K1aZCAU3BP+aZLqLiBrA/Qs5kPUXqvj+yoyXf8kqzP5SZ
HDddP7s/8Aa9UFCUtj8ODXVySpm3P6HD9Pb64rk/bQikfw==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADg11ckqZtz+hw/T2+uK5P64obu8M
+LM/xdnM0fI2vT927AeupFuwP66kovAbSMA/yLCEXCOIqT8zCa8SZffBP/DY
OuCnYqI/cpoLz1Spwz/IomTOrY2WP2pYuCXrXcU/sGisxcHSgD8bQ7UWKBXH
P4Bl1ghcnna/gVoCogvPyD+gxr7gOaWTv6aen8eVi8o/pKli3MPHoL+ED42H
xkrMP6SfJEVAs6e/G63K4Z0Mzj9gRaUqEpWuv2x3WNYb0c8/aE1yxpy2sr88
N5syIMzQP/ZP8TXbHba/HkkyxwWx0T9dqs9jRIC5v11x8ag+l9I/n1wNUNjd
vL/5r9jXyn7TP1wzVX1LG8C/8AToU6pn1D9XZNMxQMXBv0ZwHx3dUdU/PUGB
Rcpsw7/48X4zYz3WPwvKXrjpEcW/A4oGlzwq1z/L/muKnrTGv284tkdpGNg/
eN+ou+hUyL84/Y1F6QfZPxBsFUzI8sm/XNiNkLz42T+WpLE7PY7Lv93JtSjj
6to/CIl9ikcnzb+70QUOXd7bP2kZeTjnvc6/9+99QCrT3D/aKtIiDinQv48k
HsBKyd0/9p7/WPPx0L+Db+aMvsDePwjpxD6judG/1tDWpoW53z8SCSLUHYDS
v0Kk9wbQWeA/Ef8WGWNF079H6xfhhtfgPwfLow1zCdS/ez3MYedV4T/vbMix
TczUv9yaFInx1OE/0uSEBfON1b9sA/FWpVTiP6ky2QhjTta/K3dhywLV4j94
VsW7nQ3Xvxn2ZeYJVuM/PVBJHqPL1780gP6nutfjP/kfZTBziNi/fhUrEBVa
5D+qxRjyDUTZv/e16x4Z3eQ/U0FkY3P+2b+eYUDUxmDlP/KSR4Sjt9q/cxgp
MB7l5T+GusJUnm/bv3fapTIfauY/EbjV1GMm3L+pp7bbye/mP5KLgAT029y/
CYBbKx525z8INcPjTpDdv5ZjlCEc/ec/drSdcnRD3r9UUmG+w4ToP9sJELFk
9d6/P0zCARUN6T80NRqfH6bfv1lRt+sPluk/QhtentIq4L+hYUB8tB/qP+cG
+8T6geC/GH1dswKq6j+F3WNDiNjgv72jDpH6NOs/2uu1tQ==
           "]]}}, 
        {RGBColor[
         0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAADGSefC2l7D/Zgygr+obcv0ccrU66
juw/3aeDrihV3L83GqN513jsP2vkIQnHI9y/212A/YRj7D+DOQM71fLbvzfn
RNrCTuw/JacnRFPC279FtvAPkTrsP1AtjyRBktu/CcuDnu8m7D8GzDncnmLb
v4Il/oXeE+w/RIMna2wz27+xxV/GXQHsPw1TWNGpBNu/lKuoX23v6z9gO8wO
V9bavyzX2FEN3us/PDyDI3So2r96SPCcPc3rP6NVfQ8Be9q/e//uQP686z+R
h7rS/U3avzH81D1Pres/DNI6bWoh2r+dPqKTMJ7rPw01/t5G9dm/vsZWQqKP
6z+bsAQok8nZv5OU8kmkges/sEROSE+e2b8fqHWqNnTrP1Lx2j97c9m/YAHg
Y1ln6z99tqoOF0nZv1WgMXYMW+s/MZS9tCIf2b8AhWrhT0/rP2+KEzKe9di/
Xa+KpSNE6z82mayGiczYv3AfksKHOes/h8CIsuSj2L851YA4fC/rP2EAqLWv
e9i/t9BWBwEm6z/GWAqQ6lPYv+oRFC8WHes/tMmvQZUs2L/SmLivuxTrPyxT
mMqvBdi/bWVEifEM6z8u9cMqOt/Xv8B3t7u3Bes/uq8yYjS517/GzxFHDv/q
P8+C5HCek9e/gW1TK/X46j9tbtlWeG7Xv/JQfGhs8+o/lnIRFMJJ178Yeoz+
c+7qP0iPjKh7Jde/8+iD7Qvq6j+FxEoUpQHXv4KdYjU05uo/SxJMVz7e1r/I
lyjW7OLqP5t4kHFHu9a/wNfVzzXg6j919xdjwJjWv29daiIP3uo/2I7iK6l2
1r/UKObNeNzqP8Y+8MsBVda/6zlJ0nLb6j87B0FDyjPWv7mQky/92uo/PejU
kQIT1r88LcXlF9vqP8jhq7eq8tW/cw/e9MLb6j/b88W0wtLVv2A33lz+3Oo/
eR4jiUqz1b8CpcUdyt7qP6BhwzRClNW/V1iUNybh6j9Svaa3qXXVv2RRSqoS
5Oo/jTHNEYFX1b8jkOd1j+fqP1G+NkPIOdW/mBRsmpzr6j+fY+NLfxzVv8Le
1xc68Oo/eCHTK6b/1L+i7iruZ/XqP9r3BeM849S//xTBKg==
          "]], 
         {RGBColor[
          0.3159191515151515, 0.11731290909090909`, 0.6603037575757575], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAou4q7mf16j/a9wXjPOPUvzZEZR0m
++o/xeZ7cUPH1L9/34aldAHrPzvuNNe5q9S/fsCPhlMI6z86DjEUoJDUvzDn
f8DCD+s/w0ZwKPZ11L+ZU1dTwhfrP9aX8hO8W9S/tgUWP1Ig6z9yAbjW8UHU
v4j9u4NyKes/mYPAcJco1L8QO0khIzPrP0geDOKsD9S/S769F2Q96z+C0Zoq
MvfTvz6HGWc1SOs/Rp1sSiff07/jlVwPl1PrP5OBgUGMx9O/PuqGEIlf6z9q
ftkPYbDTv0+EmGoLbOs/ypN0taWZ078UZJEdHnnrP7TBUjJag9O/jolxKcGG
6z8oCHSGfm3Tv7z0OI70lOs/JmfYsRJY07+hpedLuKPrP67ef7QWQ9O/Opx9
Ygyz6z/AbmqOii7Tv4jY+tHwwus/WxeYP24a07+KWl+aZdPrP4DYCMjBBtO/
QyKru2rk6z8vsrwnhfPSv7Av3jUA9us/Z6SzXrjg0r/RgvgIJgjsPyiv7Wxb
ztK/qBv6NNwa7D910mpSbrzSvzX64rkiLuw/Sg4rD/Gq0r91HrOX+UHsP6pi
LqPjmdK/aohqzmBW7D+Tz3QORonSvxY4CV5Ya+w/BlX+UBh50r92LY9G4IDs
PwPzympaadK/jGj8h/iW7D+JqdpbDFrSv1TpUCKhrew/mXgtJC5L0r/Sr4wV
2sTsPzNgw8O/PNK/B7yvYaPc7D9WYJw6wS7Sv+4Nugb99Ow/A3m4iDIh0r+N
pasE5w3tPzqqF64TFNK/34KEW2En7T/787mqZAfSv+ilRAtsQe0/RlaffiX7
0b+kDuwTB1ztPxrRxylW79G/Fr16dTJ37T94ZDOs9uPRvz2x8C/uku0/YBDi
BQfZ0b8Y601DOq/tP9LU0zaHztG/qGqSrxbM7T/NsQg/d8TRv+4vvnSD6e0/
UqeAHte60b/qOtGSgAfuP2G1O9WmsdG/mYvLCQ4m7j/62zlj5qjRv/4hrdkr
Re4/Gxt7yJWg0b8W/nUC2mTuP8dy/wS1mNG/5B8mhBiF7j/94sYYRJHRv2mH
vV7npe4/vWvRA0OK0b+hNDySRsfuPwYNH8axg9G/ily1zA==
           "]]}}, 
        {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAI0tW6w3d7z+ct1ky5p63v7qGfThM
Ou8/mFMacv4gt7+9RpBcT5juPxdi0HAnmba/LouOVxf37T8b43suYQe2vwxU
eCmkVu0/otYcq6trtb9WoU3S9bbsP6w8s+YGxrS/DXMOUgwY7D86FT/hcha0
vzDJuqjnees/S2DAmu9cs7/Do1LWh9zqP+EdNxN9mbK/wALW2uw/6j/6TaNK
G8yxvyvmRLYWpOk/lvAEQcr0sL8CTp9oBQnpP7UFXPaJE7C/RTrl8bhu6D+y
GlHVtFCuv/eqFlIx1ec/AA/VO3dmrL8UoDOJbjznP1ToQyBbaKq/nhk8l3Ck
5j+wpp2CYFaov5UXMHw3DeY/EkriYocwpr/6mQ84w3blP3zSEcHP9qO/zaDa
yhPh5D/yPyydOamhvwsskTQpTOQ/1SRj7omPnr+2OzN1A7jjP9KTQ57jpJm/
zc/AjKIk4z/izPlJgJKUv1HoOXsGkuI/+J8L47+wjr9DhZ5ALwDiP0g6zykF
7YO/oabu3Bxv4T+A0XzQoLNxv2xMKlDP3uA/oKU2DfNGVD+idlGaRk/gPyD8
wGcOdnw/j0rIdgWB3z9Mk24OqjyKP7KwxGYHZd4/NIqoeONGkz+vH5gEk0rd
P64ARO4ul5k/hJdCUKgx3D+R1gS0mwegPzMYxElHGts/xMf8cn5Xoz+9oRzx
bwTaP+/TCbQ/u6Y/IDRMRiLw2D8T+yt33zKqP1zPUkle3dc/Mj1jvF2+rT92
czD6I8zWPyDN10HdrrA/ZiDlWHO81T8oiYjmeoiyPzDWcGVMrtQ/qtJDzAds
tD/TlNMfr6HTP6upCfODWbY/UFwNiJuW0j8pDtpa71C4P6YsHp4RjdE/IgC1
A0pSuj/ZBQZiEYXQP5R/mu2TXbw/yM+JpzX9zj+FjIoYzXK+P4+lteZb88w/
eZNCwvpIwD8IjY+BlezKP3AnxZiGXcE/NYYXeOLoyD8jAs0PCnfCPxeRTcpC
6MY/lSNaJ4WVwz+srTF4turEP8SLbN/3uMQ/9dvDgT3wwj+yOgQ4YuHFP/Ab
BOfX+MA/XjAhMcQOxz882+RPCwm+P8psw8odQcg/IDWaPQ==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAPNvkTwsJvj/KbMPKHUHIP/6hHYmN
Jro/8u/qBG94yT8qjLJ5Nkq2P9q5l9+3tMo/vJmjIQZ0sj9/ysla+PXLP2iV
4QH5R60/4iGBdjA8zT8gPjQvM7SlPwXAvTJgh84/WFt+lnVZnD/lpH+Ph9fP
P2CQCVg/xoo/QGhjRlOW0D+A2EMQtqlXv26hSZVeQ9E/oLWckLs/kL/7fXK0
5fLRPxigxOJA7J6/6P3do+ik0j+E/r2rFcCmvzMhjGNnWdM/LGZhd739rb/f
53zzYRDUP4RDJuqLl7K/6FGwU9jJ1D+IsD9hEiq2v1FfJoTKhdU/KPr8IHK2
ub8ZEN+EOETWP18gXimrPL2/QGTaVSIF1z+ZkTG9Xl7Av8dbGPeHyNc/TgEG
ilQbwr+t9phoaY7YP0tfLPs21cO/7TRcqsZW2T+aq6QQBozFv5IWYryfIdo/
NuZuysE/x7+Vm6qe9O7aPx4Piyhq8Mi/9sM1UcW+2z9SJvkq/53Kv7ePA9QR
kdw/1Cu50YBIzL/W/hMn2mXdP6Mfyxzv782/VxFnSh493j+9AS8MSpTPvzTH
/D3eFt8/Emnyz8ia0L9xINUBGvPfP2xI9uviadG/iA74yuho4D/uHiNaczfS
v4XeJn2C2eA/lex4GnoD078zAHcXWkvhP2Kx9yz3zdO/j3PomW++4T9SbZ+R
6pbUv5o4ewTDMuI/bCBwSFRe1b9WTy9XVKjiP6zKaVE0JNa/wrcEkiMf4z8S
bIysiujWv91x+7Qwl+M/nwTYWVer17+nfRPAexDkP1OUTFmabNi/IttMswSL
5D8sG+qqUyzZv0yKp47LBuU/LJmwToPq2b8liyNS0IPlP1MOoEQpp9q/rt3A
/RIC5j+feriMRWLbv+aBf5GTgeY/Ed75Jtgb3L/Od18NUgLnP6o4ZBPh09y/
Zr9gcU6E5z9pivdRYIrdv6tYg72IB+g/TtOz4lU/3r+jQ8fxAIzoP1sTmcXB
8t6/SYAsDrcR6T+MSqf6o6Tfv54OsxKrmOk/cjzvQH4q4L+j7lr/3CDqPzNP
n63lgeC/WSAk1Eyq6j+F3WNDiNjgv72jDpH6NOs/ZkevzQ==
           "]]}}, 
        {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
         Thickness[Large], LineBox[CompressedData["
1:eJwdkQkw1HEUx5ehNcoxizQNatXaxjHjrlTzGkNFadhqVSoNOmayNoqoSUZZ
R5JbyWJTrtzsbqrxKtGBTkdDmimtHPv7b4mGicr//5t585s37/3e+34/P26I
WHBMm8ViuSwGfa/ZKZw0GNZAkfKA82ixEoNjv/qsQg0EFpZwfvOUqDAMi+6S
aYBzUTWlW6tAW8MhESdJAz3Bdh/MXBV4P2a7y/RJDaR6RjbzHsoxZEdVx2k/
DXjxlDlunnLkXWbxUpw18I+9cMb7ZQvq8P0CPFZooHXCc+8+/xbUdr3um/yX
guieFNdjA81oXt1pLFZR4NTw2jT6SDP6pP4q+9lNwWS26cwVVRPmvTPTMZJT
UBF9sC83vAkXEh2cnkspCN1fKr/zqxETpB52K5MpsNw0mtdyvhGtuFum2JEU
fLS0j3mm1YgDBm6SzCAKclhRwt6UBrwXav29eRsFu0eU7t+MGrDIWtcsypkC
TvofhzGHeqzyHTbqsqLgakAyxd5ch2+GqgfallKgbW5Sz/etRZN+UbjfHIHY
T8Xi7ftrULTR5nXMdwKUzNbxxPF7qNLtnffoJxB2QvFDcrYaYzedm73ZQWDQ
3rOxPLEK+YNGT3LkBPyneiI7Myvx5xepcF05gefMf1Rgv4DbGlhAYDPDvxz7
7QvHuKkEmhjed3FKrKeSXCBgq0fzvYN8i/A6SQSBUoZnGcY5dXhxQwgsz6H5
3cbRepNKoZDANYaXDCMKAj/a7CSgbUXzkSFnLLMvayuBOIZHKb6TYUmBO4Fh
xn8x1jwbcd/gQOA947cIb/svFJ5ZS+AR468Qm7yXdftYEKhm/NzAz2XGrx6Y
Eshn9Ofj2lP6eZ0GBBIZvbkouTVnL2ITEDP6slHH7XNWnRaBo4yeLJSuv9+e
Nq+GIgG9PwMFZclPtWbVEHWS3peGq2N3ZZhMq8E3np4vQX3FEv7jH2qwyaXn
JaLxYUU6m1LD/B76fTw6ioJwfFINLZfo/hgMH51pOz6hhrdCuh6B7S+SrsaP
q+H0ITo/gu6mS3lOizmLPgmdj/4DWm6uBA==
          "]], 
         {RGBColor[
          0.8049979393939394, 0.713523606060606, 0.25715248484848485`], 
          ArrowBox[CompressedData["
1:eJwdkQlIk2EYx2eli0wn6kLCjolTq0l5rbTiX5J5ZS2paUlKpha0tbQ00RCx
nHZQWppHXkvzyrzmNjvQMl2HB1QekRRkzaP2fltqkahR3/fCw8vD87zP8///
Xl60LDR2CYvF8vgf9C20Nee7TenBok+69mnXq8xraf9zo18Wxd4RCcn4r464
73rkBNP5GWyWRnRO/dDDLkU3bfowCZxj6utsSo+Y/XQ9DSvUZs7PjHqE59r+
uqzLwPrkfTdsZvVIS6X75RBVZnWZ/NGjJFZtlJ+/ipKt7S+uLujRdYB+fwPL
vD7nNpoQzNoLkrpNciG/OyeQsgnMbtHzbsHx9Ip8rQXBavbiOb/XefhcafXm
sS2B4CI9/w5a/Vb2BdoT7PrZH6/NKYRCtFh8zpEgNI7eV4yG7q/Cba4EcaNl
Mv/wErxTdJYXCAmSRfT+MthM5gzl7iLQjmmE3zgVOFsQ9sEpmEC0htajwHiT
Ta1YTDAUVqGqmlEgxa1nDy+aIIrRdw8u9pJG+RmCqb5sz9iRSkzLluvkqQQJ
jN4qDAmKJ3lXCOZ3xyv5T+5jOJT3KKyAIJPRXw3jl1KxSzWBpeaI+3hZDZw+
cp7fVhEUMn5qkbz9wp+iHgKewLelOqMOOtPBBZ9hgnrGXz2k3k4DSRMEXoqN
W07GPYDVsFQSMkfQwfhtwMBo/UiHOYWAVTZNzkEPURP0idO7lkI/478RJQ6m
3AR3CmHX5l0nXZvQcMJhQrmXgpHh0YwRCy95TgQFT1aCeDC7GWt4O6fZ8RRS
GD4tSC/12bQ6i0KHz3h+W0oLFjJc3V6WUlgaTvNqQf5b7jKOioJ/4tGhPEkr
Aq7MVP7so3Cd4deKVfVaK5mOwtumAdvESCVYnjeDsv5S4PbTPJUwcw456GNn
QMR330OHRW3gX2Lxs90NKGX4tuF4QF3P2RADxhw1t718VWhP8veYPWWAsy/N
W4UNlqNS60wDJFGb3nM91VBZxiT2KgxoZvirEZk8Friu04DZonLr33wNHILF
Pyw+GeDN/IcG/wCqt5Ny
           "]]}}, 
        {RGBColor[0.2805936363636364, 0.5226316363636363, 0.7796697272727273],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAnzQ8kkbH7j/uDB/GsYPRP786Cv0L
Ku4/R1Xepdwr0T8FHN0FiI3tP2nxCE2219A/c9i0rLrx7D9T4Z67PofQPwpw
kfGjVuw/BCWg8XU60D/G4nLUQ7zrP/l4Gd634s8/qzBZVZoi6z96T8ln4VfP
P7ZZRHSnieo/is1PgGjUzj/qXTQxa/HpPyvzrCdNWM4/RD0pjOVZ6T9awOBd
j+PNP8X3IoUWw+g/GTXrIi92zT9ujSEc/izoP2ZRzHYsEM0/Pf4kUZyX5z9E
FYRZh7HMPzVKLSTxAuc/sYASyz9azD9ScTqV/G7mP6yTd8tVCsw/l3NMpL7b
5T83TrNaycHLPwRRY1E3SeU/UrDFeJqAyz+ZCX+cZrfkP/65riXJRss/Vp2f
hUwm5D85a25hVRTLPzkMxQzpleM/AsQELD/pyj9CVu8xPAbjP1vEcYWGxco/
dHse9UV34j9CbLVtK6nKP8x7UlYG6eE/urvP5C2Uyj9MV4tVfVvhP7+ywOqN
hso/8w3J8qrO4D9WUYh/S4DKP8GfCy6PQuA/e5cmo2aByj9tGaYOVG7fPzCF
m1Xfico/p6k+/fZY3j90GueWtZnKPzDw4CcHRd0/SFcJZ+mwyj8H7YyOhDLc
P6s7AsZ6z8o/LKBCMW8h2z+cx9GzafXKP58JAhDHEdo/H/t3MLYiyz9iKcsq
jAPZPzDW9DtgV8s/c/+dgb721z/SWEjWZ5PLP9KLehRe69Y/AoNy/8zWyz+E
zmDjauHVP8JUc7ePIcw/gMdQ7uTY1D8Rzkr+r3PMP8x2SjXM0dM/7+740y3N
zD9m3E24IMzSP123fTgJLs0/Tvhad+LH0T9bJ9krQpbNP4TKcXIRxdA/6D4L
rtgFzj8YpiRTW4fPPwP+E7/MfM4/wiN5OW6HzT+uZPNeHvvOPwcO4Zdbiss/
6XKpjc2Azz/qZFxuI5DJP1oUmyXtBtA/ZyjrvMWYxz8Hw8xLIlHQP4VYjYNC
pMU/e8VpOQaf0D8+9ULCmbLDP7cbcu6Y8NA/lf4LecvDwT+7xeVq2kXRPxTp
0E+vr78/hsPErsqe0T80rrCdfN27PxoVD7pp+9E/MbKfMQ==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAANK6wnXzduz8aFQ+6afvRP45Mt9v+
ELg/dbrEjLdb0j8mxOQJNkq0P5iz5Sa0v9I/+BQ5KCKJsD+CAHKIXyfTPwR+
aG2Gm6k/NKFpsbmS0z+IhKxqMjCiP6+VzKHCAdQ/GHt8kJCglT/w3ZpZenTU
P4BI7TBA3ns/+HnU2ODq1D9AyKndcmp+v8ppeR/2ZNU/WNF0uvUVlr9irYkt
uuLVP9zlcX49PaK/wkQFAy1k1j+YsFs/FmSpv+ov7J9O6dY/cuT7j8I/sL/b
bj4EH3LXP1wXIxDFx7O/kgH8L57+1z8KcSOgEkq3vxHoJCPMjtg/gPH8P6vG
ur9YIrndqCLZP7qYr++OPb6/Z7C4XzS62T9es53XXtfAvz6SI6luVdo/wS1Q
vxuNwr/cx/m5V/TaP4I77y7+P8S/PlE7ku+W2z+q3HomBvDFv20u6DE2Pdw/
OBHzpTOdx79jXwCZK+fcPyXZV62GR8m/H+SDx8+U3T93NKk8/+7Kv6O8cr0i
Rt4/LCPnU52TzL/v6Mx6JPveP0SlEfNgNc6/BGmS/9Sz3z+9uigaStTPv2+e
4SUaOOA/zjGWZCy40L9Bsq8vIZjgP+1PDoDGhNG/928znf/54D/At3xf80/S
v5DXbG61XeE/Q2nhArMZ078O6VujQsPhP3hkPGoF4tO/b6QAPKcq4j9aqY2V
6qjUv7IJWzjjk+I/8jfVhGJu1b/bGGuY9v7iPzoQEzhtMta/6NEwXOFr4z80
MkevCvXWv9k0rIOj2uM/4J1x6jq217+sQd0OPUvkPz5Tkun9ddi/ZfjD/a29
5D9MUqmsUzTZvwFZYFD2MeU/DJu2Mzzx2b+BY7IGFqjlP34tun63rNq/5Be6
IA0g5j+hCbSNxWbbvyx2d57bmeY/dS+kYGYf3L9Yfup/gRXnP/ueiveZ1ty/
ZzATxf6S5z8xWGdSYIzdv1mM8W1TEug/GVs6cblA3r8xkoV6f5PoP7SnA1Sl
896/60HP6oIW6T/+PcP6I6Xfv4qbzr5dm+k//Y68spoq4L8Mn4P2DyLqP9Wj
EsrsgeC/c0zukZmq6j+F3WNDiNjgv72jDpH6NOs/GwG54A==
           "]]}}, 
        {RGBColor[0.2805936363636364, 0.5226316363636363, 0.7796697272727273],
          Thickness[Large], LineBox[CompressedData["
1:eJwVzWtMU2cAh3FUkBqxdYCU6URBBdHYbqVurrD8R2DEy0wIEDSgCKwMrZUp
K/HGECm2gkYnTovGKQ47FcRakaUgOIpEzLZg3vecKTCnpN0g8p5zvDF04P3D
k9/HJzz3m5S88T4+PjFve+cpbVxVUpcEKWDWDaeZ4GtrW9agXcKZjWRCQiWB
Z1ZkeegeCf96boQmHiIIelU0vk8v4VLha9+maoKx8IbehV9I8J2x8+aRGoKj
+36fJI+U4Pnr068GzhEM6EhVqb+EpU2xf/7sJBDU10zmByJ0Z0vD7rQQnDNU
OUL+EPGLU4atnQRKtjJB5xDRwnMfW7sJYp2P1FKViGVTPX7+vQTBbTuKNFtF
5OhjLox4CX6SC0H+a0RMIF3R6Q/f/uyJk43xItTpp0rmjRH8XVaemRMlwvu0
uU7vT1Fpr/cdnCJiTp3yYlAwhTClZeLLYQFsm2uvJpzCr9WRU3tXALJP6Nwq
CurYP62vU8AH2dev/xpHkfYgOeJ0g4CybYvmqlZQVKx/YX1+VEDh+b7MgAwK
06KDSf2lAoQnvxkyNlBMWzIpa/VGAQ/TXiWHbqdYv9fQnZ0uoPiWSZ5UQfFt
WKPt/3gBh3NVtd5jFJpRT3OESoBWvlDxuI7CPmNUe3e6gCxqSClopbhV9lwW
KRMQ6BCNmd0UDep7i31GGJLPNGa5+ik+j6i/aviHIfRya9SepxTWjHXH8ziG
DT2ym+6JHMp7RsmjDoZEZTUKpnP45MR3uQGNDOcLDAcqVRxO2gdXuGoZbPd2
XQlJ4OAaXnJg+AcGRX6PM3A1h30VW6LdFoZAmclSsonDe/pDM8O2M5x0p2gy
zBy+LK82TDYyXDlsarIf4xA3ZJlasY4hraRXkXOJQ/+RNQpbKkPx7t3x+7s4
6Kzv5y9eyqD+0bg86j6H5dfalPrPGIzk+ALNMw7y2GXhc2IYNGEBngsKHtaX
V82F0Qxmc/tm23weTX4hSJnNsHac6/bjeB621FWpHUoGt+1JUGsmjw8Hd7V3
KBguJm2eP1LEY0f7QUuqjGGu/KPgmu95FN+32E3jGOZJ2jvN9Ty0iXkzI8eG
4BjYuSWhi0eNtEDK/28Inc/8vHFeHm8AUIabRg==
          "]], 
         {RGBColor[0.8680576969696969, 0.660111, 0.2341370909090909], 
          ArrowBox[CompressedData["
1:eJwVjX9MlHUAxjmTaWbckBu3OYmQPG8QQ+WQ7kCe0Cs9KkgQuCaoHTEbcUQq
hB2to0MNxgQBi9RuTkEPzF6XCCbK2Mlpggwl3ve9X7tESNj3+4YHeqM1Obr+
ePbs2Wf7PFG6z7OKlgQFBSUE8n+fnYmZ2e8jGJgPnkiZGEO/h5eqvAS6qD9i
LyyO4XtJyakzlKC2cOK9b9aweL1xqrxhiiC5b/O235Us9u1M71w1SVCxcTi0
Oo/FLm1LkmycIOXWhZ6Ochb+NlvEoIeg7uPbiq0tLPKTPPl+d8D/WnRt+lUW
ZWLPc6uLwPbM1mUdZaGMs/0lDewr45d6OudYdDc2xy84CWTTYyeWhHGYVmpG
DwS4bFnatsEEDg/kT4YrAz4m1TskyuGgLyheKw78WY8/ju2o4NDHsyOJjwj2
zEsL+1s5DPwg54THBEcqG7/Y3svB+JMuUfGEIHHV+3mpHg6z06a/XyEEZQPp
knYRj/Cv6v0HZwgUDfUWwzoe3g+rPi15RmA8ECqxangY9dmxvn8ItKWO3MpS
HgMjodtDFgmufztZZm7m0fdlT29PMEUbs0mn+I1HSZG6dnYlhdR3O0b1J4+R
1utMr4QiPLt1kAm2YzpUEh8eQWG+x6SdfNOOrge5y0QyCka7opFk25HEGt+q
iqdID7JcYwx2lEY2WY8pKcr6v/t18rwdu5m69mg1ReSPPx+tvW/Hi5ri8cxM
Cm1d2Cazz46ssxsrVu6mWN1yq2ttpAP5okeFH+2nKOruDJFqHIiwlHduPkSR
MuuE4aADTS1zmrZqilPqjB2ZZgdu3sndeq6BoubKUnnzPQdOp55r3mCmmFf4
Pe/6HNjwYmxL5mWK5w9V+uIoJw4vzrztv0lhOHZjdOEDJyp2eM9sGaaoz/la
LDI4EcPbd77qoZClmKIPWZxoumTZq39KoUm+H5LHOcHY9t4pEAmYz9I+7Fjq
QvU6/xFPmIB40/rPShJcWD5kMj+VCfAOKd1mnQvqbq/4hEqAKq7hjbQmFxKn
1E5rhgDxxfXqbKsLzgLjQk2hAL3ypWR2LsBXnz/MVwrYNRn18t1oN95Zcznj
xnEBdy+afpHnuLHiE3NVXLsAq0ke++9RN/4DomKouQ==
           "]]}}, 
        {RGBColor[
         0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8gWabFuJ6T+48dVuyEjjPzCRBbFy
Buk/3qTHInfm4j/x/74HN4PoP7q94ub7hOI/OVLGcKj/5z9RPCe7ViTiPwWI
G+zGe+c/oCCVn4fE4T9Wob55kvfmP6dqLJSOZeE/LJ6vGQtz5j9nGu2Yawfh
P4d+7ssw7uU/3i/XrR6q4D9mQnuQA2nlPxCr6tKnTeA/y+lVZ4Pj5D/zF08Q
DuTfP7R0flCwXeQ/NqUbm3gu3z8i4/RLitfjP+n9OkaPet4/FTW5WRFR4z8N
Iq0RUsjdP41qy3lFyuI/pBFy/cAX3T+JgyusJkPiP6nMiQncaNw/C4DZ8LS7
4T8hU/Q1o7vbPxFg1UfwM+E/CqWxghYQ2z+dIx+x2KvgP2TCwe81Zto/rsq2
LG4j4D8wqyR9Ab7ZP4aqOHVhNd8/bF/aKnkX2T+6hp+1QCPePxjf4vicctg/
9ymiGnoQ3T81Kj7nbM/XPz2UQKQN/ds/w0Ds9egt1z+NxXpS++jaP8Ii7SQR
jtY/6L1QJUPU2T8y0EB05e/VP0x9whzlvtg/Eknn42VT1T+5A9A44ajXP2SN
4HOSuNQ/MFF5eTeS1j8nnSwkax/UP7Jlvt7netU/W3jL9O+H0z8+QZ9o8mLU
PwAfveUg8tI/0uMbF1dK0z8UkQH3/V3SP3BNNOoVMdI/m86YKIfL0T8Yfujh
LhfRP5PXgnq8OtE/lOtw/EP5zz/7q7/snavQPwppSH7ews0/1EtPfyse0D+a
dFdJLYvLP0BuY2TKJM8/NQ6eXTBSyT+2280KlhDOP+g1HLvnF8c/D+Dd8bn/
zD+t69FhU9zEP0l7kxk28ss/gy+/UXOfwj9kre6BCujKP24B5IpHYcA/Ynbv
KjfhyT/kwoAaoEO8P0TWlRS83cg/Cp+osRnCtz8FzeE+md3HP1aXP9v7PbM/
qVrTqc7gxj+IV4sujW6tPy5/alVc58U/uLh1y/NbpD+UOqdBQvHEP2ikfBpX
iJY/3YyJboD+wz9gICmfozlxPwl2EdwWD8M/cEdXAsbri78V9j6KBSPCP3SP
MlBGIqC/Aw0SeUw6wT/AFPH6yU6pv9S6iqjrVMA/VL2hBg==
          "]], 
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwBTx+slOqb/Uuoqo61TAP96waEA+
QLG/C/9RMcblvj82u+nwrtu1vzO22ZJlKL0/Zqn7Drd5ur8gm6x1tXG7P3B7
nppWGr+/0K3K2bXBuT+rGOnJxt7Bv0LuM79mGLg/iWVL/a0xxL96XOglyHW2
P00kdufghca/efjnDdrZtD8FVWmIX9vIvzfCMnecRLM/p/ck4Ckyy7+6uchh
D7axPzgMqe4/is2/AN+pzTIusD+2kvWzoePPvxFkrHUNWq0/kUUFmCcf0b+s
ZZtSFmWqP7z6czEkTdK/zcIgMoB9pz/c6EamxnvTv3d7PBRLo6Q/9A9+9g6r
1L+nj+74dtahPwJwGSL92tW/wP5twAcunj8HCRkpkQvXv0CVK5TjyZg/Att8
C8s82L/M4hVtgYCTP+7lRMmqbtm/+M5ZlsKjjD/VKXFiMKHav0xG4VwGfII/
s6YB11vU27+AV4RbnBNxP4hc9iYtCN2/gAo4cF8uQ79QS09SpDzev+h93yIs
dHW/EXMMWcFx378kj4IhwguEv+Tplh3CU+C/OPE7J+onjb+6tll89u7gv5jy
TRFHB5O/DKDOyH2K4b+ANdEJ11+Xv9ml9QJYJuK/XsEn/aSdm78hyM4qhcLi
vy6WUeuwwJ+/5AZaQAVf47/2WSdqfeShvyNil0PY++O/To0PXEHbo7/Z2YY0
/pjkvxhlYUukxKW/D24oE3c25b9i4Rw4pqCnv70efN9C1OW/IgJCIkdvqb/o
64GZYXLmv17H0AmHMKu/jtU5QdMQ578QMcnuZeSsv7Dbo9aXr+e/PD8r0eOK
rr9M/r9Zr07ov+94e1gAErC/ZD2Oyhnu6L9+JBZH3tewv/aYDinXjem/SaJl
tAuXsb8EEUF15y3qv0/yaaCIT7K/jKUlr0rO6r+RFCMLVQGzv5FWvNYAb+u/
EgmR9HCss78NJAXsCRDsv8vPs1zcULS/CA4A72Wx7L/DaItDl+60v34Urd8U
U+2/99MXqaGFtb9uNwy+FvXtv2cRWY37Fba/2HYdimuX7r8UIU/wpJ+2v8DS
4EMTOu+//QL60Z0it78iS1brDd3vvyK3WTLmnre/8bu5cg==
           "]]}}, 
        {RGBColor[
         0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8gWabFuJ6T+48dVuyEjjP2ZTexzV
Buk//KcVyjzn4j/LCJa1wIToPzXKGoQSiOI/IibqNx4D6D9lWOWcSSviP2yr
d6Ptgec/iVJ1FOLQ4T+mmD74LgHnP6S4yurbeOE/0+0+NuKA5j+ziuUfNyPh
P/GqeF0HAeY/ucjFs/PP4D8B0OttnoHlP7Zya6YRf+A/A12YZ6cC5T+niNb3
kDDgP/ZRfkoihOQ/GhUOUOPI3z/brp0WDwbkP9Lw+W1nNd8/sXP2y22I4z91
pHBJrqbeP3qgiGo+C+M/BTBy4rcc3j8zNVTygI7iP36T/jiEl90/3jFZYzUS
4j/jzhVNExfdP3uWl71bluE/NOK3HmWb3D8LYw8B9BrhP3DN5K15JNw/jZfA
Lf6f4D+akJz6ULLbP/8zq0N6JeA/rCvfBOtE2z/HcJ6F0FbfP6qerMxH3No/
cklZVpBj3j+T6QRSZ3jaPwDyhvkzcd0/ZwzolEkZ2j9xaidvu3/cPyYHVpXu
vtk/xrI6tyaP2z/R2U5TVmnZP//KwNF1n9o/Z4TSzoAY2T8bs7m+qLDZP+gG
4QduzNg/G2slfr/C2D9UYXr+HYXYP/7yAxC61dc/rJOespBC2D/FSlV0mOnW
P/CdTSTGBNg/bnIZq1r+1T8dgIdTvsvXP/tpULQAFNU/NzpMQHmX1z9rMfqP
iirUPzzMm+r2Z9c/v8gWPvhB0z8sNnZSNz3XP/Yvpr5JWtI/CHjbdzoX1z8T
Z6gRf3PRP8+Ry1oA9tY/EG4dN5iN0D+Bg0b7iNnWP+SJCl4qUc8/Hk1MWdTB
1j9u17/y64jNP6fu3HTirtY/vcRaLHXCyz8aaPhNs6DWP9NR2wrG/ck/erme
5EaX1j+0fkGO3jrIP8TizzidktY/WkuNtr55xj/644tKtpLWP8W3voNmusQ/
Gr3SGZKX1j/2w9X11fzCPyZupKYwodY/7W/SDA1BwT8e9wDxka/WP1h3aZEX
Dr8/AFjo+LXC1j9nTvlSpJ27P86QWr6c2tY/AGVUXsAwuD+GoVdBRvfWPya7
erNrx7Q/KorfgbIY1z/aUGxSpmGxP7pK8n/hPtc/5n+pjA==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA2lBsUqZhsT+6SvJ/4T7XPzRMUnbg
/qs/NeOPO9Np1z/UdWLbkkGlP5xTuLSHmdc/ID0SqMcWnT/tm2vr/s3XP5AZ
GYFNcY8/Kryp3zgH2D8A1Z4BGEZjP1K0cpE1Rdg/kLLvMcexhb9lhMYA9YfY
P9iO9gpNDJi/YiylLXfP2D8sI+SqvJiiv0ysDhi8G9k/0H+2PDQkqb8hBAPA
w2zZP1hd8jqNqK+/4jOCJY7C2T/l3cvS4xKzv407jEgbHdo/kU1TvvFNtr8k
GyEpa3zaP659D2Bwhbm/ptJAx33g2j88bgC4X7m8vxNi6yJTSds/Ph8mxr/p
v79sySA867bbP1hIQEVIi8G/sAjhEkYp3D9M4YcC6R/Dv+AfLKdjoNw/eNrp
GsKyxL/6DgL5QxzdP9ozZo7TQ8a//dViCOec3T947fxcHdPHv+50TtVMIt4/
Ugeuhp9gyb/L68RfdazeP2KBeQta7Mq/kjrGp2A73z+tW1/rTHbMv0RhUq0O
z98/MZZfJnj+zb/xrzS4vzPgP/AwerzbhM+/NpuFeFmC4D/yldfWu4TQv3Dy
m5dU0+A/ikP//CVG0b+gtXcVsSbhPz8htFCsBtK/xuQY8m584T8RL/bRTsbS
v+F/fy2O1OE//2zFgA2F07/yhqvHDi/iPwnbIV3oQtS/+PmcwPCL4j8teQtn
3//Uv/PYUxg06+I/cUeCnvK71b/kI9DO2EzjP9FFhgMid9a/y9oR5N6w4z9O
dBeWbTHXv6n9GFhGF+Q/6NI1VtXq1796jOUqD4DkP55h4UNZo9i/Q4d3XDnr
5D9xIBpf+VrZvwHuzuzEWOU/YA/gp7UR2r+1wOvbscjlP20uMx6Ox9q/Xf/N
KQA75j+WfRPCgnzbv/ypddavr+Y/2vyAk5Mw3L+RwOLhwCbnPzyse5LA49y/
G0MVTDOg5z+6iwO/CZbdv5kxDRUHHOg/VZsYGW9H3r8PjMo8PJroPw3buqDw
996/eVJNw9Ia6T/hSupVjqffv9qElajKnek/aHVTHCQr4L8wI6PsIyPqP3Bd
eCQPguC/fC12j96q6j+F3WNDiNjgv72jDpH6NOs/aEO1+g==
           "]]}}, 
        {RGBColor[
         0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8gWabFuJ6T+48dVuyEjjP+RIYciH
Buk/ZaLL9ufm4j/B3i1li4PoP9iz8ja/huI/jcf/QmYA6D8UJksvTijiP0UD
12EYfec/FvnU35TL4T/qkbPBofnmP+AskEiTcOE/fHOVYgJ25j9xwXxpSRfh
P/qnfEQ68uU/ybaaQre/4D9mL2lnSW7lP+kM6tPcaeA/vwlbyy/q5D/Qw2od
uhXgPwQ3UnDtZeQ//LY5Pp6G3z82t05WguHjP+anALI35d4/VYpQfe5c4z9f
WiqWQEfeP2GwV+Ux2OI/Z8626ris3T9ZKWSOTFPiP/wDpq+gFd0/PvV1eD7O
4T8g+/fk94HcPxAUjaMHSeE/1LOsir7x2z/QhakPqMPgPxUuxKD0ZNs/fUrL
vB8+4D/oaT4nmtvaPyrE5FXdcN8/RmcbHq9V2j83mT20KWXePzMmW4Uz09k/
HBShlCRZ3T+upv1cJ1TZP9k0D/fNTNw/uOgCpYrY2D9x+4fbJUDbP1Dsal1d
YNg/42cLQiwz2j93sTWGn+vXPy56mSrhJdk/LDhjH1F61z9TMjKVRBjYP3GA
8yhyDNc/UpDVgVYK1z9DiuaiAqLWPyuUg/AW/NU/pFU8jQI71j/ePTzhhe3U
P5Ti9Odx19U/ao3/U6Pe0z8RMRCzUHfVP9CCzUhvz9I/HkGO7p4a1T8PHqa/
6b/RP7kSb5pcwdQ/KF+JuBKw0D/jpbK2iWvUPzaM7mbUP88/m/pYQyYZ1D/U
pd9g4B7NP+IQYkAyytM/HwvmXkn9yj+36M2trX7TPyC8AWEP28g/G4Kci5g2
0z/UuDJnMrjGPw3dzdny8dI/OQF5cbKUxD+O+WGYvLDSP1OV1H+PcMI/nddY
x/Vy0j8ldUWSyUvAPzt3smaeONI/TkGXUcFMvD9n2G52tgHSP7YvzoapALg/
IvuN9j3O0T+CtS/ES7OzP2vfD+c0ntE/bKV3E1DJrj9ChfRHm3HRP6QO5a58
KaY/qOw7GXFI0T9oTU+1Og6bP50V5lq2ItE/ILb9WsiIgz8gAPMMawDRP+Dm
nOYoKn6/MaxiL4/h0D/Y8CKAkN6Yv9IZNcIixtA/33+itw==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA2PAigJDemL/SGTXCIsbQPzAl+lLX
G6W/AElqxSWu0D8oo41V8sqtv745AjmYmdA/Kvnlo0w+s78K7PwceojQP1SJ
2hRmmLe/5F9acct60D8egqR9xfO7v0yVGjaMcNA/vfEhbzUowL9EjD1rvGnQ
P7VWXBsrV8K/ykTDEFxm0D//b4HDw4bEv96+qyZrZtA/kz2RZ/+2xr+A+vas
6WnQP3a/iwfe58i/sveko9dw0D+m9XCjXxnLv3G2tQo1e9A/JOBAO4RLzb+/
NiniAYnQP+t++85Lfs+/nHj/KT6a0D8AaVAv29jQvwd8OOLprtA/sWwY9eHy
0b8BQdQKBcfQP4jK1Tg6DdO/icfSo4/i0D+Fgoj64yfUv6APNK2JAdE/qZQw
Ot9C1b9FGfgm8yPRP/AAzvcrXta/eeQeEcxJ0T9gx2AzynnXvztxqGsUc9E/
9+fo7LmV2L+Mv5Q2zJ/RP7RiZiT7sdm/a8/jcfPP0T+XN9nZjc7av9iglR2K
A9I/oGZBDXLr27/VM6o5kDrSP9Dvnr6nCN2/YIghxgV10j8m0/HtLibev3me
+8LqstI/ohA6mwdE378hdjgwP/TSPyPUO+MYMeC/WA/YDQM50z8ITdW3VsDg
vxxq2ls2gdM//3JpS71P4b9whj8a2czTPwtG+J1M3+G/UmQHSesb1D8mxoGv
BG/iv8ADMuhsbtQ/WPMFgOX+4r/AZL/3XcTUP5vNhA/vjuO/TYevd74d1T/0
VP5dIR/kv2lrAmiOetU/Xolya3yv5L8TEbjIzdrVP9xq4TcAQOW/THjQmXw+
1j9t+UrDrNDlvxShS9uapdY/EjWvDYJh5r9qiymNKBDXP8kdDheA8ua/Tzdq
ryV+1z+Ts2ffpoPnv8KkDUKS79c/cPa7ZvYU6L/C0xNFbmTYP2LmCq1upui/
U8R8uLnc2D9jg1SyDzjpv3B2SJx0WNk/es2YdtnJ6b8d6nbwntfZP6XE1/nL
W+q/WB8ItTha2j/iaBE85+3qvyIW/OlB4No/MrpFPSuA6796zlKPumnbP5a4
dP2XEuy/YUgMpaL22z8NZJ58LaXsv9eDKCv6htw/DGC80w==
           "]]}}, 
        {RGBColor[
         0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
         Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8gWabFuJ6T+48dVuyEjjP9LleM15
Buk/+NCR4MPm4j98Uox5U4PoPyNuC94uhuI/8kvUcOj/5z89yUJnCSfiPzLS
ULM4fOc/QuI3fFPJ4T885QFBRPjmPzW56hwNbeE/EIXnGQt05j8UTltJNhLh
P6+xAT6N7+U/4KCJAc+44D8Ya1CtymrlP5qxdUXXYOA/TLHTZ8Pl5D8/gB8V
TwrgP0qEi213YOQ/oxkO4Wxq3z8S5He+5trjP6GuWK8aw94/pdCYWhFV4z94
vx6Vpx7ePwNK7kH3zuI/KkxgkhN93T8qUHh0mEjiP7RUHade3tw/HOM28vTB
4T8Y2VXTiELcP9gCKrsMO+E/VtkJF5Kp2z9gr1HP37PgP25VOXJ6E9s/suit
Lm4s4D9hTeTkQYDaP5tdfbJvSd8/K8EKb+jv2T9oAwieeTneP8+wrBBuYtk/
ycL7H/oo3T9MHMrJ0tfYP76bWDjxF9w/owNjmhZQ2D9Ijh7nXgbbP9Nmd4I5
y9c/Z5pNLEP02T/dRQeCO0nXPxzA5Qee4dg/wKASmRzK1j9k/+Z5b87XP313
mcfcTdY/QlhRgre61j8UypsNfNTVP7XKJCF2ptU/hJgZa/pd1T++VmFWq5HU
P87iEuBX6tQ/WfwGIld80z/wqIdslHnUP4u7FYR5ZtI/7ep3ELAL1D9RlI18
ElDRP8Oo48uqoNM/rIZuCyI50D9z4sqehDjTPzYlcWFQQ84//JctiT3T0j9E
cNfYSRPMP2DJC4vVcNI/de4PfTDiyT+cdmWkTBHSP9OfGk4EsMc/sp861aK0
0T9ZhPdLxXzFP6JEix3YWtE/B5ymdnNIwz9qZVd97APRP9/mJ84OE8E/DQKf
9N+v0D/OyfakLrm9P4kaYoOyXtA/KixCBxpKuT/frqApZBDQP9b0McPf2LQ/
HH61zumJzz/SI8bYf2WwPyyWIHnJ+M4/RHL9j/Tfpz/wpYJSZ23OPyDTbkM8
4Z0/Z63bWsPnzT8gtuia8fOHP5KsK5LdZ80/AA/SB4XXd79uo3L4te3MP0DJ
y+pR7pe//pGwjUx5zD+8uoiWrPekv0J45VGhCsw/pLyjaQ==
          "]], 
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAvLqIlqz3pL9CeOVRoQrMPzTEYoR7
/K2/OFYRRbShyz9+AHrfyoKzv+IrNGeFPss/kjgeo30JuL8++U24FOHKP1QK
Hg1Wkry/Tr5eOGKJyj/hurwOqo7AvxB7ZudtN8o/bT0Y6jvVwr+GL2XFN+vJ
P8mMoZjgHMW/sNta0r+kyT8DqVgamGXHv4t/Rw4GZMk/E5I9b2Kvyb8aGyt5
CinJP/pHUJc/+su/XK4FE83zyD+2ypCSL0bOv1A519tNxMg/Jo1/MJlJ0L/4
u5/TjJrIP1qbTQGkcNG/VDZf+ol2yD/6j7I7OJjSv2GoFVBFWMg/BWuu31XA
078iEsPUvj/IP3ssQe386NS/lnNniPYsyD9d1GpkLRLWv77MAmvsH8g/qmIr
Rec717+YHZV8oBjIP13Xgo8qZti/JGYevRIXyD+AMnFD95DZv2WmnixDG8g/
D3T2YE282r9Y3hXLMSXIPwicEugs6Nu//w2EmN40yD9sqsXYlRTdv1g16ZRJ
Ssg/O58PM4hB3r9kVEXAcmXIP3h68PYDb9+/JGuYGlqGyD8OHjSShE7gv5Z5
4qP/rMg/F3K73cvl4L+8fyNcY9nIP1U5Dt5XfeG/ln1bQ4ULyT/JcyyTKBXi
vyJzilllQ8k/cyEW/T2t4r9hYLCeA4HJP1JCyxuYReO/U0XNEmDEyT9k1kvv
Nt7jv/Yh4bV6Dco/r92Xdxp35L9P9uuHU1zKPy1Yr7RCEOW/WcLtiOqwyj/k
RZKmr6nlvxeG5rg/C8s/zqZATWFD5r+IQdYXU2vLP+96uqhX3ea/rfS8pSTR
yz9Fwv+4knfnv4OfmmK0PMw/0XwQfhIS6L8PQm9OAq7MP5Oq7PfWrOi/TNw6
aQ4lzT+JS5Qm4Efpvzxu/bLYoc0/tV8HCi7j6b/f97YrYSTOPxjnRaLAfuq/
Nnln06eszj+u4U/vlxrrvz7yDqqsOs8/e08l8bO267/8Yq2vb87PP38wxqcU
U+y/tWUhcvgz0D+2hDITuu/sv8aV5yOYg9A/I0xqM6SM7b+xQSntFtbQP8iG
bQjTKe6/dmnmzXQr0T+hNDySRsfuvxQNH8axg9E/LyCrYg==
           "]]}}, 
        {RGBColor[0.8774782727272727, 0.2882958181818182, 0.1596218181818182],
          Thickness[Large], LineBox[CompressedData["
1:eJwtkw0s1GEcx+/O6SxbJSbrqlFnbiqyS6Xh25LV5aXcWC/GcitauigkSZle
6ZVWLuUqo8RuxripSy8m4a444X8vXu41lW40li4hPevZfnv22+95fr/v9/Ps
8RCmCA4xaDQaby7+7WWiUu9vNyw4tyOO9bNiGCOzjYJ8dwsyRu1kS3yG4V/U
c5pbZ0bJyYdRFY2fcZYzVvY+xAzrgK9WEvoZbTJHRWKvCameDbuYvRY48b3G
7ZNM8IjwretNtCBWt5Vd8csIeoyE7jxlRrkoPmRbgRELgxjBLwvNGJ3NSjax
jYiwj01SeZuxqejO7TypAS+klTmCVhPyOLVyDxgQvWEkFwdNUMiUpjddeix/
uPK4mGmCC/+L4wGhHq5fIiPjnhrRJGMdnhkeQpBTqtuNcCMidcGNgY5DKFp6
qdN7wgDDbIZDts8gljAL03gSA9I50r3PowbQ8eEWs3KnAQ58c+Vkej+kmRfz
rtj0KBWxbf5iHV7RU6w9VXr4FQn46XItZpIjQq/H69Eiy79XN6jBUZl7Qa2L
Hnt0b76O0TVY3KzKPF8yhK+zkwG+nmo8o8IashcNIZvjWyDaQaFUWqMMuzqI
BfxEbXVyH8ZCppvG5w/iMXmPXjwqWZ+fdnMA6wn/HkhrY3wUbgNoJbw/wS3/
gPT3k37sJ3y7YXCPmcfY3A8r4dkNVhYvwKDSIZfwU6GgcCpUfEwHZ8KrC8lH
pGu8FukQTvh0osqOb70u0+IE4fEBoXEfLysTtLhL/CsQnBn0x+ikRTPx2w5x
1N2dqlYNhom/NoR/V58oztX899OK+O32Gf7Q/Nffgo9CdlQ1QzPH55/eZpQE
s1m2DjVyiL63eKdlFq8Qq7GL6HmNiI1q2rIjajwg8+XgRd/Z9mOLGhYyrxEn
/QKFkmVqrCP96+Haqdy3aprCGdKvFi5rt6/ONVK4Ru5XIzWsuq9eSYFLzpeD
622LfSuncIrU7wPt6+QVNRR2k/wq6riCiYRKCjSyyl9eIP+Dwl82EZV6
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwtk38s1GEcx9FJyz/XKl1dGsXYVdSUfgwfC3GJulusJtJVNKUffiRZyyg5
jcJEmrOK3NjN/LquXe3jR1M4nRO+98OP++VnWYolqXSe7tmePfvseZ7P5/1+
fZ7HkXeVe8HKwsLCwzSX1/+j4s3doEibH5UUzMQzF/aWPMAGV+7cWSEFPSR+
ir4du6SVtRQcL+i75VpfgSzWQkSLlAIJ2a/Ba8E1A40yCgqc6qSOUId2OwO3
p+spOEzONyJDLju17Q8F35fmD7g7S/Dmbi+eYLMShOS+FD1PFPl/81VChMZH
4mWLyNmntNgcp4Rskq8FP6hpxVtKlMDTHGJW/mzFch+mzUKnErxI/nfYy2Ny
aqxUwGDHqGsuteO5QOvkvaAy1/uA3C/KhOJ0FcjE/Cf1wx1Yxnl8RNGugipS
vwsPp3j/1q9RQ4aT6ORrTjeGRn68LzurNuuRY/0K9nSuWG3KP2EbzevBhDjR
Dhe6BrKIPgUW5i8GlFzRwOxS6iUDsxfpqR4HdAoNRBO9vTjlELbS6uAgdItt
u2L6P6EjP1r06+UgHCT6+/BVXZhbF2PIxKOMNZXXj9Wle/iJD4dgPfEzgIt+
f97Orh426XPPiQ+iUCiqlQU/GIYZ4k+JjVRwUxp9BCI1zZMzliq0b1WkZJaO
QCfxq8IEsUNO3Tot7C/gspOkaqRdDgnIjdLCM+Jfg22WV6f7qrVAZxuF80mD
2JByLyN7QQtphMcQKrof0YRHdDC5lLwqzW0Y7Wn5iR4CHYQTPiNYuilLzprT
QZvY5uLf8RH0X3ONkXdUb+alRfuJ0NDIKj3IxTJDc48Wncu3Xi+hGcz8dHja
83M6nDeY+llUmCHSYatIeJvbbjDz1GO4dUSsgmWE6vgoP/8cPW70tvJ5k2+E
M4SvHleHCSzXLhrBju0yax1rQFaIe31/zKiZtwFTnZuO0fpHIdNp5vl7PyPO
D7mrBQFjZv5GfHGjnFMpGTPxlHD5DqN45+sK8Qa3cdP7WO7HKPLJ/xiHf3Fw
sZU=
           "]]}}, 
        {RGBColor[0.8774782727272727, 0.2882958181818182, 0.1596218181818182],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAom2dKuqO5T9/SF0H9qXnPyve3jSo
IOU/ZA12CC8u5z8zC2wDpLLkP1juZ5sCueY/ufRElt1E5D9Z6zLAcEbmP8Ca
ae1U1+M/aATXdnnW5T9E/dkICmrjP4U5VL8caeU/SRyW6Pz84j+uiqqZWv7k
P8v3nYwtkOI/5vfZBTOW5D/Oj/H0myPiPy2B4gOmMOQ/T+SQIUi34T+BJsST
s83jP0/1exIyS+E/4ed+tVtt4z/OwrLHWd/gP1DFEmmeD+M/y0w1Qb9z4D/N
vn+ue7TiP0mTA39iCOA/WNTFhfNb4j+HLDsChzrfP+4F5e4FBuI/fKsGj8Rk
3j+VU93psrLhP3CjaaR9j90/SL2udvph4T9jFGRCsrrcPwpDWZXcE+E/U/71
aGLm2z/a5NxFWcjgP0JhHxiOEts/t6I5iHB/4D8tPeBPNT/aP6F8b1wiOeA/
FpI4EFhs2T8z5fyE3erfP/1fKFn2mdg/PwnNdKto3z/hpq8qEMjXP2VlT4iu
694/xGbOhKX21j+o+YO/5nPeP6WfhGe2JdY/B8ZqGlQB3j+EUdLSQlXVP4DK
A5n2k90/YXy3xkqF1D8VB087zivdPz0gNEPOtdM/xntMAdvI3D8WPUhIzebS
P5Io/Ooca9w/7dLz1UcY0j96DV74kxLcP8HhNuw9StE/fSpyKUC/2z+UaRGL
r3zQP5x/OH4hcds/y9QGZTlfzz/VDLH2NyjbP2bIGcUKxs0/K9LbkoPk2j8G
rls20y3MP57PuFIEpto/moXMuJKWyj8qBUg2umzaPyxPbExJAMk/0nKJPaU4
2j+6Cjvx9mrHP5YYfWjFCdo/Qbg4p5vWxT909iK3GuDZP8ZXZW43Q8Q/bwx7
KaW72T9M6cBGyrDCP4Zahb9knNk/yWxLMFQfwT+34EF5WYLZP4LECVaqHb8/
BJ+wVoNt2T9rk9ptmv67P2yV0VfiXdk/TEYJqHjhuD/ww6R8dlPZPyTdlQRF
xrU/jyoqxT9O2T/3V4CD/6yyP0nJYTE+Ttk/gG2RSVArrz8goEvBcVPZPwTz
3dB9AKk/EK/ndNpd2T90QOach9miPx72NUx4bdk/aCudug==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAdEDmnIfZoj8e9jVMeG3ZP6irVFvb
bJk/RnU2R0uC2T+QzKgMwFyKP4ss6WVTnNk/ABp2WafzTj/qG06okLvZP6Dp
ig7aboa/ZUNlDgPg2T+YCt+/vl6Xv/yiLpiqCdo/PIiA9yu/ob+uOqpFhzja
PyzDVUocy6e/egrYFpls2j88Nm9YMNOtv2QSuAvgpdo/r3DmELTrsb9oUkok
XOTaP0ZiN9Ph67S/iMqOYA0o2z/obypzIeq3v8N6hcDzcNs/k5m/8HLmur8a
Yy5ED7/bP0Xf9kvW4L2/jIOJ618S3D9+IGjCpWzAvxrclrblatw/YN+lTenn
wb/DbFaloMjcP0SstMc1YsO/iDXIt5Ar3T8uh5Qwi9vEv2g27O21k90/GnBF
iOlTxr9kb8JHEAHePwZnx85Qy8e/eOBKxZ9z3j/8axoEwUHJv6yJhWZk694/
9n4+KDq3yr/7anIrXmjfP/KfMzu8K8y/Y4QRFI3q3z/0zvk8R5/Nv/RqMZD4
OOA/+QuRLdsRz7/ELzMoRX/gP4KrfAa8QdC/ohAOUizI4D8IWJntDvrQv44N
wg2uE+E/kYseTOax0b+HJk9bymHhPxxGDCJCadK/j1u1OoGy4T+ph2JvIiDT
v6Ss9KvSBeI/OFAhNIfW07/GGQ2vvlviP8qfSHBwjNS/96L+Q0W04j9Zdtgj
3kHVvzRIyWpmD+M/79PQTtD21b9/CW0jIm3jP4W4MfFGq9a/2ebpbXjN4z8e
JPsKQl/Xv0DgP0ppMOQ/uhYtnMES2L+19W649JXkP1eQx6TFxdi/OCd3uBr+
5D/2kMokTnjZv8l0WErbaOU/lxg2HFsq2r9n3hJuNtblPzwnCovs29q/E2Sm
IyxG5j/hvEZxAo3bv80FE2u8uOY/h9nrzpw93L+Uw1hE5y3nPzF9+aO77dy/
ap13r6yl5z/bp2/wXp3dv0uTb6wMIOg/iFlOtIZM3r88pUA7B53oPziSle8y
+96/OtPqW5wc6T/pUUWiY6nfv0Ydbg7Mnuk/TswuZowr4L9gg8pSliPqPykz
7zYpguC/iAUAKfuq6j+F3WNDiNjgv72jDpH6NOs/VP6v7g==
           "]]}}, 
        {RGBColor[0.8774782727272727, 0.2882958181818182, 0.1596218181818182],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAom2dKuqO5T9/SF0H9qXnP6nTxOBa
IOU/zQcsNdot5z8p4QOzbrHkP/vXP06vt+Y/JJZaoSVC5D8IuZhSdUPmP5ny
yKt/0uM/9ao2QizR5T+I9k7SfGLjP8GtGR3UYOU/8qHsFB3y4j9swUHjbPLk
P9T0oXNggeI/9uWulPaF5D8z727uRhDiP2AbYTFxG+Q/C5FThdCe4T+qYVi5
3LLjP13aTzj9LOE/0riULDlM4z8py2MHzbrgP9ogFouG5+I/b2OP8j9I4D/C
mdzUxITiP19GpfOrqt8/iSPoCfQj4j/SFFs6HsTePy2+OCoUxeE/OzJAudbc
3T+zac41JWjhP5meVHDV9Nw/GCapLCcN4T/sWZhfGgzcP13zyA4atOA/M2QL
h6Ui2z+B0S3c/VzgP269reZ2ONo/g8DXlNIH4D+dZX9+jk3ZP8uAjXEwad8/
wFyATuxh2D9OovWPncbeP9aisFaQddc/kOXnhOwn3j/hNxCXeojWP49KZFAd
jd0/4RufD6ua1T9O0WryL/bcP9ROXcAhrNQ/zHn7aiRj3D+80Eqp3rzTPwlE
Frr609s/mKFnyuHM0j8EMLvfskjbP2rBsyMr3NE/vj3q20zB2j8wMC+1uurQ
Pzdto67IPdo/0tuz/SDxzz9uvuZXJr7ZPyz1ZwFZC84/ZDG012VC2T9wrHp1
HSTMPxnGCy6Hytg/nQHsWW47yj+MfO1ailbYP7D0u65LUcg/vlRZXm/m1z+0
hepztWXGP7FOTzg2etc/mbR3qat4xD9gas/o3hHXP2iBY08uisI/z6fZb2mt
1j8g7K1lPZrAP/wGbs3VTNY/eumt2LFRvT/oh4wBJPDVP4w2vcYBbLk/kio1
DFSX1T94v4mVaoO1P/zuZ+1lQtU/LIQTReyXsT8k1SSlWfHUP1wJtaoNU6s/
C91rMy+k1D8Egr2MdHCjP7AGPZjmWtQ/oOSAYBoQlz8UUpjTfxXUP+DR7qm8
znw/N7995frT0z+wGCkRsWiBvxhO7c1XltM/8N2vuPynmL+5/uaMllzTPyQg
67KeU6S/F9FqIrcm0z+s2QNIDVmsvzXFeI659NI/9d2sFg==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAArNkDSA1ZrL81xXiOufTSP8gN0Q0l
MrK/EtsQ0Z3G0j/s8uKWqjq2v60SM+pjnNI/Ppw3PxdGur8HbN/ZC3bSP7oJ
zwZrVL6/H+cVoJVT0j+2ndT20jLBv/aD1jwBNdI/oxjj+eM8w7+MQiGwThrS
P6X1koxoSMW/4iL2+X0D0j/DNOSuYFXHv/QkVRqP8NE/9tXWYMxjyb/HSD4R
guHRP0PZaqKrc8u/WI6x3lbW0T+oPqBz/oTNv6f1roINz9E/JAZ31MSXz7+1
fjb9pcvRP9uXd2L/1dC/gilITiDM0T+wXYQi1uDRvw7243V80NE/kdRhqmbs
0r9Y5Al0utjRP378D/qw+NO/YfS5SNrk0T921Y4RtQXVvykm9PPb9NE/el/e
8HIT1r+webh1vwjSP4aa/pfqIde/9O4GzoQg0j+ihu8GHDHYv/iF3/wrPNI/
ySOxPQdB2b+7PkICtVvSP/xxQzysUdq/PBkv3h9/0j86caYCC2Pbv3wVppBs
ptI/hCHakCN13L98M6cZm9HSP9qC3ub1h92/OXMyeasA0z88lbMEgpvev7XU
R6+dM9M/qFhZ6sev37/wV+e7cWrTP5Lm58tjYuC/6vwQnyel0z9VeYuGQO3g
v6LDxFi/49M/nGQXJXp44b8arALpOCbUP2uoi6cQBOK/T7bKT5Rs1D+8ROgN
BJDiv0LiHI3RttQ/ljktWFQc47/2L/mg8ATVP/aGWoYBqeO/aJ9fi/FW1T/c
LHCYCzbkv5gwUEzUrNU/RytujnLD5L+H48rjmAbWPzmCVGg2UeW/NrjPUT9k
1j+vMSMmV9/lv6OuXpbHxdY/rTnax9Rt5r/OxnexMSvXPzCaeU2v/Oa/uQAb
o32U1z84UwG35ovnv2JcSGurAdg/x2RxBHsb6L/J2f8Ju3LYP9zOyTVsq+i/
8HhBf6zn2D90kQpLujvpv9Q5Dct/YNk/lKwzRGXM6b93HGPtNN3ZPzogRSFt
Xeq/2iBD5std2j9m7D7i0e7qv/tGrbVE4to/GBEhh5OA67/ajqFbn2rbP0+O
6w+yEuy/efgf2Nv22z8NZJ58LaXsv9eDKCv6htw/OiDBww==
           "]]}}, 
        {RGBColor[0.8774782727272727, 0.2882958181818182, 0.1596218181818182],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAom2dKuqO5T9/SF0H9qXnP5dw3OVM
IOU/YDbyHrYt5z/kVGLHNrHkP0aSWPUet+Y/iRovz6dB5D8xXJCKMELmP4bB
Qv2f0eM/IZSZ3urO5T/aSZ1RH2HjPxY6dPFNXeU/hrM+zCXw4j8PTiDDWe3k
P4n+Jm2zfuI/DdCdUw5/5D/lKlY0yAziPxHA7KJrEuQ/mDjMIWSa4T8ZHg2x
cafjP6MniTWHJ+E/Jur+fSA+4z8F+IxvMbTgPzckwgl41uI/v6nXz2JA4D9P
zFZUeHDiP6R50qw2mN8/auK8XSEM4j91YoMGtq7eP4lm9CVzqeE/9w3CrEPE
3T+vWP2sbUjhPyl8jp/f2Nw/2bjX8hDp4D8MrejeiezbPwmHg/dci+A/nqDQ
akL/2j89wwC7US/gP99WRkMJEdo/7Nqeet6p3z/Oz0lo3iHZP2cL3/xq+N4/
bQvb2cEx2D/sF8L8SEreP7sJ+pezQNc/ewBIenif3T+4yqais07WPxLFcHX5
99w/ZU7h+cFb1T+0ZTzuy1PcP8KUqZ3eZ9Q/YOKq5O+y2z/Onf+NCXPTPxU7
vFhlFds/iGnjykJ90j/Vb3BKLHvaP/T3VFSKhtE/noDHuUTk2T8PSVQq4I7Q
P3FtwaauUNk/sLnCmYgszz9NNl4RasDYP6Jm+HdtOc0/M9ud+XYz2D/0mEnv
bkTLPyNcgF/Vqdc/pFC2/4xNyT8cuQVDhSPXP7CNPqnHVMc/H/ItpIag1j8k
UOLrHlrFPy8H+YLZINY/75ehx5Jdwz9F+GbffaTVPxtlfDwjX8E/ZsV3uXMr
1T9Kb+WUoL2+P5FuKxG7tdQ/Fh8J4zO5uj/E84HmU0PUP6TZY2MAsbY/AlV7
OT7U0z/8nvUVBqWyP0uSFwp6aNM/EN589YkqrT+cq1ZYBwDTP5yTfCN6A6U/
96A4JOaa0j9IvdRruamZP1xyvW0WOdI/oPwYs8Z6gj/KH+U0mNrRP8BWfr83
+Hy/Q6mveWt/0T+wfm9wmsiXv8QOHTyQJ9E/YJ4RFCExpL9QUC18BtPQP+hn
fYuChay/5W3gOc6B0D/+jT3PuHCyv4RnNnXnM9A/GiGlzg==
          "]], 
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA/o09z7hwsr+EZzZ15zPQP0pdhSZ3
ora/WnpeXKTSzz/WIZZL/Ne6v8DdlckcRM8/pttvPkgRv785+RIyOLzOP11F
iX8tp8G/xMzVlfY6zj+IF79GmsfDv2RY3vRXwM0/U2TZdOrpxb8YnCxPXEzN
P7kr2AkeDsi/4JfApAPfzD/HbbsFNTTKv7lLmvVNeMw/diqDaC9czL+nt7lB
OxjMP8dhLzINhs6/qNseicu+yz/cCWAx51jQv7y3ycv+a8s/JqAafblv0b/k
S7oJ1R/LP8BzR3x9h9K/IJjwQk7ayj+qhOYuM6DTv26cbHdqm8o/5dL3lNq5
1L/QWC6nKWPKP3Bee65z1NW/Rs010osxyj9OJ3F7/u/Wv8/5gviQBso/ei3Z
+3oM2L9s3hUaOeLJP/Nwsy/pKdm/HHvuNoTEyT/C8f8WSUjav+DPDE9yrck/
4a++sZpn27+33HBiA53JP1Cr7//dh9y/oqEacTeTyT8P5JIBE6ndv6AeCnsO
kMk/H1qotjnL3r+xUz+AiJPJP4INMB9S7t+/1kC6gKWdyT8Z/5QdLongvw7m
enxlrsk/GhZLBawb4b9aQ4FzyMXJP8RLusairuG/uljNZc7jyT8WoOJhEkLi
vy0mX1N3CMo/EBPE1vrV4r+0qzY8wzPKP7KkXiVcauO/TulTILJlyj/6VLJN
Nv/jv/netv9Dnso/7SO/T4mU5L+7jF/aeN3KP4gRhStVKuW/jvJNsFAjyz/M
HQThmcDlv3YQgoHLb8s/t0g8cFdX5r9x5vtN6cLLP0ySLdmN7ua/gHS7Faoc
zD+H+tcbPYbnv6G6wNgNfcw/bIE7OGUe6L/YuAuXFOTMP/omWC4Gt+i/IG+c
UL5RzT8u6y3+H1Dpv33dcgULxs0/DM68p7Lp6b/tA4+1+kDOP5LPBCu+g+q/
cOLwYI3Czj+/7wWIQh7rvwZ5mAfDSs8/lS7Avj+567+xx4Wpm9nPPxSMM8+1
VOy/N2dco4s30D86CGC5pPDsv5/GmO+ahdA/CaNFfQyN7b8SAni5+9bQP4Fc
5BrtKe6/jhn6AK4r0T+hNDySRsfuvxQNH8axg9E/O2G5lg==
           "]]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAfN1jQ4jY4D+3ow6R+jTrPyAz7zYp
guA/ggUAKfuq6j9GzC5mjCvgP1qDylKWI+o/2FFFomOp3z9AHW4OzJ7pPyeS
le8y+94/NdPqW5wc6T94WU60hkzePzalQDsHneg/y6dv8F6d3T9Gk2+sDCDo
PyB9+aO77dw/Y513r6yl5z942evOnD3cP4/DWETnLec/0bxGcQKN2z/IBRNr
vLjmPywnCovs29o/D2SmIyxG5j+JGDYcWyraP2LeEm421uU/6JDKJE542T/E
dFhK22jlP0mQx6TFxdg/NCd3uBr+5D+sFi2cwRLYP7H1brj0leQ/EST7CkJf
1z884D9KaTDkP3i4MfFGq9Y/1ebpbXjN4z/i09BO0PbVP3wJbSMibeM/T3bY
I95B1T8xSMlqZg/jP72fSHBwjNQ/86L+Q0W04j8sUCE0h9bTP8MZDa++W+I/
nodibyIg0z+hrPSr0gXiPxBGDCJCadI/jFu1OoGy4T+Fix5M5rHRP4QmT1vK
YeE//VeZ7Q760D+LDcINrhPhP3erfAa8QdA/oBAOUizI4D/jC5Et2xHPP8Iv
MyhFf+A/3s75PEefzT/xajGQ+DjgP96fMzu8K8w/X4QRFI3q3z/jfj4oOrfK
P/ZqciteaN8/6GsaBMFByT+niYVmZOveP/Rmx85Qy8c/deBKxZ9z3j8EcEWI
6VPGP19vwkcQAd4/F4eUMIvbxD9jNuzttZPdPy6stMc1YsM/gjXIt5Ar3T9O
36VN6efBP8FsVqWgyNw/bSBowqVswD8Y3Ja25WrcPyHf9kvW4L0/i4OJ618S
3D9xmb/wcua6PxhjLkQPv9s/yG8qcyHqtz/CeoXA83DbPyhiN9Ph67Q/h8qO
YA0o2z+VcOYQtOuxP2hSSiRc5No/DDZvWDDTrT9kErgL4KXaP/rCVUocy6c/
fArYFpls2j/8h4D3K7+hP646qkWHONo/GArfv75elz/8oi6YqgnaP7Doig7a
boY/ZkNlDgPg2T8AKHZZp/NOv+wbTqiQu9k/gM2oDMBcir+MLOllU5zZPyCs
VFvbbJm/SHU2R0uC2T+sQOach9mivyD2NUx4bdk/oqyZnA==
          "]], 
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAArEDmnIfZor8g9jVMeG3ZPzjz3dB9
AKm/E6/ndNpd2T+6bZFJUCuvvyKgS8FxU9k/E1iAg/+ssr9MyWExPk7ZP0Hd
lQRFxrW/kSoqxT9O2T9pRgmoeOG4v/PDpHx2U9k/hpPabZr+u79wldFX4l3Z
P5XECVaqHb+/CJ+wVoNt2T/SbEswVB/Bv7vgQXlZgtk/VOnARsqwwr+KWoW/
ZJzZP9RXZW43Q8S/dAx7KaW72T9OuDinm9bFv3r2Irca4Nk/xQo78fZqx7+c
GH1oxQnaPzpPbExJAMm/2HKJPaU42j+nhcy4kpbKvzEFSDa6bNo/Eq5bNtMt
zL+kz7hSBKbaP3nIGcUKxs2/NNLbkoPk2j/c1AZlOV/Pv98MsfY3KNs/nWkR
i6980L+lfzh+IXHbP8jhNuw9StG/hSpyKUC/2z/z0vPVRxjSv4MNXviTEtw/
HD1ISM3m0r+cKPzqHGvcP0MgNEPOtdO/0HtMAdvI3D9ofLfGSoXUvx4HTzvO
K90/i1HS0kJV1b+KygOZ9pPdP6yfhGe2Jda/EcZqGlQB3j/LZs6EpfbWv7P5
g7/mc94/6KavKhDI179wZU+IruvePwRgKFn2mdi/SgnNdKto3z8dkjgQWGzZ
vz7l/ITd6t8/ND3gTzU/2r+nfG9cIjngP0lhHxiOEtu/vaI5iHB/4D9Y/vVo
Yubbv9/k3EVZyOA/ahRkQrK63L8RQ1mV3BPhP3ejaaR9j92/T72udvph4T+F
qwaPxGTev5xT3emysuE/jyw7Aoc637/2BeXuBQbiP0yTA39iCOC/XtTFhfNb
4j/PTDVBv3Pgv9S+f657tOI/0sKyx1nf4L9YxRJpng/jP1P1exIyS+G/6ed+
tVtt4z9T5JAhSLfhv4kmxJOzzeM/0o/x9Jsj4r81geIDpjDkP9H3nYwtkOK/
8PfZBTOW5D9NHJbo/Pziv7iKqpla/uQ/Sf3ZCApq47+OOVS/HGnlP8Waae1U
1+O/cQTXdnnW5T++9ESW3UTkv2PrMsBwRuY/OAtsA6Sy5L9h7mebArnmPzDe
3jSoIOW/bg12CC8u5z+nbZ0q6o7lv4lIXQf2pec/J7e5IQ==
           "]]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAfN1jQ4jY4D+3ow6R+jTrPypPn63l
geA/UyAk1Eyq6j9qPO9AfirgP53uWv/cIOo/e0qn+qOk3z+YDrMSq5jpP0oT
mcXB8t4/RIAsDrcR6T8+07PiVT/eP51Dx/EAjOg/WYr3UWCK3T+nWIO9iAfo
P5k4ZBPh09w/X79gcU6E5z8C3vkm2BvcP8l3Xw1SAuc/kHq4jEVi2z/hgX+R
k4HmP0QOoEQpp9o/qt3A/RIC5j8embBOg+rZPyCLI1LQg+U/HhvqqlMs2T9H
iqeOywblP0WUTFmabNg/HttMswSL5D+SBNhZV6vXP6N9E8B7EOQ/BWyMrIro
1j/Zcfu0MJfjP5/KaVE0JNY/vrcEkiMf4z9gIHBIVF7VP1NPL1dUqOI/SG2f
keqW1D+YOHsEwzLiP1ax9yz3zdM/jHPomW++4T+I7HgaegPTPy8AdxdaS+E/
4h4jWnM30j+D3iZ9gtngP2FI9uviadE/hA74yuho4D8HafLPyJrQP2sg1QEa
898/qQEvDEqUzz8vx/w93hbfP5Afyxzv780/URFnSh493j/AK7nRgEjMP9L+
EyfaZd0/Pyb5Kv+dyj+yjwPUEZHcPwwPiyhq8Mg/88M1UcW+2z8m5m7KwT/H
P5Kbqp707to/iaukEAaMxT+OFmK8nyHaPzpfLPs21cM/6zRcqsZW2T86AQaK
VBvCP6j2mGhpjtg/hZExvV5ewD/CWxj3h8jXPzcgXimrPL0/O2TaVSIF1z8L
+vwgcra5PxgQ34Q4RNY/arA/YRIqtj9QXyaEyoXVP2ZDJuqLl7I/6FGwU9jJ
1D/4ZWF3vf2tP97nfPNhENQ/UP69qxXApj80IYxjZ1nTP8CfxOJA7J4/6P3d
o+ik0j9gtZyQuz+QP/59crTl8tE/gNRDELapVz9yoUmVXkPRP9CQCVg/xoq/
Q2hjRlOW0D+4W36WdVmcv+mkf4+H188/UD40LzO0pb8KwL0yYIfOP5SV4QH5
R62/6CGBdjA8zT/OmaMhBnSyv4fKyVr49cs/PIyyeTZKtr/iuZfft7TKPxCi
HYmNJrq/++/qBG94yT9M2+RPCwm+v9Nsw8odQcg/YTqc3w==
          "]], 
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAATNvkTwsJvr/TbMPKHUHIP/YbBOfX
+MC/aDAhMcQOxz/828OBPfDCv746BDhi4cU/sq0xeLbqxL/Qi2zf97jEPx6R
TcpC6Ma/oCNaJ4WVwz8+hhd44ujIvy8CzQ8Kd8I/D42PgZXsyr99J8WYhl3B
P46lteZb88y/i5NCwvpIwD/Iz4mnNf3Ov6mMihjNcr4/2QUGYhGF0L+4f5rt
k128P6gsHp4RjdG/RgC1A0pSuj9SXA2Im5bSv04O2lrvULg/1pTTH6+h07/T
qQnzg1m2PzLWcGVMrtS/1NJDzAdstD9oIOVYc7zVv1SJiOZ6iLI/d3Mw+iPM
1r9OzddB3a6wP2DPUkle3de/ij1jvF2+rT8lNExGIvDYv277K3ffMqo/wqEc
8W8E2r9N1Am0P7umPzQYxElHGtu/M8j8cn5Xoz+El0JQqDHcvwTXBLSbB6A/
rh+YBJNK3b+cAUTuLpeZP7OwxGYHZd6/IouoeONGkz+OSsh2BYHfvziVbg6q
PIo/o3ZRmkZP4L8gAMFnDnZ8P2tMKlDP3uC/ILY2DfNGVD+gpu7cHG/hv0DN
fNCgs3G/QoWeQC8A4r8gOM8pBe2Dv1LoOXsGkuK/vJ0L47+wjr/Nz8CMoiTj
v7zL+UmAkpS/tjszdQO447+okkOe46SZvwsskTQpTOS/oSNj7omPnr/KoNrK
E+Hkv0s/LJ05qaG/+pkPOMN25b/W0RHBz/ajv5UXMHw3Dea/aEniYocwpr+e
GTyXcKTmvwKmnYJgVqi/E6AziW4857+i50MgW2iqv/eqFlIx1ee/SQ7VO3dm
rL9FOuXxuG7ov/YZUdW0UK6/Ak6faAUJ6b9WBVz2iROwvyrmRLYWpOm/NPAE
Qcr0sL/AAtba7D/qv5ZNo0obzLG/wqNS1ofc6r96HTcTfZmyvzLJuqjneeu/
5F/Amu9cs78Mcw5SDBjsv84UP+FyFrS/VaFN0vW27L8+PLPmBsa0vwtUeCmk
Vu2/MdYcq6trtb8ti45XF/ftv6jiey5hB7a/vEaQXE+Y7r+iYdBwJ5m2v7mG
fThMOu+/IVMacv4gt78iS1brDd3vvyK3WTLmnre/w0iw3Q==
           "]]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAfN1jQ4jY4D+3ow6R+jTrP94G+8T6
geA/2h0oqL2q6j86G16e0irgP7vkak+gIuo/IzUanx+m3z9b+NaGopzpP8oJ
ELFk9d4/ulhsTsQY6T9mtJ1ydEPeP9YFK6YFl+g/+DTD406Q3T+x/xKOZhfo
P4GLgAT029w/SkYkBueZ5z8BuNXUYybcP6LZXg6HHuc/d7rCVJ5v2z+4ucKm
RqXmP+OSR4Sjt9o/jeZPzyUu5j9FQWRjc/7ZPx9gBogkueU/nMUY8g1E2T9w
JubQQkblP+sfZTBziNg/gDnvqYDV5D8wUEkeo8vXP0yZIRPeZuQ/a1bFu50N
1z/YRX0MW/rjP50y2QhjTtY/Iz8ClveP4z/G5IQF843VPyyFsK+zJ+M/5WzI
sU3M1D/zF4hZj8HiP/rKow1zCdQ/efeIk4pd4j8F/xYZY0XTP70js12l++E/
Bwki1B2A0j+/nAa435vhP/3oxD6judE/f2KDojk+4T/rnv9Y8/HQP/10KR2z
4uA/0CrSIg4p0D861PgnTIngP1UZeTjnvc4/NoDxwgQy4D/0iH2KRyfNP9/x
Jty5ud8/gqSxOz2Oyz/OfL1SqRPfP/5rFUzI8sk/PKGm6ddx3j9n36i76FTI
PyZf4qBF1N0/uv5rip60xj+LtnB48jrdP/rJXrjpEcU/bqdRcN6l3D8oQYFF
ymzDP84xhYgJFdw/QmTTMUDFwT+qVQvBc4jbP0gzVX1LG8A/AhPkGR0A2z+A
XA1Q2N28P9ppD5MFfNo/PqrPY0SAuT8sWo0sLfzZP9dP8TXbHbY//ONd5pOA
2T9KTXLGnLayP0YHgcA5Cdk/KEWlKhKVrj8QxPa6HpbYP3SfJEVAs6c/VBq/
1UIn2D98qWLcw8egPxcK2hCmvNc/WMa+4Dmlkz9Wk0dsSFbXP2Bk1ghcnnY/
ELYH6Cn01j+AaazFwdKAv0hyGoRKltY/OKNkzq2Nlr/9x39AqjzWPyTZOuCn
YqK/Lrc3HUnn1T/0sIRcI4ipv9w/QhonltU/iuwHrqRbsL8GYp83REnVP8Qo
bu8M+LO/rR1PdaAA1T8iDXVySpm3v9FyUdM7vNQ/Y9WeBQ==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAIg11ckqZt7/RclHTO7zUP6aZHDdd
P7u/cmGmURZ81D9VzmQ9Req+v5DpTfAvQNQ/lNWmQgFNwb8qC0iviAjUPxCY
a4dKJ8O/QMaUjiDV0z+irgBt/gPFv9QaNI73pdM/Qxlm8xzjxr/kCCauDXvT
P/bXmxqmxMi/cZBq7mJU0z/C6qHimajKv3qxAU/3MdM/nlF4S/iOzL8AbOvP
yhPTP48MH1XBd86/A8Ancd350j/KDct/ejHQv4KttjIv5NI/Vr9upUko0b9+
NJgUwNLSP+yaehtOINK/+FTMFpDF0j+KoO7hhxnTv+0OUzmfvNI/NNDK+PYT
1L9gYix87bfSP+YpD2CbD9W/Tk9Y33q30j+jrbsXdQzWv7rV1mJHu9I/aVvQ
H4QK17+i9acGU8PSPzYzTXjICdi/B6/Lyp3P0j8PNTIhQgrZv+kBQq8n4NI/
8mB/GvEL2r9I7gq08PTSP9+2NGTVDtu/InQm2fgN0z/VNlL+7hLcv3qTlB5A
K9M/1eDX6D0Y3b9PTFWExkzTP960xSPCHt6/oJ5oCoxy0z/yshuveybfv22K
zrCQnNM/h+1sRbUX4L+4D4d31MrTP5wWgFvHnOC/gC6SXlf90z+0VMcZdCLh
v8Tm72UZNNQ/0adCgLuo4b+FOKCNGm/UP/MP8o6dL+K/wiOj1Vqu1D8XjdVF
Grfiv3qo+D3a8dQ/Qx/tpDE/47+xxqDGmDnVP3PGOKzjx+O/ZH6bb5aF1T+p
grhbMFHkv5TP6DjT1dU/41Nssxfb5L9BuogiTyrWPyM6VLOZZeW/az57LAqD
1j9mNXBbtvDlvxFcwFYE4NY/sEXAq2185r80E1ihPUHXP/1qRKS/COe/1GNC
DLam1z9PpfxErJXnv/BNf5dtENg/pvTojTMj6L+I0Q5DZH7YPwNZCX9Vsei/
n+7wDprw2D9i0l0YEkDpvy+lJfsOZ9k/x2DmWWnP6b8+9awHw+HZPzIEo0Nb
X+q/yt6GNLZg2j+hvJPV5+/qv9Jhs4Ho49o/Foq4Dw+B679WfjLvWWvbP49s
EfLQEuy/WDQEfQr32z8NZJ58LaXsv9eDKCv6htw/9oe1dQ==
           "]]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAfN1jQ4jY4D+3ow6R+jTrP8yjEsrs
geA/bUzukZmq6j/1jryymirgPwafg/YPIuo/7T3D+iOl3z+Em86+XZvpP6On
A1Sl894/5kHP6oIW6T8JWzpxuUDePyuShXp/k+g/IVhnUmCM3T9UjPFtUxLo
P+meiveZ1tw/YTATxf6S5z9lL6RgZh/cP1N+6n+BFec/kgm0jcVm2z8ndnee
25nmP28tun63rNo/4Re6IA0g5j/+mrYzPPHZP3xjsgYWqOU/PlKprFM02T/9
WGBQ9jHlPzBTkun9ddg/YfjD/a295D/TnXHqOrbXP6hB3Q49S+Q/JzJHrwr1
1j/UNKyDo9rjPy0QEzhtMtY/5NEwXOFr4z/mN9WEYm7VP9gYa5j2/uI/UKmN
leqo1D+wCVs445PiP2tkPGoF4tM/bKQAPKcq4j82aeECsxnTPwvpW6NCw+E/
tLd8X/NP0j+O12xutV3hP+JPDoDGhNE/9G8znf/54D/CMZZkLLjQPz6yry8h
mOA/qbooGkrUzz9tnuElGjjgPzClEfNgNc4//2iS/9Sz3z8XI+dTnZPMP+vo
zHok+94/YjSpPP/uyj+fvHK9IkbePxLZV62GR8k/HOSDx8+U3T8mEfOlM53H
P2BfAJkr59w/mNx6JgbwxT9qLugxNj3cP3A77y7+P8Q/PVE7ku+W2z+sLVC/
G43CP9jH+blX9No/SLOd117XwD86kiOpblXaP4+Yr++OPb4/Y7C4XzS62T9g
8fw/q8a6P1giud2oItk/6nAjoBJKtz8R6CQjzI7YPzwXIxDFx7M/kwH8L57+
1z9U5PuPwj+wP9tuPgQfctc/YLBbPxZkqT/sL+yfTunWP6TlcX49PaI/xEQF
Ay1k1j8I0XS69RWWP2atiS264tU/IMep3XJqfj/OaXkf9mTVP6BJ7TBA3nu/
/XnU2ODq1D+Ae3yQkKCVv/Tdmll6dNQ/xISsajIwor+zlcyhwgHUPzh+aG2G
m6m/OaFpsbmS0z8QFTkoIomwv4gAcohfJ9M/PsTkCTZKtL+es+UmtL/SP6ZM
t9v+ELi/e7rEjLdb0j9KrrCdfN27vyAVD7pp+9E/jiKozg==
          "]], 
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAASq6wnXzdu78gFQ+6afvRPyjp0E+v
r7+/jcPErsqe0T+g/gt5y8PBv8PF5WraRdE/SPVCwpmyw7+/G3LumPDQP5BY
jYNCpMW/g8VpOQaf0D90KOu8xZjHvw/DzEsiUdA/82RcbiOQyb9jFJsl7QbQ
PwoO4Zdbisu//nKpjc2Azz/GI3k5bofNv8Rk814e+84/HqYkU1uHz78a/hO/
zHzOP4rKcXIRxdC//z4LrtgFzj9S+Fp34sfRv3Qn2StCls0/atxNuCDM0r93
t304CS7NP9F2SjXM0dO/Cu/40y3NzD+Ex1Du5NjUvy3OSv6vc8w/iM5g42rh
1b/fVHO3jyHMP9qLehRe69a/IINy/8zWyz97/52BvvbXv/FYSNZnk8s/ainL
KowD2b9S1vQ7YFfLP6MJAhDHEdq/Qvt3MLYiyz8voEIxbyHbv8LH0bNp9co/
Cu2MjoQy3L/QOwLGes/KPzPw4CcHRd2/blcJZ+mwyj+qqT799ljev5sa55a1
mco/cBmmDlRu379YhZtV34nKP8OfCy6PQuC/pJcmo2aByj/0Dcnyqs7gv4BR
iH9LgMo/TVeLVX1b4b/qssDqjYbKP857UlYG6eG/5rvP5C2Uyj91ex71RXfi
v3BstW0rqco/RVbvMTwG47+JxHGFhsXKPzoMxQzpleO/MsQELD/pyj9VnZ+F
TCbkv2lrbmFVFMs/mgl/nGa35L8xuq4lyUbLPwVRY1E3SeW/iLDFeJqAyz+Z
c0ykvtvlv25Os1rJwcs/U3E6lfxu5r/kk3fLVQrMPzZKLSTxAue/6oASyz9a
zD8+/iRRnJfnv34VhFmHscw/b40hHP4s6L+jUcx2LBDNP8f3IoUWw+i/VjXr
Ii92zT9FPSmM5Vnpv5nA4F2P480/6100MWvx6b9r86wnTVjOP7lZRHSnieq/
zc1PgGjUzj+tMFlVmiLrv71PyWfhV88/yOJy1EO8678+eRnet+LPPwxwkfGj
Vuy/JyWg8XU60D912LSsuvHsv3bhnrs+h9A/BxzdBYiN7b+N8QhNttfQP8E6
Cv0LKu6/bVXepdwr0T+hNDySRsfuvxQNH8axg9E/F7e9Eg==
           "]]}}, 
        {RGBColor[
         0.2527632121212121, 0.41065066666666666`, 0.8107441515151516], 
         Thickness[Large], LineBox[CompressedData["
1:eJwdkQ0s1HEYx48o3K6korHKXellxUlLb/TVhNMolDhpS4YZ5bxe6+VWO2oj
ispLkZGO9KKVGYm8VY7oHO56car//c+dc4piSS+rfs/227Pffr/neb7fz8M+
mhAUZcxgMDb9O/+z6nTO4WvLlcgx38KQKcbBFrzZ4lqlQPWNS1RpxDgiIzlW
yo0KCONMB3s+G1B5MN4gbBzEzIlCJV9kgN637sVSr0Gs6+DpPS0NcHRnlDX0
DoDlb826WDEGgfOeU2GhAyhfZOThsmMMj1deDf75qR+jNuZi1wE9vlsPc4vj
+kHznRSFCXpst1hr4T4tR85bwTY+Sw/R70RaJZLDkC+7J7w/itaJxmaRmRyz
uf7OU/tGYUKbFq3I68OTLm1775QOPsp9yS12fXDcVRozr1iHzK4i/4jbMgRO
J9vd9NKhp0m9xpgrw2pt1Ie8SS3sjx4y8U58jQfWqY81pVpIeF/qL6T3Qicu
K8gP0ILLFR+TFvRA4TSWdXuOFnVLbDjMu6+QYhN02aphBG6/qhV+zd3ocFdU
qAQjaKN2ZuX0daGjTCidu34EPKkcMlqKNE/XP9laDXpqoqcWznTiHcfKM1mi
QXD+bNV+Zie+gllYF6PBe7KPl2i8zv4dsl6DCML/BTZvCk4KmaQxQng/R4S5
5HttA41jhG8HPJYtzhak05gmPNshO17qkhlI4yTh14aFf3x0RmwaDMKrFabd
rAfKr2qcJ3xacHdwQsx8qYYt4fEMxssnY0tK1HAg/pvArJh/JDtNja3EbyM6
Y3yj3weqsZv4a8Dm2LLTF7hqBBA/9ThQZX0rd4Ea4UR/HRwc7rz9MUkhluit
ReWHUPsWBYUUou8RhpQOQrqJQgbR8xDtLMvh6EoKq8j8+wg/ZxPsc4WCG5l3
BxIXt6GMcxQOkP4SlLNFyZwkCvGkXzkC9qpsl0VRMCP1Jaip58tTwyh4kP/5
aDnyrWhDEIWPTv/fs5HuXZ24y4/CWXI/gx+xIn4tjwKDhOSpfXdCYIYPhb83
s5dT
          "]], 
         {RGBColor[
          0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
          ArrowBox[CompressedData["
1:eJwtkQdM00EUxosDhYoDlBoNKBhXMFRLpC58QsMyIoIyippoFZCAssQagSYI
SKIWZVhBQYJiLS4MIoEwHioyimAp0GIUjP/+SwsULQoRByieXnK5vLy7733f
7+wE0f6hMxgMhtP0/nv+W9LalW3RfumeFBjZqSdbryfjRISIX+FFQR6pxZjm
cT/Wdc90fczeUr1Jgs+PfM3f4E/BCdIvxLIqvjIhhIKCyVi6T3Qb9+3tW2YT
SsF5cl+Kt+1E8fZxFAhalaCgS1HK2fE+PYUCL/L+ER5KYQV45kzry/N9jt59
go0WC/vD7lFwmeiVY796tZCuo0C0cXdiSHAFln4IXtmgouA00a/ENatL334f
pSBc8kO2n1mFgTLrO1kLNBBC5lUjN6I4KYOtgb2/7qv21NegPNw77J2fBtzI
/DqcXzL/iPiMBriCg7M8YhFNbUcjCgs1ICF+GvBxjzGV2ayBefTs/BXZz3Fu
m8Vj9RcNXCD+XuDiKU+9iR0NJqx+dkHkS+w6VcS56EdDIvHbiG42i8UxaTSM
eVc2LXV/hcfNpN8qqmk4Rfw34RangLigURr0SZmHr9k2Y/0Nu8kgBy0ISJ4W
HAdmXmW4Ft6VhY0tmmjBfntLXrxUC4EkXyue4zlPiXVaUFA7L2V2yrGlWNhq
6jAAu0neNmxyUZX0xQxA4xKWPfPBaxSy/K9aVg/ANpK/HXsdhy/dnamDZ16f
qzLSOnAktfi6ZJ8O2ITHGyy3TniqLdJBd51m7Qy2Ah10oR+yR3WQRfgo8MB4
/PJb7nrwVfvGNyzvRI5rUficAj0wCa9ORLnuZceYHlqMNfWiuUr8neWzccx3
8D8/JRoliofCR4PAM19n7jKuxJy3MVv5FkPAIDy7cJDvqMqLHoLaVbkBPz92
oZFllurcPQRnCd9ulFmZ7OJsH4bNLozi6o5utPKxtrhcMgxfCe8eZDd6DfEW
GqAsMMogrOnBybN5ar7IAFGEvwqTI2f3tH8ywPqYXq6zTIVPbl6hio6OwAD5
DzXmmnEZCtUI/AERdLK6
           "]]}}, 
        {RGBColor[0.2634502424242424, 0.4714613333333333, 0.8041720303030303],
          Thickness[Large], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAp8bWrBqFxz/yrn8AhHTvP5mXMthZ
Csc/xiySvqLU7j+1yqp174rGP+cdXrsYN+4/+18/hdsGxj9WguP25ZvtP2lX
8AYefsU/EFoicQoD7T8Bsb36tvDEPxilGiqGbOw/wmynYKZexD9rY8whWdjr
P6yKrTjsx8M/DJU3WING6z/ACtCCiCzDP/k5XM0Et+o//ewOP3uMwj8zUjqB
3SnqP2Mxam3E58E/ut3Rcw2f6T/z1+ENZD7BP43cIqWUFuk/q+B1IFqQwD+s
Ti0Vc5DoPxuXTEpNu78/GTTxw6gM6D8vMeY3k0y+P9GMbrE1i+c/mo+4CYbU
vD/XWKXdGQznP1Syw78lU7s/KZiVSFWP5j9lmQdacsi5P8lKP/LnFOY/yESE
2Gs0uD+1cKLa0ZzlP3u0OTsSl7Y/7Qm/ARMn5T+A6CeCZfC0P3MWlWers+Q/
2uBOrWVAsz9DliQMm0LkP4SdrrwSh7E/YYlt7+HT4z8CPY5g2YivP8zvbxGA
Z+M/pccwEOfwqz+DyStydf3iP+vaRIhORqg/hxahEcKV4j/VdsrID4mkP9fW
z+9lMOI/ZJvB0Sq5oD90CrgMYc3hPzSRVEY/rZk/XrFZaLNs4T/w/Ah63MKR
P5XLtAJdDuE/2PNAfVpmgz8YWcnbXbLgPwCDsEEZ41c/6FmX87VY4D/gYB0W
WnB7vwTOHkplAeA/uE6NHFa3jr/bar++11jfPzTlIgaMAJi/RiC0ZpOz3j/Y
CI62XGWgv028G4z9Et4/fBaZoRndpL/rPvYuFnfdP3ibMsR8Z6m/I6hDT93f
3D/Ol1oehgSuv/T3A+1STdw/woUI2Bpasb9cLjcId7/bP0j7qrxFu7O/YEvd
oEk22z93rBS9wyW2v/1O9rbKsdo/WJlF2ZSZuL80OYJK+jHaP+fBPRG5Fru/
AgqBW9i22T8kJv1kMJ29v2rB8ulkQNk/CONBan0WwL9sX9f1n87YP9PQ6C8M
Y8G/B+Quf4lh2D90XHODRLTCvzxP+YUh+dc/7YXhZCYKxL8IoTYKaJXXPz1N
M9SxZMW/btnmC1021z9jsmjR5sPGv2/4CYsA3NY/Rv6hDA==
          "]], 
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAY7Jo0ebDxr9v+AmLANzWP2C1gVzF
J8i/CP6fh1KG1j81Vn51TZDJvzrqqAFTNdY/4JReHH/9yr8GvST5AenVP2Bx
IlFab8y/a3YTbl+h1T+668kT3+XNv2oWdWBrXtU/5gNVZA1hz78CnUnQJSDV
P/XcYaFycNC/NAqRvY7m1D/jBotXszLRv/5dSyimsdQ/vP+l1Ej30b9hmHgQ
bIHUP4HHshgzvtK/XrkYduBV1D8xXrEjcofTv/TAK1kDL9Q/zcOh9QVT1L8j
r7G51AzUP1T4g47uINW/7IOql1Tv0z/G+1fuK/HVv04/FvOC1tM/JM4dFb7D
1r9J4fTLX8LTP2xv1QKlmNe/3WlGIuuy0z+h33634G/YvwvZCvYkqNM/wB4a
M3FJ2b/SLkJHDaLTP8ksp3VWJdq/MmvsFaSg0z+/CSZ/kAPbvyyOCWLpo9M/
obWWTx/k27+/l5kr3avTP24w+eYCx9y/64eccn+40z8mek1FO6zdv7BeEjfQ
ydM/ypKTasiT3r8PHPt4z9/TP1l6y1aqfd+/B8BWOH360z9qmPqE8DTgv5hK
JXXZGdQ/HFsIQjas4L/Du2Yv5D3UP0YFj2KmJOG/iBMbZ51m1D/llo7mQJ7h
v+RRQhwFlNQ/+A8HzgUZ4r/bdtxOG8bUP4Jw+Bj1lOK/a4Lp/t/81D9/uGLH
DhLjv5J0aSxTONU/9OdF2VKQ479VTVzXdHjVP97+oU7BD+S/sAzC/0S91T8/
/XYnWpDkv6WymqXDBtY/FePEYx0S5b8zP+bI8FTWP2GwiwMLleW/W7Kkacyn
1j8iZcsGIxnmvxwM1odW/9Y/WgGEbWWe5r91THojj1vXPweFtTfSJOe/anOR
PHa81z8p8F9laaznv/aAG9MLItg/wUKD9io16L8bdRjnT4zYP9B8H+sWv+i/
20+IeEL72D9RnjRDLUrpvzIRa4fjbtk/SqfC/m3W6b8jucATM+fZP7mXyR3Z
Y+q/r0eJHTFk2j+db0mgbvLqv9O8xKTd5do/9y5Chi6C67+QGHOpOGzbP8fV
s88YE+y/51qUK0L32z8NZJ58LaXsv9eDKCv6htw/8li2TA==
           "]]}}, 
        {RGBColor[
         0.24468436363636362`, 0.34889145454545456`, 0.8118174545454546], 
         Thickness[Large], LineBox[CompressedData["
1:eJwdkQtIk1EUx6eZGmQmBk7WyjdplFZmauJBK4NQR74y1zRfmKCYKavU1sNK
yFVWpGgPXcuGZbJ8zCbLk86pqassp3M+2uZj89E0MyqbUd934HK43HvO+f9/
xzEpKyLVlEKh7Pl/iHyBpax9lfhOQiFjEVIuZH5p8LHHvWlrbbxZC+Cky/h/
90MapySWIzGAdWoc8wYrFBsP8gbH6QawbSfej+Pfln3F0Ze/wr5l7nVJfTKu
qCPZ2ul56I4g/megQPSj7Fr4PCQGWjdrwnLQPIC+GPh6DjaKifrzSM3u4Wxw
mYOcctmz/TMXURW9emD5zix0LhD9CpEx2wSLJrNQI/NeJ1IUYe7O5WzT3BlI
Cyf6czHU6bXKQ68HiozTurm6BBUyk7z0eD34BRDz7qG1fT+jdVAH49x4u03u
pWikuZ1wP6qDRRExvxwr3lMqn8unIbvFz7qN/RDnvBKpwaHTwCwj9FSiIfhw
90LfFKjcLD/bdPHwiVlDXQNjCloNhD4+WrCf9t4cmIQo529fHzVXI72MtpXD
nITqDkKvAKfSqDVXJyfgxadjSjOr55igr0jnZU3AqTBCfy0WU/knB4xaUHkH
3A3pqsP0X1636FwtXOkg/AjxV9HBpQK6FpZcPtzc9f0V+naNcZeEGnizn/DX
gNtFRhYnRANaS/Df0dSIH6N4qQ7jakgh/YrQld/LV55VQ1BnZnhpTTPu4OVT
BbZqOEf6F6P8UVKRXfIXWM9i9mR8bEF+7PARK/44/BETPCQ4eoaZ76kbgyC5
RZ3QvRUL5vVUjucY6EoJPogFssvOv/NHIadYbBSq3qJ61fVBVd8I8EhebSi4
r7iY6zgCxofhMW/F7djPLenPzVPBdZKfFBMmYkp4Q8PgT5Mmm9d3YET5NsmK
7zBsIXnKUFC3NvrSYyV4mtu5Fko7McHZELfbUglZJN8uzPupkW9kD8EY60iF
j6Ebf3toXtL0g8AmeffgyJu5lYj4QQh0Ykkddveig9CkSaRUgDfJvw/fmTiP
hhxTQEwkoyrothwV9YzTa1QDICD38R4PSYuy508OwD/vELPG
          "]], 
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApzQ8kkbHzr9Fw4dx7GDUP5N4kJjM
AtC/GDPL3wHs0z9pxH6+HKXQv08CGrtDe9M/1v3oupNK0b/oMHQDsg7TP9ok
z40x89G/5b7ZuEym0j91OTE39p7Sv0asStsTQtI/pTsPt+FN078K+cZqB+LR
P2sraQ30/9O/M6VOZyeG0T/KCD86LbXUv76w4dBzLtE/wNOQPY1t1b+sG4Cn
7NrQP02MXhcUKda//uUp65GL0D9wMqjHwefWv7IP35tjQNA/K8ZtTpap17+V
MT9zw/LPP3xHr6uRbti/jALXiBhtzz9jtmzfszbZv0qShXjG784/4hKm6fwB
2r/Q4EpCzXrOP/ZcW8ps0Nq/G+4m5iwOzj+jlIyBA6Lbvy66GWTlqc0/5rk5
D8F23L8HRSO89k3NP7zMYnOlTt2/qI5D7mD6zD8tzQeusCnevw+Xevojr8w/
Nbsov+IH3788XsjgP2zMP9OWxaY76d+/MOQsobQxzD8DMG+y3Wbgv+woqDuC
/8s/aYu5/LDa4L9uLDqwqNXLP5vdQbIXUOG/tu7i/ie0yz+XJgjTEcfhv8Zv
oicAm8s/X2YMX58/4r+cr3gqMYrLP/OcTlbAueK/Oq5lB7uByz9Sys64dDXj
v55rab6dgcs/fe6Mhryy47/I54NP2YnLP3IJib+XMeS/uiK1um2ayz8xG8Nj
BrLkv3Ac/f9as8s/viM7cwg05b/w1FsfodTLPxUj8e2dt+W/NUzRGED+yz85
GeXTxjzmv0KCXew3MMw/JwYXJYPD5r8VdwCaiGrMP+LphuHSS+e/ryq6ITKt
zD9nxDQJttXnvw+dioM0+Mw/uJUgnCxh6L84znG/j0vNP9VdSpo27ui/Jr5v
1UOnzT+8HLID1Hzpv9tshMVQC84/b9JX2AQN6r9W2q+PtnfOP+5+OxjJnuq/
mQbyM3Xszj83Il3DIDLrv6LxSrKMac8/TLy82QvH679ym7oK/e7PPy1NWluK
Xey/BIKgHmM+0D/Y1DVInPXsv7MV7yR0idA/T1NPoEGP7b/FCEmYsdjQP5PI
pmN6Ku6/O1uueBss0T+hNDySRsfuvxQNH8axg9E/qE67Wg==
           "]]}}}, 
       {GrayLevel[1], EdgeForm[{Hue[0.0424, 1, 0.8], Thickness[0.005]}], 
        TagBox[
         {RGBColor[
          0.9013532424242424, 0.44422121212121213`, 0.19010290909090907`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnAssociations",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnAssociations],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.18374951781657095, 0.9829730996839019}, {
           Right, Center}, Automatic, {
           0.18172239559633013`, -0.7768118230788036}], 
          {PointSize[Large], 
           PointBox[{-0.18374951781657095`, 0.9829730996839019}]}},
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[
         {RGBColor[
          0.5819508181818183, 0.7399549090909091, 0.3809772727272727], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SSparseMatrixToTriplets",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SSparseMatrixToTriplets],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.3612416661871535, 0.9324722294043561}, {
           Right, Center}, Automatic, {
           0.34665435407312795`, -0.7504686547335979}], 
          {PointSize[Large], 
           PointBox[{-0.3612416661871535, 0.9324722294043561}]}},
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[
         {RGBColor[
          0.4151288484848485, 0.6920723333333333, 0.5626724242424243], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnBind",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnBind],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.7980172272802398, 0.6026346363792572}, {
           Right, Center}, Automatic, {
           0.673530764566472, -0.5423544813794983}], 
          {PointSize[Large], 
           PointBox[{-0.7980172272802398, 0.6026346363792572}]}},
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[
         {RGBColor[
          0.25438448484848486`, 0.21885230303030304`, 0.7628075757575757], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.6736956436465577, 0.7390089172206596}, {
           Right, Center}, Automatic, {
           0.5928530446918596, -0.6364296259050555}], 
          {PointSize[Large], 
           PointBox[{-0.6736956436465577, 0.7390089172206596}]}},
         "DynamicName",
         BoxID -> "VertexID$4"], 
        TagBox[
         {RGBColor[
          0.6283088484848486, 0.7434789393939394, 0.34598354545454546`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnNamesAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnNamesAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.9618256431728189, -0.273662990072082}, {
           Right, Center}, Automatic, {0.7659420307976115, 
           0.2671227790211232}], 
          {PointSize[Large], 
           PointBox[{-0.9618256431728189, -0.273662990072082}]}},
         "DynamicName",
         BoxID -> "VertexID$5"], 
        TagBox[
         {RGBColor[
          0.4931563939393939, 0.723114909090909, 0.46483690909090913`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["DimensionNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`DimensionNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.9957341762950345, -0.09226835946330117}, {
           Right, Center}, Automatic, {0.7832606957631748, 
           0.09200784819085776}], 
          {PointSize[Large], 
           PointBox[{-0.9957341762950345, -0.09226835946330117}]}},
         "DynamicName",
         BoxID -> "VertexID$6"], 
        TagBox[
         {RGBColor[0.857359, 0.131106, 0.132128], InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.5264321628773564, 0.8502171357296145}, {
           Right, Center}, Automatic, {
           0.4845690543813654, -0.7046201092145995}], 
          {PointSize[Large], 
           PointBox[{-0.5264321628773564, 0.8502171357296145}]}},
         "DynamicName",
         BoxID -> "VertexID$7"], 
        TagBox[
         {RGBColor[
          0.4526351818181818, 0.7095047272727273, 0.5131467272727274], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ToSSparseMatrix",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ToSSparseMatrix],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.8951632913550626, 0.4457383557765388}, {
           Right, Center}, Automatic, {
           0.7301364513204597, -0.41930429320371676`}], 
          {PointSize[Large], 
           PointBox[{-0.8951632913550626, 0.4457383557765388}]}},
         "DynamicName",
         BoxID -> "VertexID$8"], 
        TagBox[
         {RGBColor[
          0.8384345454545454, 0.6890935454545455, 0.24538763636363636`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnMaxesAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnMaxesAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.895163291355062, -0.44573835577653775}, {
           Right, Center}, Automatic, {0.7301364513204593, 
           0.41930429320371587`}], 
          {PointSize[Large], 
           PointBox[{-0.895163291355062, -0.44573835577653775`}]}},
         "DynamicName",
         BoxID -> "VertexID$9"], 
        TagBox[
         {RGBColor[
          0.5362616060606061, 0.7332649696969697, 0.42078042424242423`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnMaxes",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnMaxes],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.7980172272802392, -0.6026346363792555}, {
           Right, Center}, Automatic, {0.6735307645664715, 
           0.542354481379497}], 
          {PointSize[Large], 
           PointBox[{-0.7980172272802392, -0.6026346363792555}]}},
         "DynamicName",
         BoxID -> "VertexID$10"], 
        TagBox[
         {RGBColor[
          0.28363636363636363`, 0.16658272727272727`, 0.7120521818181818], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnMinsAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnMinsAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.6736956436465569, -0.7390089172206586}, {
           Right, Center}, Automatic, {0.5928530446918591, 
           0.6364296259050548}], 
          {PointSize[Large], 
           PointBox[{-0.6736956436465569, -0.7390089172206586}]}},
         "DynamicName",
         BoxID -> "VertexID$11"], 
        TagBox[
         {RGBColor[0.3814987878787879, 0.6697256666666667, 0.613761393939394],
           InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnMins",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnMins],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.5264321628773554, -0.8502171357296134}, {
           Right, Center}, Automatic, {0.4845690543813646, 
           0.7046201092145989}], 
          {PointSize[Large], 
           PointBox[{-0.5264321628773554, -0.8502171357296134}]}},
         "DynamicName",
         BoxID -> "VertexID$12"], 
        TagBox[
         {RGBColor[
          0.8893551818181819, 0.3662789090909091, 0.1748141818181818], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnSumsAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnSumsAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.3612416661871522, -0.9324722294043555}, {
           Right, Center}, Automatic, {0.3466543540731268, 
           0.7504686547335976}], 
          {PointSize[Large], 
           PointBox[{-0.3612416661871522, -0.9324722294043555}]}},
         "DynamicName",
         BoxID -> "VertexID$13"], 
        TagBox[
         {RGBColor[0.8862404848484848, 0.617471, 0.22442945454545454`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnSums",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnSums],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.18374951781656965, -0.9829730996839017}, {
           Right, Center}, Automatic, {0.18172239559632888`, 
           0.7768118230788035}], 
          {PointSize[Large], 
           PointBox[{-0.18374951781656965`, -0.9829730996839017}]}},
         "DynamicName",
         BoxID -> "VertexID$14"], 
        TagBox[
         {RGBColor[
          0.675526787878788, 0.7429325151515151, 0.31717336363636367`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ImposeColumnNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ImposeColumnNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            FontSize->Scaled[0.03]], {6.049014748177263*^-16, -1.}, {
           Right, Center}, Automatic, {-6.049014748177263*^-16, 
           0.7853981633974483}], 
          {PointSize[Large], PointBox[{6.049014748177263*^-16, -1.}]}},
         "DynamicName",
         BoxID -> "VertexID$15"], 
        TagBox[
         {RGBColor[0.2998891515151515, 0.5705884848484848, 0.749190696969697],
           InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ImposeRowNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ImposeRowNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.18374951781657084, -0.9829730996839019}, {
           Left, Center}, Automatic, {
           0.18172239559633002`, -0.7768118230788036}], 
          {PointSize[Large], 
           PointBox[{0.18374951781657084`, -0.9829730996839019}]}},
         "DynamicName",
         BoxID -> "VertexID$16"], 
        TagBox[
         {RGBColor[
          0.8674186363636364, 0.2097009090909091, 0.14587490909090908`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["ColumnsCount",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`ColumnsCount],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.5264321628773567, -0.8502171357296147}, {
           Left, Center}, Automatic, {
           0.4845690543813656, -0.7046201092145996}], 
          {PointSize[Large], 
           PointBox[{0.5264321628773567, -0.8502171357296147}]}},
         "DynamicName",
         BoxID -> "VertexID$17"], 
        TagBox[
         {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowNamesAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowNamesAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.36124166618715337, -0.9324722294043563}, {
           Left, Center}, Automatic, {
           0.34665435407312784`, -0.7504686547335979}], 
          {PointSize[Large], 
           PointBox[{0.36124166618715337`, -0.9324722294043563}]}},
         "DynamicName",
         BoxID -> "VertexID$18"], 
        TagBox[
         {RGBColor[
          0.9020728181818182, 0.5086327272727272, 0.20241981818181817`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["MakeSSparseMatrix",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`MakeSSparseMatrix],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.9957341762950346, 0.09226835946330274}, {
           Right, Center}, Automatic, {
           0.7832606957631749, -0.09200784819085932}], 
          {PointSize[Large], 
           PointBox[{-0.9957341762950346, 0.09226835946330274}]}},
         "DynamicName",
         BoxID -> "VertexID$19"], 
        TagBox[
         {RGBColor[
          0.24790763636363636`, 0.28302187878787877`, 0.7890625454545455], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowAssociations",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowAssociations],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.6736956436465575, -0.7390089172206595}, {
           Left, Center}, Automatic, {
           0.5928530446918596, -0.6364296259050554}], 
          {PointSize[Large], 
           PointBox[{0.6736956436465575, -0.7390089172206595}]}},
         "DynamicName",
         BoxID -> "VertexID$20"], 
        TagBox[
         {RGBColor[
          0.3505598181818182, 0.6429982727272727, 0.6627781818181818], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowBind",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowBind],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.79801722728024, -0.6026346363792572}, {Left, Center}, 
           Automatic, {0.6735307645664721, -0.5423544813794983}], 
          {PointSize[Large], 
           PointBox[{0.79801722728024, -0.6026346363792572}]}},
         "DynamicName",
         BoxID -> "VertexID$21"], 
        TagBox[
         {RGBColor[
          0.39366557575757577`, 0.11303945454545455`, 0.5936598787878788], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowMaxesAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowMaxesAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.8951632913550625, -0.4457383557765389}, {
           Left, Center}, Automatic, {
           0.7301364513204596, -0.41930429320371687`}], 
          {PointSize[Large], 
           PointBox[{0.8951632913550625, -0.4457383557765389}]}},
         "DynamicName",
         BoxID -> "VertexID$22"], 
        TagBox[
         {RGBColor[
          0.3159191515151515, 0.11731290909090909`, 0.6603037575757575], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowMaxes",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowMaxes],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.9618256431728193, -0.27366299007208317}, {
           Left, Center}, Automatic, {
           0.7659420307976116, -0.2671227790211243}], 
          {PointSize[Large], 
           PointBox[{0.9618256431728193, -0.27366299007208317`}]}},
         "DynamicName",
         BoxID -> "VertexID$23"], 
        TagBox[
         {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowMinsAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowMinsAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.9957341762950346, -0.09226835946330286}, {
           Left, Center}, Automatic, {
           0.7832606957631749, -0.09200784819085944}], 
          {PointSize[Large], 
           PointBox[{0.9957341762950346, -0.09226835946330286}]}},
         "DynamicName",
         BoxID -> "VertexID$24"], 
        TagBox[
         {RGBColor[
          0.8049979393939394, 0.713523606060606, 0.25715248484848485`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowMins",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowMins],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.9957341762950345, 0.09226835946330149}, {
           Left, Center}, Automatic, {0.7832606957631748, 
           0.09200784819085808}], 
          {PointSize[Large], 
           PointBox[{0.9957341762950345, 0.09226835946330149}]}},
         "DynamicName",
         BoxID -> "VertexID$25"], 
        TagBox[
         {RGBColor[
          0.2805936363636364, 0.5226316363636363, 0.7796697272727273], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowSumsAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowSumsAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.961825643172819, 0.27366299007208184}, {Left, Center},
            Automatic, {0.7659420307976115, 0.267122779021123}], 
          {PointSize[Large], 
           PointBox[{0.961825643172819, 0.27366299007208184`}]}},
         "DynamicName",
         BoxID -> "VertexID$26"], 
        TagBox[
         {RGBColor[0.8680576969696969, 0.660111, 0.2341370909090909], InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["RowSums",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`RowSums],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.8951632913550622, 0.44573835577653764}, {
           Left, Center}, Automatic, {0.7301364513204595, 
           0.4193042932037158}], 
          {PointSize[Large], 
           PointBox[{0.8951632913550622, 0.44573835577653764`}]}},
         "DynamicName",
         BoxID -> "VertexID$27"], 
        TagBox[
         {RGBColor[
          0.7213127272727273, 0.7386940909090909, 0.29219645454545456`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SetColumnNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SetColumnNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.798017227280239, 0.6026346363792561}, {Left, Center}, 
           Automatic, {0.6735307645664715, 0.5423544813794974}], 
          {PointSize[Large], 
           PointBox[{0.798017227280239, 0.6026346363792561}]}},
         "DynamicName",
         BoxID -> "VertexID$28"], 
        TagBox[
         {RGBColor[
          0.9011811818181819, 0.5711112727272727, 0.21431218181818182`], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SSparseMatrix",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SSparseMatrix],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {-0.9618256431728193, 0.27366299007208394}, {
           Right, Center}, Automatic, {
           0.7659420307976116, -0.267122779021125}], 
          {PointSize[Large], 
           PointBox[{-0.9618256431728193, 0.27366299007208394`}]}},
         "DynamicName",
         BoxID -> "VertexID$29"], 
        TagBox[
         {RGBColor[
          0.8774782727272727, 0.2882958181818182, 0.1596218181818182], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SetDimensionNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SetDimensionNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.6736956436465571, 0.7390089172206585}, {Left, Center},
            Automatic, {0.5928530446918593, 0.6364296259050547}], 
          {PointSize[Large], 
           PointBox[{0.6736956436465571, 0.7390089172206585}]}},
         "DynamicName",
         BoxID -> "VertexID$30"], 
        TagBox[
         {RGBColor[0.471412, 0.108766, 0.527016], InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SetRowNames",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SetRowNames],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.5264321628773554, 0.8502171357296139}, {Left, Center},
            Automatic, {0.4845690543813646, 0.7046201092145992}], 
          {PointSize[Large], 
           PointBox[{0.5264321628773554, 0.8502171357296139}]}},
         "DynamicName",
         BoxID -> "VertexID$31"], 
        TagBox[
         {RGBColor[
          0.2527632121212121, 0.41065066666666666`, 0.8107441515151516], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SSparseMatrixAssociation",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SSparseMatrixAssociation],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.361241666187153, 0.9324722294043555}, {Left, Center}, 
           Automatic, {0.3466543540731275, 0.7504686547335976}], 
          {PointSize[Large], 
           PointBox[{0.361241666187153, 0.9324722294043555}]}},
         "DynamicName",
         BoxID -> "VertexID$32"], 
        TagBox[
         {RGBColor[
          0.2634502424242424, 0.4714613333333333, 0.8041720303030303], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SSparseMatrixImportFromDirectory",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SSparseMatrixImportFromDirectory],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            
            FontSize->Scaled[
             0.03]], {0.18374951781656998, 0.9829730996839017}, {
           Left, Center}, Automatic, {0.1817223955963292, 
           0.7768118230788035}], 
          {PointSize[Large], 
           PointBox[{0.18374951781656998`, 0.9829730996839017}]}},
         "DynamicName",
         BoxID -> "VertexID$33"], 
        TagBox[
         {RGBColor[
          0.24468436363636362`, 0.34889145454545456`, 0.8118174545454546], 
          InsetBox[
           StyleBox[
            FrameBox[
             ButtonBox["SSparseMatrixQ",
              Appearance->Frameless,
              
              ButtonFunction:>GeneralUtilities`PrintDefinitions[
               AntonAntonov`SSparseMatrix`SSparseMatrixQ],
              Evaluator->Automatic,
              Method->"Preemptive"],
             FrameStyle->None,
             StripOnInput->False],
            StripOnInput->False,
            FontSize->Scaled[0.03]], {-7.044813998280222*^-16, 1.}, {
           Right, Center}, Automatic, {
           7.044813998280222*^-16, -0.7853981633974483}], 
          {PointSize[Large], PointBox[{-7.044813998280222*^-16, 1.}]}},
         "DynamicName",
         BoxID -> "VertexID$34"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->900]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.893596246952284*^9, 3.893596265253014*^9}, 
   3.893597150596225*^9},
 CellLabel->"Out[102]=",
 CellID->1440152806,ExpressionUUID->"cb9b2eb6-d792-4f60-9187-060dcfc8bacf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"2c9c54d5-b60c-405d-877a-e86b9143509e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "90fa909c-6896-477a-997b-900a4474e286"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"b61ab8cd-0d66-4528-9ee6-4fcdbdf2b499"],

Cell["Anton Antonov", "Text",
 TaggingRules->{},
 CellID->559355747,ExpressionUUID->"785a665c-e33d-4705-8558-ae7c743319bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cdbb51c6-8856-4877-b13f-1566c3a995cf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"dc0b341c-80f1-4ff2-90f2-d5a91dbfb34f"],

Cell["https://github.com/antononcube/WL-CallGraph-paclet", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893595660774186*^9, 3.893595669577813*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"e34ecda1-f77d-420b-a638-b6bf1d3c8bc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "05cb75f7-8951-41ae-a68b-b2f707652748"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"7997d060-f561-4b5d-ad04-2b7c1a307c24"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"04dd34f0-d14c-4148-be8b-a4732c9e733d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c810fa15-ce51-42ce-a042-944779976ce1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"02319772-c800-46b1-bd20-6497aedf99a0"],

Cell["Call graph", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893597205947915*^9, 3.893597210318021*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"b68d23fa-e97c-4780-a94b-f38b42b72c50"],

Cell["Dependencies", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893597205947915*^9, 3.8935972218928747`*^9}},
 CellID->1475487526,ExpressionUUID->"a08fd15d-f38b-4687-8ffc-1a5f00d17f57"],

Cell["Down values", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893597205947915*^9, 3.893597232013652*^9}},
 CellID->1375696151,ExpressionUUID->"d16bcd46-f09b-4283-a896-8c5915c2ef03"],

Cell["Sub values", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893597205947915*^9, 3.893597229789641*^9}},
 CellID->825869149,ExpressionUUID->"d803ebc8-7618-4edc-b4d5-22ffd251db87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e96c875c-004b-4932-b1a9-5a9943219d8d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"33d78555-319c-4e2c-a6ae-4294db69dcb3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Graphs & Networks", {False, "Graphs & Networks"}], 
            "\" \"", "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Visualization & Graphics", {False, "Visualization & Graphics"}], 
            "\" \"", "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Core Language & Structure", {
             False, "Core Language & Structure"}], "\" \"", 
            "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellChangeTimes->{{3.893595674704809*^9, 3.893595700714429*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->969880382,ExpressionUUID->"b6984ccd-8650-4f2a-876d-ce37d855a29a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ef2ad00d-6ec2-450c-916b-c2e5e165652c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"346c30f8-72d1-4e49-9665-d72e0559752b"],

Cell["AntonAntonov/SSparseMatrix", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893595712399529*^9, 3.893595721095208*^9}, {
  3.8935972381295767`*^9, 3.89359724237556*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"e8b156f7-f874-4abc-8484-22d96e6d4e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b94314d6-8d83-4407-b6c6-2bf44ba94cdf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"106f8828-59cf-4813-828e-f9d0a63cb8c7"],

Cell[TextData[ButtonBox["Call graph generation for context functions | \
Mathematica for prediction algorithms",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathematicaforprediction.wordpress.com/2019/01/01/call-graph-\
generation-for-context-functions/"], None},
 ButtonNote->
  "https://mathematicaforprediction.wordpress.com/2019/01/01/call-graph-\
generation-for-context-functions/"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893595742638172*^9, 3.893595744032794*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"c2b53544-9652-408b-9511-f6465313b7c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9985c32a-52eb-4f28-ba10-bd9e0b0604ce"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"fa03b9f8-97ee-485f-ac52-4e1b4139dc3c"],

Cell[TextData[ButtonBox["MathematicaForPrediction/CallGraph.m at master \
\[CenterDot] antononcube/MathematicaForPrediction \[CenterDot] GitHub",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
Misc/CallGraph.m"], None},
 ButtonNote->
  "https://github.com/antononcube/MathematicaForPrediction/blob/master/Misc/\
CallGraph.m"]], "Item",
 TaggingRules->{},
 CellID->1158462809,ExpressionUUID->"17d6b287-edc2-45ed-88b6-3ab0cb9524d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0eccfc9b-4393-4a43-bde8-f0e1ce3c508f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"f65cf603-f399-42f4-b000-2a7b46dee22f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ca31b95e-951f-4ced-9ed1-2ed83e07a479"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"dae5c6e6-586c-4c36-9077-db6b9ac3e7cc"],

Cell["12.1+", "Text",
 TaggingRules->{},
 CellID->1556116910,ExpressionUUID->"1263f8e8-3a73-4624-a402-4d7d277f85da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c18e4caa-acb0-4f33-bfd8-565233ec38ec"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"2af9d159-e38f-470e-a1c8-0698b097665d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Linux\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN1qwzAMhWFJ2hTKnmCvkIco2QaFjpRqY7t1EnUTdWxjyax++\
6mDhN5JOkeffnZ1AxVItgirLklI0sC6/cHhguO54PJALLD+JDf6X4bVmxk6+ILyw9FVG/eCE8+\
28wOXp6SgxT4Hi1Jo/wxZitWBXLrOzPoYfcAoGZ5aPwUj1JMlyZ0WNXHfkFmn6pZdEPLuH34/\
nuuXkcT0GlWvxjIuwuYZLd4rt1O9TZPjtmjgce8EY4hquYFhs3MZUs+\
oL9mekH2KA77noJ86mkFJfw1ma4c="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->82653162,ExpressionUUID->"bdc08c28-66fb-4cba-95d5-58b22c9c2e9e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ac39a30e-364c-4477-80c6-1eb969cc9acb"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"7e0479b4-2158-47be-9566-52c26954eb0b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RZBhmDhmqwZydRialjG0su5O/\
nlMTJ9uSTTtzp5GOawx54VAiHk2frOYek6LG9YndJaPcliSEBJJJGwwFaJy1DBr65otOo4PkHm/\
ImlBd8nwjlsa7CRNtj5xV2kL4JbvtP0wSninGgRffyQLtzGFn1FxCZxXB+Y3+zwAoj+2+nv+\
WqPa86vxvtuPoKIxvTbHOltTMWHY/wWpjBBp9GKsnj6lrqm3RGD6inA5/\
s1KNJdHsISstOsmgC2n8IRRiJ7B0Vbpnpl4zyg6biMYeXSjM668LIPXF21GM4C2EwezojGe9a/\
B5tCF2LNij9AojVrVE="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->991332972,ExpressionUUID->"a054ece4-3cbd-4039-8e1f-2589bee67af2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3ed62159-ccf3-4be2-8903-afce03685b03"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"dd505cda-f799-41bb-829b-6276d24cbd65"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->92922911,ExpressionUUID->"e1a13e3c-b5bf-454d-a079-63a1ffc646b4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c791c7bb-0d10-45d4-9a23-0d46ca248fcc"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"fbbc452b-203e-4489-bba6-d0ab98b88611"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->716444359,ExpressionUUID->"993627d2-235c-4708-86d0-1b4a75e4ab5f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5cdc47b0-0704-4aaa-9320-bfca17064844"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"9e330065-e256-440a-96fd-08316b8dd18c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0SRu1F+DAyUIcCQ/\
ApWq2LURq1SrOC7jr2cSq17PyT5vtlYfgZXgEeAnEEfEMjJ3spqmKxF5sj2fG33zzzR73R7zHfa2B7\
1wGXwU/4rvZAvIbkMUz1z1Xjiy9iYfSFc9X56LjutOggc4vpngXj9HM988xF5oVSkP07U/F3RiXtO+\
4/RmUlRYeyFB01/6vTpTLNbpgwaXQsxTZc90MtKYMu+R9Irwodlz/zIoyRXdW1/xLJ1sgOmB+\
oRzDyis0TBWsxmBZJXINnkllIfe6ZhLBMWFqhgX5AytQa7xTZs5ksHHRKGRc0TKDtqQyghNz+Lj38+\
s3llkg6O49k0BZKRN5lShVoWivN0Un50lZofWOSQLOCovllkcskcCCFRGvYxYiK5J5bN5dQ1fGeaF1\
ciPkskUoLDBY5lBR2Ac+vEALE1PgDJZtY9zeWOQ3c4vBSKJx8MmK+hxuQdsifX+\
OWs9h4vVC2Dk9mL3cZEj2JIztDD++x+/\
3JsPBND5DyKaEL7is194MJiVRyNU9NBKhVDucyAC5zvPryA2Og8eS6sz/UczgJLIurmnbndkA7UU/\
6mAm5q0w+TtO7SbCmjxPC6yJ34/x69JbhOs1G2fjdn+YHdITw8+\
oZYakY9IAzcbB6a3QITUoCfJNplV+\
Q9KK4qAmKQJgy3TP306MVgYaXJcVGLDj4D2aZjL43gbiiPevbFSJr7fNu5dJ566Zof+\
qhRphFmAVCebBtq2u98i44vZUqhXnvTOhHTzVjUc3bTv46we8j7bgZ6hDadyDpo/\
4wcR4sJWlrImrwbGpebh2QD+e4RQczXMOs7qiP9RVmo2/3+2uwg=="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalFiles", "LocalFiles", 
   "LocalFiles-Checkboxes"},
 CellID->457873603,ExpressionUUID->"9e04144f-ba8c-44fd-8abe-d91af9392185"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUhjZpkzZKN2zoymLFglyATZVMWojUqlUcxNq13yQmznjws5sOK26BWHERjg\
CXqFgizsAbJzNNWyoxi8R+P9/7+577rR5vcl8Y4DvnwefB9/huMgM5B5U+\
wcapRpI0Rx4WmD5d3dMtbIyDAbpvj+2yvJZifvDemtSJBRNS2pB50rfGYjmw14BktD+\
BRW6EBxKkjbXP86FGaSwGB7h276+9m9hIwBhC2SWPofAi3cHWCVlEhK2Vmn/bTmbWIjA/\
08hs7rXNmE5ZYYNjuZAGPFPagfSmYMoCMpEVzKZkDyy1xtilzqav926+fGdj+BjIFF+\
xgOWvdYwcrVMrJ52l1i1EjOCgLEUxb0tbd/P5K7Kq/tEwoo0yD05Ij2yp/\
SzGq00TY4OqGlXGude7CJA4oBiUhwKqgjInu4VVOtV0vgMnI5y9/\
EBl4qZv6QLXIEN5XlkpyI0tKHWUM1A0RypC4Hzl9g5rO+lAaU/RKciVllAJNrNdi6LrmZhD3YO+\
yWeCSWEM8s6ZdTCi3k3guiYP7g2EnE8dFatoxO03ThSncAXGpfH7c1RbduLMz4Sb6gyTZ7cIUR7Jex\
fh54/y+32L0B2XYWjMY6F0wKRZa9qjhZgC15+\
gojFB7XBKHNQa59cRtvvB23Lw8pFi2sNyQuKSjo2JC1ArWiVHJ2JaLw9/yWlGxKAK5/EFqDD2S4x1+\
XWW6/9kkAzq80FyQGE6b61RiaVdI87QDnePr4QJkbVxYQ4To+WcqF+SycEmq/\
mLUWZ0BlVu5zlk4AbBe5tV28u7d9Ps8daFszk4XzxU7Z7HfcRq3/+rJhpKNgOnab02jnWVzXvCVZ+\
PiYex/80TYRD+NZl7mno0/\
HBjBr0HJSTWhEWGGyTo8W7c7dwRcuxbu58VPFwikENnDEhvj4RJkdOrehGfoL+70fkG"},
 CellTags->{
  "CheckboxCell", "Disclosures-WolframAccount", "WolframAccount", 
   "WolframAccount-Checkboxes"},
 CellID->243056593,ExpressionUUID->"19dd9d4e-a2e2-420f-8a1f-9880c7caad97"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVF1u00AQpiVOkzZqi8QT8LDiCVBzAV6qxG0hUqNU3lxga4/\
jVda7Zmc3rbkId0EcAS6BeEScgbETuyUqCD/YuzM73/x833rUG/\
KAu1IB7868K7wb8r0wg3gJSfoIO5cSyRJMHOSY7qz36S52Iq+A9o8jc1NtKzN/\
cn7rwGqhGIJdyRiqiF4kbsbmlta7eDCHvFDCARnSzibq+\
ZnEWBn0FrAB4E18gJ0QlCKcPYo5E06kXexdWJHXGLtrN/+\
8E2bGIDCXSWSmcNJoJlNWGm9ZIWIFjiXSQuxUyRIDyIQumUnpPLDUKGVupF683f/+\
6QubiiX5LXzwgA6ZMwy222KvMueKE5ZWL8TshIGLX9fRoQXqj2qwzCN9NyEsNlpTeqqrPsZBJwxyIR\
XywdRYmOjUzClRM1vcH4t4ubDG64S677+zoryEFSib1s+v0/bkoB7HVNiF1Bg+vUOo7TW3fyJ8+\
1o9P+8QDqMqDU0gEon0GAatpz/JxQK4/AgNywTV5bFQkGxwfpxif+SdyYWT8V+a6Z8BUSCuadmZWw+\
to1fRNxeLVlv8DV+\
PqcH5lzoalIMKZTOAts7NNxyH43Z9FB5RosF7o5LQkBTBAYn88HwllBdV1lpNz0Il4yXpwrKcqmCSy\
rB57ecvJ1pJDU11swI02LF3zuhG3Px4u9Ah711ZU4B15UPOvVktWGyuxH/\
1RdToDKx0kNxbtp0GW8b1tM8TuWYhuBAK4SF+\
tjwtQfzFPSaGDzQRGuVzjffEMOSHE03nCkvY9fT6I11yf41A/5RBBEjXM4Z5WdDP56q+\
pb8Bk6mkSA=="},
 CellTags->{
  "CheckboxCell", "Disclosures-ExternalServices", "ExternalServices", 
   "ExternalServices-Checkboxes"},
 CellID->105278940,ExpressionUUID->"921e2d99-84bf-403f-a313-68df4a8ad8f1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{"\"WL system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVr1uG0cQjmRSImWBCgwZ+ak2QRCkMOEuhYsQ4lG0CUigwCUiBCmc1d0cueHe7mFnj/\
L5MdLkAQKkSZEXSJU6eYC0Qbr8PENml+SJJCwkhQoXZsP9mft25vtmZ+\
ek0eZ17koFfG9YuLxwbb4fTSGeQZK+hbUzibRSHzjIMN1ZzNNdrI0KBTS/NzLXfuqX+\
TuXZwxLJFMWG53KSWGFkzTawcZIXHfNC0Ayvj+\
GLFfCAS2kteW3rCcxVgYLC3h5xgNKtAFSx1oEShHYPn3YE06ke9joW5EFoN1quzGGFy7s7y/\
Bf9yJpsYgMDeVyEzu8ZhMWWkKy3IRK3AskRZip0qWGEAmdMlMSvbAUqOUuZZ68uTg929/\
YpEFch1ZDhYJG7RjysRCMYynkBArCXMCZxiMz00iU0nWN8wYy0DPpTU6898iOEfYW+\
ae6e1g72Ej6LQIdm8sJgv+mt3COaMXk8qE1z+\
6EG7KW7zMrozCEaRnUs9W0uExn5pr7iydHU2FFbGjeLA2tgVUNgd9o11fZFKV/\
IgTVzEwLjSyC2sqo2ZXIIRTvbO9UpN9TM4e9k8vrJwTV18NUto6jAprKeLPhSqAN89NgTCcg62yp7b\
hX9OfHRllrA989LQbxvblpz98dvnlnx37ifj+7+df/Nax737M699983NnlZxbOAcLdjyD/\
O2F1E8spI8DO5VVi1LNS3khksSrUe8LhT6gB8HPkzwH4kjHQKzzhj/gmdDJnZHJdx/\
dheTNXshhY8s3sq/Jfrwme8XQayP980e+\
JKCkXWFDFRhodEIpKkLkkS9VVFwWIaA3TSAHnYCOqVBsVCTak1luLJlpo9t5caVkfBd51RoBBq+\
HV18Te2+Say253ltLrk2aXpsM6/jX2DuweGPEjHKlT++\
PO9UJy8KTE4cnFpfpRwf4nJuSF4rO4ofnxsJAp8Y/rGssiHg2saYgX3ew+\
dSK8gzmoGwafv90KsvD8EifCzuRGqPjNa/9+krnNYRff/G/v24QWiN/\
DDEwEoksMKrfaDrIxAS4fAkr0Qlqj9ODDMkS548ONk8KZzIKMr4lmGYPSEVxRcNNZhv+\
7pAwVfPDH3MSl9ha4fxn47KCuu+hlixUzi7/o27UrcZH0ZFP7mdGJZGhVgkcUCvWOp1TmgdID8Tfj+\
h6z6g9sSSiBSbJF5uFff7hQCupYeXikCoG2EXWrpov/vCV3rZ5g3KGmhtX3mqxPwwdFK6at/\
8VISmlp2Clg2RtWMVc31pckH9KBTCIsrwzr5Bra6fSi3+\
wJkz7tkioAhSZxrUEafNWuAG5pQMCmc0TXfLiijq1Nj9c3fFxmVPHfBEu/78U+Qce"},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemConfiguration", 
   "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->423568193,ExpressionUUID->"3ec56a18-dc47-4088-93fe-812af8f2c519"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
            TemplateBox[{"\"WL built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
NJMc4FQuGm4czCt0EqeFzKSTjpWZXlHsdaKJLHm0UlvzBDwcvAVHhmdg7cRuSAuDL17taj/\
t7vdJ417A29wVCnhn4V3uXcC74QbiLSTpC2zNJZKnPXOQYXqyW6en2Iq8Alq/jMx9uSzd/\
PXtnK28VC6QmmGRrYwqc3qRuJ+\
YB0DaeLaELFfCATnS1j7vfCoxVga9Bbyd8wLpML5Pb2MrBKUIpkspU+FE2sHelRVZBXG6C/OvJ+\
HGGATmNhKZyZ00msmUFcZblotYgWOJtBA7VbDMJDKVgCyBVGpZ7qWc9EntDH28YQIJtISmwK62z8xY\
ZtwGLPkcWC0Uiw1ZDw4/8MG1sTDTqVnSuh4VvpqIeLu2xuuEeul/\
tKKYwx0om1bfr4tm56Bq7lrYtdQYvnlEqPwVVX8ifP9Wfj8fEYZReYzU60gk0mPYbiL9WSbWwOUXqE\
kjqA6PhYJkj/PjAvtj70wmnIz/0kx/CjRQsSKztbQemkCvJGMp1o1U+HtOM6cB1zj/\
oLoGOStB9v03Ze7/4SScNPYoHNE5g09GJaEhWYEDkuzw8k4oL8pDK2mch0rGW5YSZxkVQZSRmVVx/\
m6mldRQF7fIQYOdeOeMroXKR0d1Brx3Y00O1hXPxLqLSntYi/u/uiJeNKlJOkgOzKbP9pFzN+\
rLRO4oaF8JhfAcOUeRhh3+9oCG4GkPoVE+\
03gghIAPZ6XUc0vQ1ej6Y11wv0Kg52EQAdJFi2FZ5PSO3FT37TdcdY6p"},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemSymbols", "WLSystemSymbols", 
   "WLSystemSymbols-Checkboxes"},
 CellID->349939228,ExpressionUUID->"f4d2db13-c784-4c7d-99de-fbaafc6fa029"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1u00AQpiVpExq1EnBCAq04k75ClTgtRGrVKhuJ89Q7TlZZ75qd3bbmfXgbeAuOiG\
dg7MRuKAXhi2dnPN/8fN961BvKrgylQbl3GUMRw1DuJ0tMV6iyJ9Q518Se7jRgTtnO+\
pztUmcWDfL56czdVsfKLV9cQWowCIUFWoU21Vjl9GZwO3Z3bO/\
SwRzzwkBAdmSdTd7riabUOIoeaQ0x2UboUidBYxhpn7MmECDbo96Zh7xG2V2H5ZedZOkcoQhLTcIVQ\
TsrdCZKF70oNp1pj2kwpdCWAhjD33kRC8UNkQBbClBKV4lgNil0LNYtEeNCEOCRk1MTFSpxq8OS3Sg\
+OpNxP4JK4kUJ5YR1QXj8FLmgAK7bDHgsBxfO49Rmbo537Srp2RjS1cK7aBUP2n/voTzHGzQ+q5+\
fJ+2Xg3ryC/ALHiJ5eY9Q+2sqf0f49rV6ftwjHM6qMtouZqB0pKTbRvrTHBYo9WdsSGWoPZmCQbXB+\
X5C/VEMLoeg078M058gbwyu2ezMfcQ20KuYmsOilZJ8J5kQXniD828pNDgHFc5mBW2nm3cyTsatfZQ\
ccanBB2dU4lh5GJBVfXh6AyZCVbeWzqvE6HQlMhZD7mqC2czruHw7tUZbbPq75G7Qj2MIzjZals//\
bHUoe1feFehD+Xh4/7JWKDW34L9mY4LsEr0OqLbMdtruA+\
d656cs6ZqL7hkYwsdYehBpaZJvtvgYPjpG4kzMLW2JYigPpzagLzyj1zvsj2wp4zUh/0oGMyS+\
kSnOy4L/OWvMX7ZnntY="},
 CellTags->{
  "CheckboxCell", "Disclosures-PacletDependencies", "PacletDependencies", 
   "PacletDependencies-Checkboxes"},
 CellID->175258687,ExpressionUUID->"9fbd5f5f-fa5f-40ac-9a17-9293c99f43c8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uE0EQJsFO7GA5CFGgpDlRICgsOooUWPElJpYSOfJYIEQBm7s5e+\
W93dPuXsLxGDQ8ABINr0BFDQ9Ai+j4eQZm73wXx/yIgmu8uzM7+\
833zYx3Gx2og80EwtowtUlqO7DuTzGYYRhdMrVDbuikPrAYm2il2EerpjZKBdL+\
8kidua07hqtD8AIlIz5JNbOcViumMWJnPfUcDXldGWOcCGaRDqLa/\
NLWHjeBUCbVaIbgX7heNzUfhaAw63Rlj1kWrZlGX7M4D7FamRtjfG5ze4nF+\
lOlDHp2yo2nEhfO45GXqVR7CQsEWi/kGgMrMi9UaDwmM09F5I9epIRQZ1xOdjY+\
v3rnHamQR5xcKD2D1pLBFAY2m19M6SW67AhaBnzZNHJ6C8BrYzYpsm/\
2UmuVLDaVC1yFzBDXvsYQpeVMQBuy+EQJM8LokMtZSb65DlN1BlYTHH/\
KNAssamNqY51i5bPRV9L2WcxFBptAuQfoAZPGO9aqcmr2mMEcgMO9l0nyDwh3q79/\
rPkp6fVsEJGp5adaE6iHTKQIzSNFWQ9PUVec1y7ga7q3fSWUdhyMHvTytX5x7+39R0++\
dvVt9ub708efuvrGLai/fvm+\
W5bXUpyNgihHJmwX0u1ojO4uE1VdaFMRWTo7ZmHotKr3mTAut2s55N0kQaJLBkhaQMO9dcBk+\
N94hdaR0jiQkXJFuZAGC2YTrVJ6asU0H2iWHeIpCh3l349u5dnKC/yI6QmXxr++8Kg7L4VaiPDxg/\
u+nUdoj9wzlMCIhTw1fv1clEHMJgj8BZaqUag1CJjAcB7nS9c0d1OrYurB4A/\
JNPeQZGAntLxITMOVP/FazQq4A9Rk1H1lnL+0exnkigsyz7+COf/1e36vWm/\
6m64uD5QIfUWjBS3SzGrvn1KF5iFdINjyBQ9m1NXaiwmExwmFjnM73BxIwSWW4IYJStRFwZXDCjaXc\
HagQTInqG32G9v6MB82phxw/5QV6SKnqLnFcGFZ5VlfOiyo3g95IcG8wH8jzpKlUge2F2To/\
JoDtWoaS7NQCB1oD6irdKIpdE5dc1dmkJ7QROxAa4Qm74JxltAfyXHepT8BfMZDMg=="},
 CellTags->{
  "CheckboxCell", "Disclosures-OSConfiguration", "OSConfiguration", 
   "OSConfiguration-Checkboxes"},
 CellID->147266719,ExpressionUUID->"401521bb-8881-4fa4-8ad6-57d9a287fbc7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVT2PI0UQvb21d+\
09y4vQSRyQtA4JEWAhEoILsNaz9p4lL2u5vSBEAO2ZGrvlnu5RV4+9c+GFhCT8ACQS/\
gIRMfwAUkTGx2+gesae9VrsiQAn7o/q169eva45a3R4nbtcAT+6ylyauQ4/\
DhYQLiGKH2BtJJFW6kMHCcYH5Tx+iLVJpoDmhxOz9lO/\
zN8cmVAohjlSNJPagRWhk0b7k42JWPfMDSCFP5pCkirhgBbi2ub003OJoTKYWcACiBc4w12YOtYCUI\
rgjunouXAiPsLGwIqkgHpYbTemcOOK/cMN/\
NcHwcIYBOYWEplJPSCTMctNZlkqQgWORdJC6FTOIgPIhM6ZiSkeWGyUMmup589Ofvv2R9a/\
gTBzFMIXdB0zlk2uP2GhSRKhIyxCrpG2iQNYTZLASqhMOGORraRgXsj9PA6xUZShzONoKualOM1e5p\
zR5aQK4a/1N9j9Ehp4m+\
fJzCicQDySerktEj7mC7PmzhL7YCG8lGARa1ObQRVzMjDaDUQiVc5POSkSAuNCIxtbUwU1ewKhIOB5\
n+ea4kPi3Rr0x1auiMNXw5i2WkFmLWj3KRED3rw0GcLVCmzlk9odfk1/d2CUsV6DyUWvGNsXH/\
3w8Wdf/NG174nv//ry81+79sm7vP7dNz91tzbcwzkphfJi8rfLgj6zEH+\
wL1R1oB3QxcRzLKKIxMH6QCj0ub1eUD5LUyC5dAhUC97wdz2n8v5vuvKXB4VTtgZHtpZucesZJWdWW\
AmlnyYgIvROW1vpnecMQ2dBJMUiGnqvrowciUyHCwpJiZRSoNiSAEHh+\
wyz2WbsD12Mr5G3Lo2FoY6NfzA7WopwObcmo3wPsHlhRT6CFSgbF7+/\
u1Vkq3h8l8LOpcbg8U7mfn3rlh2EX372vz9vEdoTfw2pOBGRzDCo3zpjmIg5cPkCttYhqCNOrQGiDc\
7vXWyeZc4kwsnwnmSa50BeEDMa3q1Ow79BKm7V2PiHHIpOs8X5Dy1pC/bIg210qOhu/\
oNe0KvGp8GpfyTPjYoCQ20QyJIPsL2xJ2F6IP5WoGS4pMZjWUJkqJvSMCn2+\
dOhVlLDluRVChps6f5tY+Vv3MO3wxvkvRSsy18Rc3yVltnV7nb8V2ZJ9dIL8PaMdoZV3vW9xbIE/\
UiWpdm8vn8p2t5OVTX+\
zk55OvfnQv0kSzTuGKXD20VMaumKQtLmmc55NkOgj11rAlg81Wme0ldxXLSSfwBBkJQ9"},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalSystemInteractions", 
   "LocalSystemInteractions", "LocalSystemInteractions-Checkboxes"},
 CellID->890059680,ExpressionUUID->"0670fdfd-0238-4fcd-9a17-a9473f8c8325"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNU9uO0zAQhaXpha26IPHECxbv5RdWbboLlXbVVdwfmMaT1qpjR760m/1G+AseEd/\
AJG3SsoCEXzyey5mZM+NJf8wj7kuFvLsIvgh+\
zHvxBtMtiuyF69xJR5po7jF32cvDO7twnSQopPerxOyrZ6Xm0cJv0JK2n8B+\
ah7RkelyiXmhwCMpss7R881MulQZFyy6Q1DkOjEqRcE9cpyBh6zr+\
rcW8jrw4mDmbiIEAyGkl0aDYh4fPQPHNKJAwaRmQPKepeTMVqjMnnnDhElDjpo8dXkeLU5VML8Bslt\
k2nimqEiCg5XZ4Sc+\
vDcW5zozS8rWNO9eTyHdrq0JWlDVg88WyjvcobJZfX5et57Duo17sGupXfzuhFDra/J/R/j2tTo/\
TgijpEoj9ToBIYOLo9YymOewRi6fsBkDQXV5CgrFEef7tRtMgjc5eJn+\
o5nBDBV6WJHYWdqAraFf0b6EdTt8/\
oFjWvHX4Pwxyib0sgo9dt0Wd7zjaTxt5av4itCHX4wSsaFlQY+\
0eqObHagAVap69O9jJdMty4xlOaWmWZOY13b+ca6V1NiUtChQo50G741u1u+\
4nWPef7CmQOvLVtNbFBWKa9bzvzog5jVFS9qTM7HtKXqmPJB5Q6tXkxzdgnL4N/qfWVr++\
dszosdN5bFRIdfubMBjPpprj7awBFiTM5jokoeVQ/rIwwSdCTbFZVnQj3+AlPL+AvvNa/8="},
 CellTags->{"CheckboxCell", "Disclosures-Other", "Other", "Other-Checkboxes"},
 
 CellID->635776107,ExpressionUUID->"fc99fa68-53e0-481f-8d7f-258b477aa812"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "586a1361-ab8d-4c19-b1e7-b272ade038af"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"88b783dc-2a51-48ef-91de-29bc5123cfa3"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"da7b83ae-6f77-4454-8aae-bb4fed8ed1ae"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1200, 1138},
WindowMargins->{{Automatic, 998}, {Automatic, 73}},
WindowTitle->"CallGraph | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.893598159759609`16.34292611713384*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "11", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    
                    TemplateBox[{
                    "\"The same symbol occurs on LHS and RHS of \"", 
                    StyleBox[
                    "Rule", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L255,C38) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "881a6092-4ea1-47f5-9812-56e89c82ec92", 128441558, 
                    "CodeInspectionFileIssue/PatternRule", <|
                    "AdditionalSources" -> {{{255, 44}, {255, 45}}}, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 255, "SourceColumnStart" -> 
                    38, "SourceLineEnd" -> 255, "SourceColumnEnd" -> 39, 
                    "Message" -> 
                    "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{255, 38}, {255, 39}}, 
                    "AdditionalSources" -> {{{255, 44}, {255, 45}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L154,C7) \\\\\
\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e20bf597-97d6-4acb-a272-237286c532fc", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 154, "SourceColumnStart" -> 
                    7, "SourceLineEnd" -> 154, "SourceColumnEnd" -> 14, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L155,C1) \\\\\
\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "0ac3d1a3-d5e8-49c5-9c1d-f0c820d66f6a", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 155, "SourceColumnStart" -> 
                    1, "SourceLineEnd" -> 155, "SourceColumnEnd" -> 8, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L177,C46) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3d75f514-421d-470f-a7ae-e3145aa13f96", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 177, "SourceColumnStart" -> 
                    46, "SourceLineEnd" -> 177, "SourceColumnEnd" -> 53, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L219,C60) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "627b7db3-76b2-460f-8fab-073780813cde", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 219, "SourceColumnStart" -> 
                    60, "SourceLineEnd" -> 219, "SourceColumnEnd" -> 67, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L236,C29) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f40ae55e-1c66-4598-97c2-761df239cefe", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 236, "SourceColumnStart" -> 
                    29, "SourceLineEnd" -> 236, "SourceColumnEnd" -> 36, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected a symbol as first operand to \"", 
                    StyleBox[
                    "MessageName", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L262,C101) \\\\\\\"\\\
\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "dab37c46-d906-4391-8664-5161b4d3c548", 128441558, 
                    "CodeInspectionFileIssue/MessageNameSymbol", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 262, "SourceColumnStart" -> 
                    101, "SourceLineEnd" -> 262, "SourceColumnEnd" -> 102, 
                    "Message" -> 
                    "Expected a symbol as first operand to ``MessageName``.\!\
\(\*StyleBox[\"\\\" (L262,C101) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{262, 101}, {262, 102}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L262,C101) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected a symbol as first operand to \"", 
                    StyleBox[
                    "MessageName", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L302,C99) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "7f283bae-74fc-4561-b356-5bd932f0f5a4", 128441558, 
                    "CodeInspectionFileIssue/MessageNameSymbol", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 302, "SourceColumnStart" -> 
                    99, "SourceLineEnd" -> 302, "SourceColumnEnd" -> 100, 
                    "Message" -> 
                    "Expected a symbol as first operand to ``MessageName``.\!\
\(\*StyleBox[\"\\\" (L302,C99) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{302, 99}, {302, 100}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L302,C99) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "64d43152-ca70-4320-a36c-9517a9bddf53", 206336749, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 206336749, "CellObject" -> 
                    CellObject[
                    "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1", 
                    "358a8ac1-5f7b-4241-80cd-cb51e0c4e034"], 
                    "CellSerialNumber" -> 12202, "CellSize" -> {1004, 693}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 52, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    206336749]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "95a01c3a-836b-453e-aced-b475efde8e4f", 1522180862, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 1522180862, "CellObject" -> 
                    CellObject[
                    "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a", 
                    "a49ff670-e728-4d63-a922-8bbb5ea2ab26"], 
                    "CellSerialNumber" -> 12206, "CellSize" -> {904, 607}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 55, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1522180862]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1f399815-0f7a-4bba-8bc5-03aefa0e5d75", 1440152806, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 1440152806, "CellObject" -> 
                    CellObject[
                    "cb9b2eb6-d792-4f60-9187-060dcfc8bacf", 
                    "8c61fb3e-5f29-4bf0-8de5-dcd692199f72"], 
                    "CellSerialNumber" -> 12208, "CellSize" -> {904, 998}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "cb9b2eb6-d792-4f60-9187-060dcfc8bacf", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 58, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1440152806]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d59c4234-fe72-4e72-94f9-c06be0928c5d"]]]]]], Appearance -> 
                   None, BoxID -> "d59c4234-fe72-4e72-94f9-c06be0928c5d", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.893598159759609`16.34292611713384*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "11", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    
                    TemplateBox[{
                    "\"The same symbol occurs on LHS and RHS of \"", 
                    StyleBox[
                    "Rule", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L255,C38) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "881a6092-4ea1-47f5-9812-56e89c82ec92", 128441558, 
                    "CodeInspectionFileIssue/PatternRule", <|
                    "AdditionalSources" -> {{{255, 44}, {255, 45}}}, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 255, "SourceColumnStart" -> 
                    38, "SourceLineEnd" -> 255, "SourceColumnEnd" -> 39, 
                    "Message" -> 
                    "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{255, 38}, {255, 39}}, 
                    "AdditionalSources" -> {{{255, 44}, {255, 45}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L154,C7) \\\\\
\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e20bf597-97d6-4acb-a272-237286c532fc", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 154, "SourceColumnStart" -> 
                    7, "SourceLineEnd" -> 154, "SourceColumnEnd" -> 14, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L155,C1) \\\\\
\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "0ac3d1a3-d5e8-49c5-9c1d-f0c820d66f6a", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 155, "SourceColumnStart" -> 
                    1, "SourceLineEnd" -> 155, "SourceColumnEnd" -> 8, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L177,C46) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3d75f514-421d-470f-a7ae-e3145aa13f96", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 177, "SourceColumnStart" -> 
                    46, "SourceLineEnd" -> 177, "SourceColumnEnd" -> 53, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L219,C60) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "627b7db3-76b2-460f-8fab-073780813cde", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 219, "SourceColumnStart" -> 
                    60, "SourceLineEnd" -> 219, "SourceColumnEnd" -> 67, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{
                    StyleBox[
                    "SymbolQ", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" does not exist in \"", 
                    StyleBox[
                    "System`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" context.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L236,C29) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f40ae55e-1c66-4598-97c2-761df239cefe", 128441558, 
                    "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                    "Argument" -> "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 236, "SourceColumnStart" -> 
                    29, "SourceLineEnd" -> 236, "SourceColumnEnd" -> 36, 
                    "Message" -> 
                    "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected a symbol as first operand to \"", 
                    StyleBox[
                    "MessageName", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L262,C101) \\\\\\\"\\\
\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "dab37c46-d906-4391-8664-5161b4d3c548", 128441558, 
                    "CodeInspectionFileIssue/MessageNameSymbol", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 262, "SourceColumnStart" -> 
                    101, "SourceLineEnd" -> 262, "SourceColumnEnd" -> 102, 
                    "Message" -> 
                    "Expected a symbol as first operand to ``MessageName``.\!\
\(\*StyleBox[\"\\\" (L262,C101) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{262, 101}, {262, 102}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L262,C101) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected a symbol as first operand to \"", 
                    StyleBox[
                    "MessageName", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L302,C99) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "7f283bae-74fc-4561-b356-5bd932f0f5a4", 128441558, 
                    "CodeInspectionFileIssue/MessageNameSymbol", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 302, "SourceColumnStart" -> 
                    99, "SourceLineEnd" -> 302, "SourceColumnEnd" -> 100, 
                    "Message" -> 
                    "Expected a symbol as first operand to ``MessageName``.\!\
\(\*StyleBox[\"\\\" (L302,C99) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{302, 99}, {302, 100}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L302,C99) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    128441558]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "64d43152-ca70-4320-a36c-9517a9bddf53", 206336749, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 206336749, "CellObject" -> 
                    CellObject[
                    "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1", 
                    "358a8ac1-5f7b-4241-80cd-cb51e0c4e034"], 
                    "CellSerialNumber" -> 12202, "CellSize" -> {1004, 693}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 52, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    206336749]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "95a01c3a-836b-453e-aced-b475efde8e4f", 1522180862, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 1522180862, "CellObject" -> 
                    CellObject[
                    "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a", 
                    "a49ff670-e728-4d63-a922-8bbb5ea2ab26"], 
                    "CellSerialNumber" -> 12206, "CellSize" -> {904, 607}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 55, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1522180862]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1f399815-0f7a-4bba-8bc5-03aefa0e5d75", 1440152806, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 1440152806, "CellObject" -> 
                    CellObject[
                    "cb9b2eb6-d792-4f60-9187-060dcfc8bacf", 
                    "8c61fb3e-5f29-4bf0-8de5-dcd692199f72"], 
                    "CellSerialNumber" -> 12208, "CellSize" -> {904, 998}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "cb9b2eb6-d792-4f60-9187-060dcfc8bacf", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 58, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1440152806]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d59c4234-fe72-4e72-94f9-c06be0928c5d"]]]]]], Appearance -> 
                   None, BoxID -> "d59c4234-fe72-4e72-94f9-c06be0928c5d", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AntonAntonov/CallGraph\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AntonAntonov/CallGraph\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"c22b40e0-50bb-4020-ae54-e9879628c016\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"4648\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWM1u20YQtqx/WVHcxP09CYTRogeliuG4Ti+\
uTFuOgdgRtErSoiiQFTmSFiWXxO7Sjlr0EXrqtYe+\
VXtuH6CP0M7yR5IpB3BlBe1BPIjCzu7MtzPzzQw4yMhSl14eeq9BDvLynVOuQPgCFFXM47g8yMhC19\
MbBjmZe8qkGqzLQo8OcYUUSWBZICXZIIHrUjF+AtQmmW8GWbl5NObUZdaZZwcO6OPrk+\
NZAkrWemMfJKhXng98e1vm29SRkEi3Eim4fbAJwoHtbZLvov4x7tnoges7uBghjBRn5d0O5UDAAUt5\
4qrNXBdhJEbysngimH31cPIuaiVaVJDlw0CpxA2V+EaR3o/\
axx3BLhDCq7bwuDrmdhekFwgLSLl9fMiUS31JNmPH4KFneE8QGryGcgQOHYMta5GJdsAt7fE3eSfXE\
wFMrlFp+T5QQTk6P3fu8amkfEglEDV2YLCWunv5+\
II6AUXPyHIrUJ6LIbYm0sIZqJFnk0pHAPpWsYsZpS2HDbkLXCUOlQUTdKYk7+\
nWU5cOgbDvAT1WjD02OXXFbr7HXJBiLXyqX05W8GDVDIRAxS8QMJA7bfSvSf0nwIYjDSHf8S7RZkZu\
tfrScwIFs/vlnTM65GzArDCHzb8x3KW2oG4Y1Kwshe7R6Zs3/vjlZwMVlo+YwJzRd0Z59+\
TQ9BxPiPfD57cDcT98/jwQX4XP7wfmh5MbV4kSzH/\
GT7kfqGkWR8KaidARWIfaNuPDtLgSwgrxpOJYDSVnVAwZl7NprN/mmrmW/\
v9mLIVpsid6MpN3wu1smttpksVHSdk4Q8JjjA2SM76oG6SCGo5gQANHkXfjbD9V4LY496IqQrJ//\
fTrTNX41PgaeVL3qeWAqouYNXUm631AJ9X9oO8wOQLbmNQVrfA2qAvGObpzccgfGC2OLA1/\
vIvPTOo4J4L6oxTCJA6bscPneJPsIEXMsMDlcuZSEUVyT2Ew3ZZDpPN7rqFvRS9hTQEF6SS7G4PRCE\
Ni3hjLvJ2bA0qsEgyzzvwbWzXX/72xmaqXS1W9LTLyLjUt+\
NAcYcm0dNVKu2jjPMA2I5Bu383JaljmkcBYH5jU5SQ7jXKoeswVfR1ROH30LadBtuf5/\
98E2NQxcRiHjidZ3NqiAGfMzGRX1Nf+k35sOp5cuB+nC/mqIa8a8gINubxqyG+1Id8K4fPnp0eLI/\
zYsHZ2+rtNaDYeNfv9xm5zp9mg8Gi3AY/3P3+8t7NvNR/uLQ9vzUjqnS5Vi+\
MuGZ0wD5aHrGK8pIJrti2MasZsojXzA8n8uDSMZeMFFk80vLjjisbDB80HzWVGlAR9l0kN6zaZWDB2\
93b3l4dr04iqsykgtLc4srD7Lw1X3kD54mC2JgSaun0136/m+\
9V8v8B8P50106PzNZPpjHpSjfmmh34nPZzfv/\
JRMRouk7GaZL7F7ZMvkvfmydwqNUgxHpbIJzcceRokpycV8t718waK9ZhAtm/\
S7BukOtujSSHqtA1SShpkchkEGvcjkg+7SkM7ZtoMSE6X9AapXa3E6c+\
E0adQ2nfmcqZ0bLNrBfeiMy+ZGsWjsoy0/gN4pX7k"}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"AntonAntonov/CallGraph\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztW31sFMcVv/Odz/gTTBzSJml1WqwqrWL7Yj6D1NzZZ5+\
NysfJY0MSIPXe3tzd4r3dZWbP56MSchtUKU1KaYGGpg0xbalS/\
qgIUiXybZpWaRU1lShtrdI2dghRURpAVZISlDadmb2521sf4gAH8sc+Rbd5M2/m/d6bNx+\
8JyfceN6AmO3WxiBOVOPm1aoBkY6gIRqyppLmhBv7BjQqkPBi7xoZG4kq7BsUk6QFNA1ArGWQBNfHt\
kLJAPUgk06LKNcPxThwb0p48IKenCqmZWmtFs8okM5SVZjFA6CBmwZzOsTQGNZ0qLa24uqIqGDIe1t\
4L0zHYBwQVLC1FVQPkPlzRKZ+EKZ1hTSaQM2JPXh+\
VFQhgAqBpKFSnd4BAoMrqcY1fUiOlw7m3xo6Ce3y4drujGFwb9TlLTLnvT3SG0XyKIEwHEGaavSqce\
4TUBvp7ZaNtKhjsCDvGDJoPbETIgqeQumBipiDcdxkqohkVIk6/\
nLe8Q6iDCyYUdel61BEoipB7F2nqcWe2m4RQ2DkFJhw2Wyv7R0VlYxIPINruzKGliYrLRV6fWuhkdL\
ioC6KIPGtIY9aJu1S5KSahqrBHYp9YUgDhn+\
LoqvTYhICeTskHqvJe6wwqkRv9aCchhi5GDWECi1kYEM4gxCZeAMBDEFjhPg3LOr9UE6mKITqqJYlO\
t24pSuGNSVjQKs8blwrJlU5IUsslMMfkzWdx1xirlx9HxL1lCxhyjbnneTGtYOkbUSFGKOvtfyib2Z\
7PFgIH7JXIqIEIxpKF9rIpAN93WFN0RB6+\
SVK54IowGg6iD7L6HdB6oX1uijJRi5v6QU6bVNEVhQYJ7BHoWWHHXdVVXtcVS6Xu/\
jfZdp89jazuZE2uz0ewtl+bWxB5eIqXxUDNiGHyO901c+Xhyz85qce3kq/+\
p5JlfEol2ZyQnOWftVtbdjKT716/\
5aQfb6CkhPv3mcdtFsJStZJXa7hlFUp5wug8uMLSqzzESU1piUupnnXgZ/kTGTHR+\
n3ddcxbFriZ5Z8tHuXGrLI3/nS/hET1BtSSf/ZD7qs40vmJ0rvrGJKHmHm7+r/\
b14oagr1926n30s7Ps/49u8Bxvu+PpOy8i7XkZRV3nUivaJkvtdmljEQ/zuH85Yvpd91e0+\
W8AWQef5+z8RmKz/2y7bN1vnG6n+9yapv/1vf2mTFM966cTH9jrzwW8YP9yGB6Y29xXj/\
7S7B6hTOH33yDis/vi+8QraO5/7h83P/cf3R0wezVnzTwjNZK37Oc/s4z+3nPPcPn4/\
7r2S9Kt7nR5+hNBNE399H6UwQXfqQ0tkK9/lxl8ftLdm4xxd73NVm1I73MmDf+\
ZPp2KPvPsgcdumLcSsf2nVoKGSRH3/2o4dC9vEVG9TC6GQQfY7R34No7x5Kp6/\
foPFTUwmrQZzngKe9O7dYDeI8N7hkfMUGfXiR0j+D6Ec/\
pPROED3E6Nz1GzRxaiULtYmLT7FzYTqyhAG88OB7LJR5//hv+iFbEbCov1w/G1+\
xQYsYvR1EfzxB6c05DLnxc6FhCmjyrzMZZtDhB9hK/\
XT8UWzlFxx8kZ3OXP7pLy3bFrKPr9igA09SIpF2G6O/zGXInf+\
HbjWI8xzwhHBIthrEeW5wyfiKDdrM6F9B9NyzlM4G0Q5GcxBy04mP2QqEXnh1jAFufowBbI1tY1ca7\
7+r4Q6DGXD47eFy/Wx8xQYtY3TGYlAnozfnYIX2LWF37PQ28/qIxg6YK/N8KG7lXQf+zQ4FLj9Zt+\
qrIfv4ig0yz4JTQQQYnQ7md9Wfr9+\
gULZv1GoQ5zngI290I6tBnOcGl4yv2KBNjMjhdh8j8vB84geU5uIeOniBrUDolkPslNu98n22l1xb3\
OaTLN8/+bMt7JSbXjg1Uq6fjb+hIecpGkSt8VJrJkdN944/fpGhCzyyk7n/2PsDWsjSvzt8clvILn/\
T0Rei37+T3RzRY5sZymj8D8C6G1wP90dCdvkb+qgpi77xUfNl8uXHGdrJb/7evNAf62HWPP2N1xg/+\
cTr5kvGKn/T0U+LMw9QNP7z7WakvPJjhjLQN8UiyX/yMOPH8CtsTUrkb+\
jtXg79xI4VzJeTU2fp7p04s3QJ448Mfdc8bxs3rqPfqb+9yG6+Evmbj/4DyFAOG3vod39TbZLx+n/\
eYWfR3vfuYt9+/WUTvVU+\
UWPLe9R3YR1KxgDNBoTdhWZv1xj5t34h65RPrHSL0kgSaRk1bkusVEeQmLZnW+\
pY46AsjWB7HubTmAcpA242ovDiglxjWJRSkKdL7L5qAAaS9fXqalXPGLzTV8yseYrrkI8mnk8s9vB8\
4jxhHXHkKr8Abs0nzFYbMN2lqpqZjwSe89+\
eKMrbM4D5CcFnhC7V0FT2o412hEVFYegF4BH8gn1UHhjwCr96XgCDKcPQ8aqODpRP4+\
H2rKYkyAJLipaJt0tauiMqSgo0BqCuYdnQUK4o21FeMWjoz+kQKbI6MjSwBtQRB/\
TAhJhRiilTaqjFE1WCYO+qxH00XVix+4i8aUmpKiK167mK9M0XeiCWyOrTyStXe5tAHeNPUs/\
4kzQbysQug4IF2YJ8NM3KQHIJUEPOokxaxYVMbv5LfmGiKOYlxsyWKZMIraNNPZB4B9ojfn4eDINp2\
T1XxjJbT+WAuFZAz1M1iSvWGq66emWW/LHXdo62gJSWpXteTYZTIhIlmv+1u6h+\
XSYdg2itiEZm9TVFyVgjiqAkY3ogeYqrzKbOqYY4xnTPGvoJh4FnUNM/\
vQGwgK4JOUJglB47ZpHAXGC39T5jFYKbUtkIKxq+5sqG/\
QZ2ShtOacMpbTilDae04ZQ2nNKGU9q4thVyShtOacMpbTilDae04ZQ2nNKGU9pwShtOaWPuShu1Tmn\
DKW1cR2njiigahK/\
AXFZDcXw1gXOZEPLlg8F9N4mVuwUyeRGrAJqIwTpU41CVZIgF0Cj0aFnVP8r2GRUGmViBayaIN8pGC\
kBdRCzfiqtBSkOlaw5cFRnZTDRJGZp7Fa/\
K2ZcL9g3CJxHnN2b7XIP7WoT1SE7Kqqj4B6ACRXwVu6RR6Az414o5f2egc4lwbYu3hrgfG/4hPU7+\
50aqrhc2QISvanvWCPe0B9oD16RunjA0tLqncl1fEKTOztjSAAy0LQvEYm1LA52BNhEuW9oG71254t\
7lnSulwD3Ly0FxKp5OxdOpeF6x4ll8ddqLiWWegZbpQUN+\
x9EyqJKwlStvKfmDNfOZyQuNwL2FaLX90VuXrw146dsOLCp/\
xJNuenKA1krOgzbQwKenNgGfeaO0gZr8YQeq2RHWBuotDxRwa9lnRxtYWLyK1mjmK5lY4KFXzQp+\
nWWz2dkXmRbbWry7cpgse4eoyx1EdzFczL+wE2PKrHCZ1xuXy3YsNMfQt0OYPPVJPGOzYv1/\
wMKWiA=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.893598159759609`16.34292611713384*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{
                Annotation[
                 Grid[{{
                    Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                    "Heavy"], "", "Your paclet resource is being published"}},
                   Alignment -> {Left, Baseline}, 
                  Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
                 DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
                 "Your paclet resource is being published"]], ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style["", LineBreakWithin -> Automatic, LineIndent -> 0], 
            ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "11", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, 
                    "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"The same symbol occurs on LHS and RHS of ", 
                   Style[
                    RawBoxes["Rule"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "881a6092-4ea1-47f5-9812-56e89c82ec92", 128441558, 
                  "CodeInspectionFileIssue/PatternRule", <|
                  "AdditionalSources" -> {{{255, 44}, {255, 45}}}, "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 255, "SourceColumnStart" -> 
                   38, "SourceLineEnd" -> 255, "SourceColumnEnd" -> 39, 
                   "Message" -> 
                   "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{255, 38}, {255, 39}}, 
                    "AdditionalSources" -> {{{255, 44}, {255, 45}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L255,C38) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{
                   Style[
                    RawBoxes["SymbolQ"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " does not exist in ", 
                   Style[
                    RawBoxes["System`"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " context.\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "e20bf597-97d6-4acb-a272-237286c532fc", 128441558, 
                  "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                  "Argument" -> "SymbolQ", "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 154, "SourceColumnStart" -> 
                   7, "SourceLineEnd" -> 154, "SourceColumnEnd" -> 14, 
                   "Message" -> 
                   "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{154, 7}, {154, 14}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L154,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{
                   Style[
                    RawBoxes["SymbolQ"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " does not exist in ", 
                   Style[
                    RawBoxes["System`"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " context.\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "0ac3d1a3-d5e8-49c5-9c1d-f0c820d66f6a", 128441558, 
                  "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                  "Argument" -> "SymbolQ", "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 155, "SourceColumnStart" -> 
                   1, "SourceLineEnd" -> 155, "SourceColumnEnd" -> 8, 
                   "Message" -> 
                   "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{155, 1}, {155, 8}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L155,C1) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{
                   Style[
                    RawBoxes["SymbolQ"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " does not exist in ", 
                   Style[
                    RawBoxes["System`"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " context.\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "3d75f514-421d-470f-a7ae-e3145aa13f96", 128441558, 
                  "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                  "Argument" -> "SymbolQ", "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 177, "SourceColumnStart" -> 
                   46, "SourceLineEnd" -> 177, "SourceColumnEnd" -> 53, 
                   "Message" -> 
                   "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{177, 46}, {177, 53}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L177,C46) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{
                   Style[
                    RawBoxes["SymbolQ"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " does not exist in ", 
                   Style[
                    RawBoxes["System`"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " context.\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "627b7db3-76b2-460f-8fab-073780813cde", 128441558, 
                  "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                  "Argument" -> "SymbolQ", "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 219, "SourceColumnStart" -> 
                   60, "SourceLineEnd" -> 219, "SourceColumnEnd" -> 67, 
                   "Message" -> 
                   "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{219, 60}, {219, 67}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L219,C60) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{
                   Style[
                    RawBoxes["SymbolQ"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " does not exist in ", 
                   Style[
                    RawBoxes["System`"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " context.\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "f40ae55e-1c66-4598-97c2-761df239cefe", 128441558, 
                  "CodeInspectionFileIssue/BadSymbol/SymbolQ", <|
                  "Argument" -> "SymbolQ", "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 236, "SourceColumnStart" -> 
                   29, "SourceLineEnd" -> 236, "SourceColumnEnd" -> 36, 
                   "Message" -> 
                   "``SymbolQ`` does not exist in **System`** \
context.\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "BadSymbol", 
                    "``SymbolQ`` does not exist in **System`** context.", 
                    "Error", <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    ConfidenceLevel -> 0.5, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with ``Developer`SymbolQ``", 
                    CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{236, 29}, {236, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[
                    Symbol, "Developer`SymbolQ", <||>]|>]}, "Argument" -> 
                    "SymbolQ", "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L236,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Expected a symbol as first operand to ", 
                   Style[
                    RawBoxes["MessageName"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L262,C101) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "dab37c46-d906-4391-8664-5161b4d3c548", 128441558, 
                  "CodeInspectionFileIssue/MessageNameSymbol", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 262, "SourceColumnStart" -> 
                   101, "SourceLineEnd" -> 262, "SourceColumnEnd" -> 102, 
                   "Message" -> 
                   "Expected a symbol as first operand to \
``MessageName``.\!\(\*StyleBox[\"\\\" (L262,C101) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{262, 101}, {262, 102}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L262,C101) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Expected a symbol as first operand to ", 
                   Style[
                    RawBoxes["MessageName"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L302,C99) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "7f283bae-74fc-4561-b356-5bd932f0f5a4", 128441558, 
                  "CodeInspectionFileIssue/MessageNameSymbol", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 302, "SourceColumnStart" -> 
                   99, "SourceLineEnd" -> 302, "SourceColumnEnd" -> 100, 
                   "Message" -> 
                   "Expected a symbol as first operand to \
``MessageName``.\!\(\*StyleBox[\"\\\" (L302,C99) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "MessageNameSymbol", 
                    "Expected a symbol as first operand to ``MessageName``.", 
                    "Error", <|
                    CodeParser`Source -> {{302, 99}, {302, 100}}, 
                    ConfidenceLevel -> 0.95, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/Kernel/CallGraph.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 409002111953695702, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L302,C99) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[128441558]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "64d43152-ca70-4320-a36c-9517a9bddf53", 206336749, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 206336749, "CellObject" -> 
                   CellObject[
                    "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1", 
                    "358a8ac1-5f7b-4241-80cd-cb51e0c4e034"], 
                   "CellSerialNumber" -> 12202, "CellSize" -> {1004, 693}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "74d03ae6-8ae1-4fa0-80e6-ed5cfa757de1",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 52, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[206336749]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "95a01c3a-836b-453e-aced-b475efde8e4f", 1522180862, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 1522180862, "CellObject" -> 
                   CellObject[
                    "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a", 
                    "a49ff670-e728-4d63-a922-8bbb5ea2ab26"], 
                   "CellSerialNumber" -> 12206, "CellSize" -> {904, 607}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "f3ab91b1-8896-4fef-8ee0-3d012d5f6f6a",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 55, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1522180862]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "1f399815-0f7a-4bba-8bc5-03aefa0e5d75", 1440152806, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 1440152806, "CellObject" -> 
                   CellObject[
                    "cb9b2eb6-d792-4f60-9187-060dcfc8bacf", 
                    "8c61fb3e-5f29-4bf0-8de5-dcd692199f72"], 
                   "CellSerialNumber" -> 12208, "CellSize" -> {904, 998}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "cb9b2eb6-d792-4f60-9187-060dcfc8bacf",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 58, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1440152806]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d59c4234-fe72-4e72-94f9-c06be0928c5d"]]]]]], Appearance -> 
             None, BoxID -> "d59c4234-fe72-4e72-94f9-c06be0928c5d"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AntonAntonov/CallGraph\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AntonAntonov/CallGraph\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"c22b40e0-50bb-4020-ae54-e9879628c016\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"4648\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWM1u20YQtqx/WVHcxP09CYTRogeliuG4Ti+\
uTFuOgdgRtErSoiiQFTmSFiWXxO7Sjlr0EXrqtYe+\
VXtuH6CP0M7yR5IpB3BlBe1BPIjCzu7MtzPzzQw4yMhSl14eeq9BDvLynVOuQPgCFFXM47g8yMhC19\
MbBjmZe8qkGqzLQo8OcYUUSWBZICXZIIHrUjF+AtQmmW8GWbl5NObUZdaZZwcO6OPrk+\
NZAkrWemMfJKhXng98e1vm29SRkEi3Eim4fbAJwoHtbZLvov4x7tnoges7uBghjBRn5d0O5UDAAUt5\
4qrNXBdhJEbysngimH31cPIuaiVaVJDlw0CpxA2V+EaR3o/\
axx3BLhDCq7bwuDrmdhekFwgLSLl9fMiUS31JNmPH4KFneE8QGryGcgQOHYMta5GJdsAt7fE3eSfXE\
wFMrlFp+T5QQTk6P3fu8amkfEglEDV2YLCWunv5+\
II6AUXPyHIrUJ6LIbYm0sIZqJFnk0pHAPpWsYsZpS2HDbkLXCUOlQUTdKYk7+\
nWU5cOgbDvAT1WjD02OXXFbr7HXJBiLXyqX05W8GDVDIRAxS8QMJA7bfSvSf0nwIYjDSHf8S7RZkZu\
tfrScwIFs/vlnTM65GzArDCHzb8x3KW2oG4Y1Kwshe7R6Zs3/vjlZwMVlo+YwJzRd0Z59+\
TQ9BxPiPfD57cDcT98/jwQX4XP7wfmh5MbV4kSzH/\
GT7kfqGkWR8KaidARWIfaNuPDtLgSwgrxpOJYDSVnVAwZl7NprN/mmrmW/\
v9mLIVpsid6MpN3wu1smttpksVHSdk4Q8JjjA2SM76oG6SCGo5gQANHkXfjbD9V4LY496IqQrJ//\
fTrTNX41PgaeVL3qeWAqouYNXUm631AJ9X9oO8wOQLbmNQVrfA2qAvGObpzccgfGC2OLA1/\
vIvPTOo4J4L6oxTCJA6bscPneJPsIEXMsMDlcuZSEUVyT2Ew3ZZDpPN7rqFvRS9hTQEF6SS7G4PRCE\
Ni3hjLvJ2bA0qsEgyzzvwbWzXX/72xmaqXS1W9LTLyLjUt+\
NAcYcm0dNVKu2jjPMA2I5Bu383JaljmkcBYH5jU5SQ7jXKoeswVfR1ROH30LadBtuf5/\
98E2NQxcRiHjidZ3NqiAGfMzGRX1Nf+k35sOp5cuB+nC/mqIa8a8gINubxqyG+1Id8K4fPnp0eLI/\
zYsHZ2+rtNaDYeNfv9xm5zp9mg8Gi3AY/3P3+8t7NvNR/uLQ9vzUjqnS5Vi+\
MuGZ0wD5aHrGK8pIJrti2MasZsojXzA8n8uDSMZeMFFk80vLjjisbDB80HzWVGlAR9l0kN6zaZWDB2\
93b3l4dr04iqsykgtLc4srD7Lw1X3kD54mC2JgSaun0136/m+\
9V8v8B8P50106PzNZPpjHpSjfmmh34nPZzfv/\
JRMRouk7GaZL7F7ZMvkvfmydwqNUgxHpbIJzcceRokpycV8t718waK9ZhAtm/\
S7BukOtujSSHqtA1SShpkchkEGvcjkg+7SkM7ZtoMSE6X9AapXa3E6c+\
E0adQ2nfmcqZ0bLNrBfeiMy+ZGsWjsoy0/gN4pX7k"}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"AntonAntonov/CallGraph\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztW31sFMcVv/Odz/gTTBzSJml1WqwqrWL7Yj6D1NzZZ5+\
NysfJY0MSIPXe3tzd4r3dZWbP56MSchtUKU1KaYGGpg0xbalS/\
qgIUiXybZpWaRU1lShtrdI2dghRURpAVZISlDadmb2521sf4gAH8sc+Rbd5M2/m/d6bNx+\
8JyfceN6AmO3WxiBOVOPm1aoBkY6gIRqyppLmhBv7BjQqkPBi7xoZG4kq7BsUk6QFNA1ArGWQBNfHt\
kLJAPUgk06LKNcPxThwb0p48IKenCqmZWmtFs8okM5SVZjFA6CBmwZzOsTQGNZ0qLa24uqIqGDIe1t\
4L0zHYBwQVLC1FVQPkPlzRKZ+EKZ1hTSaQM2JPXh+\
VFQhgAqBpKFSnd4BAoMrqcY1fUiOlw7m3xo6Ce3y4drujGFwb9TlLTLnvT3SG0XyKIEwHEGaavSqce\
4TUBvp7ZaNtKhjsCDvGDJoPbETIgqeQumBipiDcdxkqohkVIk6/\
nLe8Q6iDCyYUdel61BEoipB7F2nqcWe2m4RQ2DkFJhw2Wyv7R0VlYxIPINruzKGliYrLRV6fWuhkdL\
ioC6KIPGtIY9aJu1S5KSahqrBHYp9YUgDhn+\
LoqvTYhICeTskHqvJe6wwqkRv9aCchhi5GDWECi1kYEM4gxCZeAMBDEFjhPg3LOr9UE6mKITqqJYlO\
t24pSuGNSVjQKs8blwrJlU5IUsslMMfkzWdx1xirlx9HxL1lCxhyjbnneTGtYOkbUSFGKOvtfyib2Z\
7PFgIH7JXIqIEIxpKF9rIpAN93WFN0RB6+\
SVK54IowGg6iD7L6HdB6oX1uijJRi5v6QU6bVNEVhQYJ7BHoWWHHXdVVXtcVS6Xu/\
jfZdp89jazuZE2uz0ewtl+bWxB5eIqXxUDNiGHyO901c+Xhyz85qce3kq/+\
p5JlfEol2ZyQnOWftVtbdjKT716/\
5aQfb6CkhPv3mcdtFsJStZJXa7hlFUp5wug8uMLSqzzESU1piUupnnXgZ/kTGTHR+\
n3ddcxbFriZ5Z8tHuXGrLI3/nS/hET1BtSSf/ZD7qs40vmJ0rvrGJKHmHm7+r/\
b14oagr1926n30s7Ps/49u8Bxvu+PpOy8i7XkZRV3nUivaJkvtdmljEQ/zuH85Yvpd91e0+\
W8AWQef5+z8RmKz/2y7bN1vnG6n+9yapv/1vf2mTFM966cTH9jrzwW8YP9yGB6Y29xXj/\
7S7B6hTOH33yDis/vi+8QraO5/7h83P/cf3R0wezVnzTwjNZK37Oc/s4z+3nPPcPn4/\
7r2S9Kt7nR5+hNBNE399H6UwQXfqQ0tkK9/lxl8ftLdm4xxd73NVm1I73MmDf+\
ZPp2KPvPsgcdumLcSsf2nVoKGSRH3/2o4dC9vEVG9TC6GQQfY7R34No7x5Kp6/\
foPFTUwmrQZzngKe9O7dYDeI8N7hkfMUGfXiR0j+D6Ec/\
pPROED3E6Nz1GzRxaiULtYmLT7FzYTqyhAG88OB7LJR5//hv+iFbEbCov1w/G1+\
xQYsYvR1EfzxB6c05DLnxc6FhCmjyrzMZZtDhB9hK/\
XT8UWzlFxx8kZ3OXP7pLy3bFrKPr9igA09SIpF2G6O/zGXInf+\
HbjWI8xzwhHBIthrEeW5wyfiKDdrM6F9B9NyzlM4G0Q5GcxBy04mP2QqEXnh1jAFufowBbI1tY1ca7\
7+r4Q6DGXD47eFy/Wx8xQYtY3TGYlAnozfnYIX2LWF37PQ28/qIxg6YK/N8KG7lXQf+zQ4FLj9Zt+\
qrIfv4ig0yz4JTQQQYnQ7md9Wfr9+\
gULZv1GoQ5zngI290I6tBnOcGl4yv2KBNjMjhdh8j8vB84geU5uIeOniBrUDolkPslNu98n22l1xb3\
OaTLN8/+bMt7JSbXjg1Uq6fjb+hIecpGkSt8VJrJkdN944/fpGhCzyyk7n/2PsDWsjSvzt8clvILn/\
T0Rei37+T3RzRY5sZymj8D8C6G1wP90dCdvkb+qgpi77xUfNl8uXHGdrJb/7evNAf62HWPP2N1xg/+\
cTr5kvGKn/T0U+LMw9QNP7z7WakvPJjhjLQN8UiyX/yMOPH8CtsTUrkb+\
jtXg79xI4VzJeTU2fp7p04s3QJ448Mfdc8bxs3rqPfqb+9yG6+Evmbj/4DyFAOG3vod39TbZLx+n/\
eYWfR3vfuYt9+/WUTvVU+\
UWPLe9R3YR1KxgDNBoTdhWZv1xj5t34h65RPrHSL0kgSaRk1bkusVEeQmLZnW+\
pY46AsjWB7HubTmAcpA242ovDiglxjWJRSkKdL7L5qAAaS9fXqalXPGLzTV8yseYrrkI8mnk8s9vB8\
4jxhHXHkKr8Abs0nzFYbMN2lqpqZjwSe89+\
eKMrbM4D5CcFnhC7V0FT2o412hEVFYegF4BH8gn1UHhjwCr96XgCDKcPQ8aqODpRP4+\
H2rKYkyAJLipaJt0tauiMqSgo0BqCuYdnQUK4o21FeMWjoz+kQKbI6MjSwBtQRB/\
TAhJhRiilTaqjFE1WCYO+qxH00XVix+4i8aUmpKiK167mK9M0XeiCWyOrTyStXe5tAHeNPUs/\
4kzQbysQug4IF2YJ8NM3KQHIJUEPOokxaxYVMbv5LfmGiKOYlxsyWKZMIraNNPZB4B9ojfn4eDINp2\
T1XxjJbT+WAuFZAz1M1iSvWGq66emWW/LHXdo62gJSWpXteTYZTIhIlmv+1u6h+\
XSYdg2itiEZm9TVFyVgjiqAkY3ogeYqrzKbOqYY4xnTPGvoJh4FnUNM/\
vQGwgK4JOUJglB47ZpHAXGC39T5jFYKbUtkIKxq+5sqG/\
QZ2ShtOacMpbTilDae04ZQ2nNKGU9q4thVyShtOacMpbTilDae04ZQ2nNKGU9pwShtOaWPuShu1Tmn\
DKW1cR2njiigahK/\
AXFZDcXw1gXOZEPLlg8F9N4mVuwUyeRGrAJqIwTpU41CVZIgF0Cj0aFnVP8r2GRUGmViBayaIN8pGC\
kBdRCzfiqtBSkOlaw5cFRnZTDRJGZp7Fa/\
K2ZcL9g3CJxHnN2b7XIP7WoT1SE7Kqqj4B6ACRXwVu6RR6Az414o5f2egc4lwbYu3hrgfG/4hPU7+\
50aqrhc2QISvanvWCPe0B9oD16RunjA0tLqncl1fEKTOztjSAAy0LQvEYm1LA52BNhEuW9oG71254t\
7lnSulwD3Ly0FxKp5OxdOpeF6x4ll8ddqLiWWegZbpQUN+\
x9EyqJKwlStvKfmDNfOZyQuNwL2FaLX90VuXrw146dsOLCp/\
xJNuenKA1krOgzbQwKenNgGfeaO0gZr8YQeq2RHWBuotDxRwa9lnRxtYWLyK1mjmK5lY4KFXzQp+\
nWWz2dkXmRbbWry7cpgse4eoyx1EdzFczL+wE2PKrHCZ1xuXy3YsNMfQt0OYPPVJPGOzYv1/\
wMKWiA=="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2022.09.16", "CreationTimestamp" -> 
  3.893594991313708`16.34292576372317*^9, "UpdatedTimestamp" -> 
  3.893594991313758`16.342925763723173*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "92ce7a395baccd06b35bc67811577346991d7e35"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "AutoUpdate" -> True, "Paclet" -> "None", 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Volumes/Macintosh \
HD/Users/antonov/WL-CallGraph-paclet/build/AntonAntonov__CallGraph-1.0.0.\
paclet", "FileHashes" -> ByteArray[CompressedData["
1:eJwBJQPa/CFib1JiAQAAABgDAAA4Qzp4nJ2VW0gUURiAxVtZGUohamhhi2Z1
dsVbSSy4uqsu63o7bigYOjtzdnZ09ozNJS95SYmoHizyoYtlCEpEQkgUXYh6
2pekBKNMhawXKX2JfLCHpNk2HFvXcd2nA2fO/33M/5//P4YEADONHCm5EBYJ
keGwzoRplhGcumKJoZCgKyRYluaJZqdA8ujvCS22G0IBjIScxJOodMI60jt4
6n2SvFNN8DQSS+/GmqY/p0fsBTDFP9qMKdSqq8/Qkg5hDUoIL+MwUjiDn/JN
2UNID2CqGkdAtOeTUJ+lwnrunN2PLsRsA/BQICwtjbAKLdY61zPcOp8HIPRP
q0IOxCNMogqClpMI21x2jvUms9iTTANFVfAMFo3IwWDGEyoUSKIoLz7ZvZ7j
oD/+TjqguN3t/exi0ek0AM1Bu22C/MmKBM/ia2wdcFk+aI5HK8Za88Ctc7kL
jQBWBmcsYAo5luMLGZ6UWII3ueyIohhM+5jPnz2R9qPzYLdizsiuPnP/9kw8
gHnBmX0MC/hpV0dCDqkYhnLTXpaMhyUDaNySoUjCpOecETUj+eZgklmXyJ6u
e68jHksZikwTUjve1DGqAzB/S7IyjkLy/ZRIRJmo9RUL29dV18BPiYroYt3R
uDnrsgbAgmBFZuxPdcxNk8OXl/RrGmuibdTUO2MHsDBYVbkk+nOllvRF3uDf
NSiuF874O+XWTiOAh/27ICJ40ult5RzvgEEqbZz4PTuqe3d0+FZ4agPr6ux8
wpvwSAOA6QHyBEYFF5L4a9keOyr3PggE52AQSwnaFlYF+dB9Zedi1QMZmR0I
kvGsViQSFCES6uS37rGTzuqaHAC1gZBXh3amCnNkx6Vvkr1xV4DMFp4RkZbl
yCYVJmMrT6n5arMAmLYBsxmx7L8XKmuTgvf93P4I6pPldB7ZFLb6x3kqwFcT
S5NP2tpDNy75euAmb9UzfdzKtaUvpQDusSAeI3bNdPyvoqVR0zZucsxqUGKV
negKgmSRaMYOzidqZVDTY+mjK5UoZSfWG2UlMONAgqh+g9qm+ltuCjHsH5sT
IO3TE4FB
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], CurrentValue[
                    RSNB`cell, {TaggingRules, "Refreshing"}] = False]], 
                    Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Mac OS X ARM (64-bit) (January 30, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"1026fbd5-0782-46c1-9a04-13888892f30e"
]

